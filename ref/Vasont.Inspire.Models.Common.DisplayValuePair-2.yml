### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Common.DisplayValuePair`2
  commentId: T:Vasont.Inspire.Models.Common.DisplayValuePair`2
  id: DisplayValuePair`2
  parent: Vasont.Inspire.Models.Common
  children:
  - Vasont.Inspire.Models.Common.DisplayValuePair`2.Display
  - Vasont.Inspire.Models.Common.DisplayValuePair`2.Value
  langs:
  - csharp
  - vb
  name: DisplayValuePair<N, V>
  nameWithType: DisplayValuePair<N, V>
  fullName: Vasont.Inspire.Models.Common.DisplayValuePair<N, V>
  type: Class
  source:
    remote:
      path: src/Common/DisplayValuePair.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DisplayValuePair
    path: Common/DisplayValuePair.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Common
  summary: "\nThis class represents a base for displaying a name value pair combination.\n"
  example: []
  syntax:
    content: public abstract class DisplayValuePair<N, V>
    typeParameters:
    - id: N
      description: Contains the display data type.
    - id: V
      description: Contains the value data type.
    content.vb: Public MustInherit Class DisplayValuePair(Of N, V)
  inheritance:
  - System.Object
  derivedClasses:
  - Vasont.Inspire.Models.Translations.TranslationJobStateModel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DisplayValuePair(Of N, V)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Vasont.Inspire.Models.Common.DisplayValuePair(Of N, V)
  name.vb: DisplayValuePair(Of N, V)
- uid: Vasont.Inspire.Models.Common.DisplayValuePair`2.Display
  commentId: P:Vasont.Inspire.Models.Common.DisplayValuePair`2.Display
  id: Display
  parent: Vasont.Inspire.Models.Common.DisplayValuePair`2
  langs:
  - csharp
  - vb
  name: Display
  nameWithType: DisplayValuePair<N, V>.Display
  fullName: Vasont.Inspire.Models.Common.DisplayValuePair<N, V>.Display
  type: Property
  source:
    remote:
      path: src/Common/DisplayValuePair.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Display
    path: Common/DisplayValuePair.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Common
  summary: "\nGets or sets the pair display value.\n"
  example: []
  syntax:
    content: public N Display { get; set; }
    parameters: []
    return:
      type: '{N}'
    content.vb: Public Property Display As N
  overload: Vasont.Inspire.Models.Common.DisplayValuePair`2.Display*
  nameWithType.vb: DisplayValuePair(Of N, V).Display
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Vasont.Inspire.Models.Common.DisplayValuePair(Of N, V).Display
- uid: Vasont.Inspire.Models.Common.DisplayValuePair`2.Value
  commentId: P:Vasont.Inspire.Models.Common.DisplayValuePair`2.Value
  id: Value
  parent: Vasont.Inspire.Models.Common.DisplayValuePair`2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DisplayValuePair<N, V>.Value
  fullName: Vasont.Inspire.Models.Common.DisplayValuePair<N, V>.Value
  type: Property
  source:
    remote:
      path: src/Common/DisplayValuePair.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Value
    path: Common/DisplayValuePair.cs
    startLine: 22
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Common
  summary: "\nGets or sets the pair value.\n"
  example: []
  syntax:
    content: public V Value { get; set; }
    parameters: []
    return:
      type: '{V}'
    content.vb: Public Property Value As V
  overload: Vasont.Inspire.Models.Common.DisplayValuePair`2.Value*
  nameWithType.vb: DisplayValuePair(Of N, V).Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Vasont.Inspire.Models.Common.DisplayValuePair(Of N, V).Value
references:
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common.DisplayValuePair`2.Display*
  commentId: Overload:Vasont.Inspire.Models.Common.DisplayValuePair`2.Display
  name: Display
  nameWithType: DisplayValuePair<N, V>.Display
  fullName: Vasont.Inspire.Models.Common.DisplayValuePair<N, V>.Display
  nameWithType.vb: DisplayValuePair(Of N, V).Display
  fullName.vb: Vasont.Inspire.Models.Common.DisplayValuePair(Of N, V).Display
- uid: '{N}'
  commentId: '!:N'
  definition: N
  name: N
  nameWithType: N
  fullName: N
- uid: N
  commentId: '!:N'
  name: N
  nameWithType: N
  fullName: N
- uid: Vasont.Inspire.Models.Common.DisplayValuePair`2.Value*
  commentId: Overload:Vasont.Inspire.Models.Common.DisplayValuePair`2.Value
  name: Value
  nameWithType: DisplayValuePair<N, V>.Value
  fullName: Vasont.Inspire.Models.Common.DisplayValuePair<N, V>.Value
  nameWithType.vb: DisplayValuePair(Of N, V).Value
  fullName.vb: Vasont.Inspire.Models.Common.DisplayValuePair(Of N, V).Value
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: V
  commentId: '!:V'
  name: V
  nameWithType: V
  fullName: V
