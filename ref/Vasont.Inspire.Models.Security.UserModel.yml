### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Security.UserModel
  commentId: T:Vasont.Inspire.Models.Security.UserModel
  id: UserModel
  parent: Vasont.Inspire.Models.Security
  children:
  - Vasont.Inspire.Models.Security.UserModel.#ctor
  - Vasont.Inspire.Models.Security.UserModel.#ctor(System.String,System.String)
  - Vasont.Inspire.Models.Security.UserModel.Active
  - Vasont.Inspire.Models.Security.UserModel.CreatedBy
  - Vasont.Inspire.Models.Security.UserModel.CreatedDate
  - Vasont.Inspire.Models.Security.UserModel.Deletable
  - Vasont.Inspire.Models.Security.UserModel.ExternalUserId
  - Vasont.Inspire.Models.Security.UserModel.Named
  - Vasont.Inspire.Models.Security.UserModel.Notes
  - Vasont.Inspire.Models.Security.UserModel.Roles
  - Vasont.Inspire.Models.Security.UserModel.TimeZone
  - Vasont.Inspire.Models.Security.UserModel.UpdatedBy
  - Vasont.Inspire.Models.Security.UserModel.UpdatedDate
  - Vasont.Inspire.Models.Security.UserModel.UserType
  langs:
  - csharp
  - vb
  name: UserModel
  nameWithType: UserModel
  fullName: Vasont.Inspire.Models.Security.UserModel
  type: Class
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserModel
    path: Security/UserModel.cs
    startLine: 13
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nThis class represents a security user within the application.\n"
  example: []
  syntax:
    content: 'public class UserModel : MinimalUserModel'
    content.vb: >-
      Public Class UserModel
          Inherits MinimalUserModel
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Security.MicroUserModel
  - Vasont.Inspire.Models.Security.MinimalUserModel
  inheritedMembers:
  - Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  - Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  - Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  - Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  - Vasont.Inspire.Models.Security.MicroUserModel.UserId
  - Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  - Vasont.Inspire.Models.Security.MicroUserModel.Email
  - Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  - Vasont.Inspire.Models.Security.MicroUserModel.LastName
  - Vasont.Inspire.Models.Security.MicroUserModel.FullName
  - Vasont.Inspire.Models.Security.MicroUserModel.UserName
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Security.UserModel.#ctor
  commentId: M:Vasont.Inspire.Models.Security.UserModel.#ctor
  id: '#ctor'
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: UserModel()
  nameWithType: UserModel.UserModel()
  fullName: Vasont.Inspire.Models.Security.UserModel.UserModel()
  type: Constructor
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: .ctor
    path: Security/UserModel.cs
    startLine: 20
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nInitializes a new instance of the <xref href=\"Vasont.Inspire.Models.Security.UserModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public UserModel()
    content.vb: Public Sub New
  overload: Vasont.Inspire.Models.Security.UserModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.#ctor(System.String,System.String)
  commentId: M:Vasont.Inspire.Models.Security.UserModel.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: UserModel(String, String)
  nameWithType: UserModel.UserModel(String, String)
  fullName: Vasont.Inspire.Models.Security.UserModel.UserModel(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: .ctor
    path: Security/UserModel.cs
    startLine: 30
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nInitializes a new instance of the <xref href=\"Vasont.Inspire.Models.Security.UserModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public UserModel(string userName, string emailAddress)
    parameters:
    - id: userName
      type: System.String
      description: Contains the user name of the account.
    - id: emailAddress
      type: System.String
      description: Contains the e-mail address of the account.
    content.vb: Public Sub New(userName As String, emailAddress As String)
  overload: Vasont.Inspire.Models.Security.UserModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.ExternalUserId
  commentId: P:Vasont.Inspire.Models.Security.UserModel.ExternalUserId
  id: ExternalUserId
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: ExternalUserId
  nameWithType: UserModel.ExternalUserId
  fullName: Vasont.Inspire.Models.Security.UserModel.ExternalUserId
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExternalUserId
    path: Security/UserModel.cs
    startLine: 46
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the external user identity value.\n"
  example: []
  syntax:
    content: public string ExternalUserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExternalUserId As String
  overload: Vasont.Inspire.Models.Security.UserModel.ExternalUserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.UserType
  commentId: P:Vasont.Inspire.Models.Security.UserModel.UserType
  id: UserType
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: UserType
  nameWithType: UserModel.UserType
  fullName: Vasont.Inspire.Models.Security.UserModel.UserType
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserType
    path: Security/UserModel.cs
    startLine: 51
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user type of the user model.\n"
  example: []
  syntax:
    content: public UserType UserType { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.UserType
    content.vb: Public Property UserType As UserType
  overload: Vasont.Inspire.Models.Security.UserModel.UserType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.TimeZone
  commentId: P:Vasont.Inspire.Models.Security.UserModel.TimeZone
  id: TimeZone
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: TimeZone
  nameWithType: UserModel.TimeZone
  fullName: Vasont.Inspire.Models.Security.UserModel.TimeZone
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: TimeZone
    path: Security/UserModel.cs
    startLine: 56
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user selected time-zone model.\n"
  example: []
  syntax:
    content: public TimeZoneModel TimeZone { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.TimeZoneModel
    content.vb: Public Property TimeZone As TimeZoneModel
  overload: Vasont.Inspire.Models.Security.UserModel.TimeZone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.CreatedDate
  commentId: P:Vasont.Inspire.Models.Security.UserModel.CreatedDate
  id: CreatedDate
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: UserModel.CreatedDate
  fullName: Vasont.Inspire.Models.Security.UserModel.CreatedDate
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedDate
    path: Security/UserModel.cs
    startLine: 61
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the date time when the account was created.\n"
  example: []
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: Vasont.Inspire.Models.Security.UserModel.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.CreatedBy
  commentId: P:Vasont.Inspire.Models.Security.UserModel.CreatedBy
  id: CreatedBy
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: UserModel.CreatedBy
  fullName: Vasont.Inspire.Models.Security.UserModel.CreatedBy
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedBy
    path: Security/UserModel.cs
    startLine: 66
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user model for the creator user.\n"
  example: []
  syntax:
    content: public MinimalUserModel CreatedBy { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MinimalUserModel
    content.vb: Public Property CreatedBy As MinimalUserModel
  overload: Vasont.Inspire.Models.Security.UserModel.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.UpdatedDate
  commentId: P:Vasont.Inspire.Models.Security.UserModel.UpdatedDate
  id: UpdatedDate
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: UpdatedDate
  nameWithType: UserModel.UpdatedDate
  fullName: Vasont.Inspire.Models.Security.UserModel.UpdatedDate
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UpdatedDate
    path: Security/UserModel.cs
    startLine: 71
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the date time when the account was last updated.\n"
  example: []
  syntax:
    content: public DateTime UpdatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property UpdatedDate As Date
  overload: Vasont.Inspire.Models.Security.UserModel.UpdatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.UpdatedBy
  commentId: P:Vasont.Inspire.Models.Security.UserModel.UpdatedBy
  id: UpdatedBy
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: UpdatedBy
  nameWithType: UserModel.UpdatedBy
  fullName: Vasont.Inspire.Models.Security.UserModel.UpdatedBy
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UpdatedBy
    path: Security/UserModel.cs
    startLine: 76
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user model for the updating user.\n"
  example: []
  syntax:
    content: public MinimalUserModel UpdatedBy { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MinimalUserModel
    content.vb: Public Property UpdatedBy As MinimalUserModel
  overload: Vasont.Inspire.Models.Security.UserModel.UpdatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.Roles
  commentId: P:Vasont.Inspire.Models.Security.UserModel.Roles
  id: Roles
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: UserModel.Roles
  fullName: Vasont.Inspire.Models.Security.UserModel.Roles
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Roles
    path: Security/UserModel.cs
    startLine: 81
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of associated roles.\n"
  example: []
  syntax:
    content: public List<MinimalRoleModel> Roles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.MinimalRoleModel}
    content.vb: Public Property Roles As List(Of MinimalRoleModel)
  overload: Vasont.Inspire.Models.Security.UserModel.Roles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.Notes
  commentId: P:Vasont.Inspire.Models.Security.UserModel.Notes
  id: Notes
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: Notes
  nameWithType: UserModel.Notes
  fullName: Vasont.Inspire.Models.Security.UserModel.Notes
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Notes
    path: Security/UserModel.cs
    startLine: 86
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user notes.\n"
  example: []
  syntax:
    content: public string Notes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Notes As String
  overload: Vasont.Inspire.Models.Security.UserModel.Notes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.Active
  commentId: P:Vasont.Inspire.Models.Security.UserModel.Active
  id: Active
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: UserModel.Active
  fullName: Vasont.Inspire.Models.Security.UserModel.Active
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Active
    path: Security/UserModel.cs
    startLine: 91
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the user account is active.\n"
  example: []
  syntax:
    content: public bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: Vasont.Inspire.Models.Security.UserModel.Active*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.Deletable
  commentId: P:Vasont.Inspire.Models.Security.UserModel.Deletable
  id: Deletable
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: Deletable
  nameWithType: UserModel.Deletable
  fullName: Vasont.Inspire.Models.Security.UserModel.Deletable
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Deletable
    path: Security/UserModel.cs
    startLine: 97
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the user can be deleted. Typically set to true if the user model matches the current user. The current user\ncannot delete themselves.\n"
  example: []
  syntax:
    content: public bool Deletable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Deletable As Boolean
  overload: Vasont.Inspire.Models.Security.UserModel.Deletable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserModel.Named
  commentId: P:Vasont.Inspire.Models.Security.UserModel.Named
  id: Named
  parent: Vasont.Inspire.Models.Security.UserModel
  langs:
  - csharp
  - vb
  name: Named
  nameWithType: UserModel.Named
  fullName: Vasont.Inspire.Models.Security.UserModel.Named
  type: Property
  source:
    remote:
      path: src/Security/UserModel.cs
      branch: feature/modelchangesforscheduledpublishing
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Named
    path: Security/UserModel.cs
    startLine: 102
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the user account is named.\n"
  example: []
  syntax:
    content: public bool Named { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Named As Boolean
  overload: Vasont.Inspire.Models.Security.UserModel.Named*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Security.MicroUserModel
  commentId: T:Vasont.Inspire.Models.Security.MicroUserModel
  parent: Vasont.Inspire.Models.Security
  name: MicroUserModel
  nameWithType: MicroUserModel
  fullName: Vasont.Inspire.Models.Security.MicroUserModel
- uid: Vasont.Inspire.Models.Security.MinimalUserModel
  commentId: T:Vasont.Inspire.Models.Security.MinimalUserModel
  parent: Vasont.Inspire.Models.Security
  name: MinimalUserModel
  nameWithType: MinimalUserModel
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  name: DesiredLanguage
  nameWithType: MinimalUserModel.DesiredLanguage
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  name: TimeZoneName
  nameWithType: MinimalUserModel.TimeZoneName
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  name: Locked
  nameWithType: MinimalUserModel.Locked
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.Locked
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  name: LockExpirationDate
  nameWithType: MinimalUserModel.LockExpirationDate
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserId
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UserId
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: UserId
  nameWithType: MicroUserModel.UserId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserId
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: UniqueId
  nameWithType: MicroUserModel.UniqueId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
- uid: Vasont.Inspire.Models.Security.MicroUserModel.Email
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.Email
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: Email
  nameWithType: MicroUserModel.Email
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.Email
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: FirstName
  nameWithType: MicroUserModel.FirstName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FirstName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.LastName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.LastName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: LastName
  nameWithType: MicroUserModel.LastName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.LastName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FullName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.FullName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: FullName
  nameWithType: MicroUserModel.FullName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FullName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UserName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: UserName
  nameWithType: MicroUserModel.UserName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Security.UserModel
  commentId: T:Vasont.Inspire.Models.Security.UserModel
  name: UserModel
  nameWithType: UserModel
  fullName: Vasont.Inspire.Models.Security.UserModel
- uid: Vasont.Inspire.Models.Security.UserModel.#ctor*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.#ctor
  name: UserModel
  nameWithType: UserModel.UserModel
  fullName: Vasont.Inspire.Models.Security.UserModel.UserModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Security.UserModel.ExternalUserId*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.ExternalUserId
  name: ExternalUserId
  nameWithType: UserModel.ExternalUserId
  fullName: Vasont.Inspire.Models.Security.UserModel.ExternalUserId
- uid: Vasont.Inspire.Models.Security.UserModel.UserType*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.UserType
  name: UserType
  nameWithType: UserModel.UserType
  fullName: Vasont.Inspire.Models.Security.UserModel.UserType
- uid: Vasont.Inspire.Models.Security.UserType
  commentId: T:Vasont.Inspire.Models.Security.UserType
  parent: Vasont.Inspire.Models.Security
  name: UserType
  nameWithType: UserType
  fullName: Vasont.Inspire.Models.Security.UserType
- uid: Vasont.Inspire.Models.Security.UserModel.TimeZone*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.TimeZone
  name: TimeZone
  nameWithType: UserModel.TimeZone
  fullName: Vasont.Inspire.Models.Security.UserModel.TimeZone
- uid: Vasont.Inspire.Models.Security.TimeZoneModel
  commentId: T:Vasont.Inspire.Models.Security.TimeZoneModel
  parent: Vasont.Inspire.Models.Security
  name: TimeZoneModel
  nameWithType: TimeZoneModel
  fullName: Vasont.Inspire.Models.Security.TimeZoneModel
- uid: Vasont.Inspire.Models.Security.UserModel.CreatedDate*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.CreatedDate
  name: CreatedDate
  nameWithType: UserModel.CreatedDate
  fullName: Vasont.Inspire.Models.Security.UserModel.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Vasont.Inspire.Models.Security.UserModel.CreatedBy*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.CreatedBy
  name: CreatedBy
  nameWithType: UserModel.CreatedBy
  fullName: Vasont.Inspire.Models.Security.UserModel.CreatedBy
- uid: Vasont.Inspire.Models.Security.UserModel.UpdatedDate*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.UpdatedDate
  name: UpdatedDate
  nameWithType: UserModel.UpdatedDate
  fullName: Vasont.Inspire.Models.Security.UserModel.UpdatedDate
- uid: Vasont.Inspire.Models.Security.UserModel.UpdatedBy*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.UpdatedBy
  name: UpdatedBy
  nameWithType: UserModel.UpdatedBy
  fullName: Vasont.Inspire.Models.Security.UserModel.UpdatedBy
- uid: Vasont.Inspire.Models.Security.UserModel.Roles*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.Roles
  name: Roles
  nameWithType: UserModel.Roles
  fullName: Vasont.Inspire.Models.Security.UserModel.Roles
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.MinimalRoleModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.MinimalRoleModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalRoleModel>
  nameWithType: List<MinimalRoleModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.MinimalRoleModel>
  nameWithType.vb: List(Of MinimalRoleModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.MinimalRoleModel)
  name.vb: List(Of MinimalRoleModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.MinimalRoleModel
    name: MinimalRoleModel
    nameWithType: MinimalRoleModel
    fullName: Vasont.Inspire.Models.Security.MinimalRoleModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.MinimalRoleModel
    name: MinimalRoleModel
    nameWithType: MinimalRoleModel
    fullName: Vasont.Inspire.Models.Security.MinimalRoleModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Security.UserModel.Notes*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.Notes
  name: Notes
  nameWithType: UserModel.Notes
  fullName: Vasont.Inspire.Models.Security.UserModel.Notes
- uid: Vasont.Inspire.Models.Security.UserModel.Active*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.Active
  name: Active
  nameWithType: UserModel.Active
  fullName: Vasont.Inspire.Models.Security.UserModel.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Security.UserModel.Deletable*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.Deletable
  name: Deletable
  nameWithType: UserModel.Deletable
  fullName: Vasont.Inspire.Models.Security.UserModel.Deletable
- uid: Vasont.Inspire.Models.Security.UserModel.Named*
  commentId: Overload:Vasont.Inspire.Models.Security.UserModel.Named
  name: Named
  nameWithType: UserModel.Named
  fullName: Vasont.Inspire.Models.Security.UserModel.Named
