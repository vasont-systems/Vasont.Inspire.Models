### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  commentId: T:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  id: ComponentHistoryQueryModel
  parent: Vasont.Inspire.Models.Versioning
  children:
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName
  - Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText
  langs:
  - csharp
  - vb
  name: ComponentHistoryQueryModel
  nameWithType: ComponentHistoryQueryModel
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  type: Class
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentHistoryQueryModel
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 14
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nThis model class represents parameters passed in from a paging grid listing a component&apos;s history.\n"
  example: []
  syntax:
    content: 'public sealed class ComponentHistoryQueryModel : PaginatedQueryRequestModel'
    content.vb: >-
      Public NotInheritable Class ComponentHistoryQueryModel
          Inherits PaginatedQueryRequestModel
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  inheritedMembers:
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId
  id: ComponentId
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: ComponentId
  nameWithType: ComponentHistoryQueryModel.ComponentId
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentId
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 19
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets the component to retrieve history on.\n"
  example: []
  syntax:
    content: public long ComponentId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ComponentId As Long
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers
  id: IncludeAllUsers
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: IncludeAllUsers
  nameWithType: ComponentHistoryQueryModel.IncludeAllUsers
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IncludeAllUsers
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 24
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets a value indicating whether to include components deleted by other users.\n"
  example: []
  syntax:
    content: public bool IncludeAllUsers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeAllUsers As Boolean
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText
  id: SearchText
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: SearchText
  nameWithType: ComponentHistoryQueryModel.SearchText
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SearchText
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 29
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets a value indicating search text.\n"
  example: []
  syntax:
    content: public string SearchText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SearchText As String
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters
  id: QueryFilters
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: QueryFilters
  nameWithType: ComponentHistoryQueryModel.QueryFilters
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: QueryFilters
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 34
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets an optional list of ad-hoc query built filters\n"
  example: []
  syntax:
    content: public List<AdHocQueryFilterModel> QueryFilters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Search.AdHocQueryFilterModel}
    content.vb: Public Property QueryFilters As List(Of AdHocQueryFilterModel)
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
  id: QueryFiltersWithDisplayValues
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: QueryFiltersWithDisplayValues
  nameWithType: ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: QueryFiltersWithDisplayValues
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 39
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets an optional list of ad-hoc query built filters with the display values\n"
  example: []
  syntax:
    content: public List<AdHocQueryFilterModel> QueryFiltersWithDisplayValues { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Search.AdHocQueryFilterModel}
    content.vb: Public Property QueryFiltersWithDisplayValues As List(Of AdHocQueryFilterModel)
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName
  id: QueryName
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: QueryName
  nameWithType: ComponentHistoryQueryModel.QueryName
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: QueryName
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 44
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets the name of the selected query.\n"
  example: []
  syntax:
    content: public string QueryName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property QueryName As String
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes
  id: FilterByComponentTypes
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: FilterByComponentTypes
  nameWithType: ComponentHistoryQueryModel.FilterByComponentTypes
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FilterByComponentTypes
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 49
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets a comma delimited list of component type document types to add to the query expression.\n"
  example: []
  syntax:
    content: public string FilterByComponentTypes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilterByComponentTypes As String
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes
  commentId: P:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes
  id: FilterByContentTypes
  parent: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel
  langs:
  - csharp
  - vb
  name: FilterByContentTypes
  nameWithType: ComponentHistoryQueryModel.FilterByContentTypes
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes
  type: Property
  source:
    remote:
      path: src/Versioning/ComponentHistoryQueryModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FilterByContentTypes
    path: Versioning/ComponentHistoryQueryModel.cs
    startLine: 54
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets a comma delimited list of content type keys to add to the query expression.\n"
  example: []
  syntax:
    content: public string FilterByContentTypes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilterByContentTypes As String
  overload: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Versioning
  commentId: N:Vasont.Inspire.Models.Versioning
  name: Vasont.Inspire.Models.Versioning
  nameWithType: Vasont.Inspire.Models.Versioning
  fullName: Vasont.Inspire.Models.Versioning
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  commentId: T:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  parent: Vasont.Inspire.Models.Common
  name: PaginatedQueryRequestModel
  nameWithType: PaginatedQueryRequestModel
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Page
  nameWithType: PaginatedQueryRequestModel.Page
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Limit
  nameWithType: PaginatedQueryRequestModel.Limit
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Sort
  nameWithType: PaginatedQueryRequestModel.Sort
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Dir
  nameWithType: PaginatedQueryRequestModel.Dir
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId
  name: ComponentId
  nameWithType: ComponentHistoryQueryModel.ComponentId
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.ComponentId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers
  name: IncludeAllUsers
  nameWithType: ComponentHistoryQueryModel.IncludeAllUsers
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.IncludeAllUsers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText
  name: SearchText
  nameWithType: ComponentHistoryQueryModel.SearchText
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.SearchText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters
  name: QueryFilters
  nameWithType: ComponentHistoryQueryModel.QueryFilters
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFilters
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Search.AdHocQueryFilterModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Search.AdHocQueryFilterModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AdHocQueryFilterModel>
  nameWithType: List<AdHocQueryFilterModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Search.AdHocQueryFilterModel>
  nameWithType.vb: List(Of AdHocQueryFilterModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Search.AdHocQueryFilterModel)
  name.vb: List(Of AdHocQueryFilterModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Search.AdHocQueryFilterModel
    name: AdHocQueryFilterModel
    nameWithType: AdHocQueryFilterModel
    fullName: Vasont.Inspire.Models.Search.AdHocQueryFilterModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Search.AdHocQueryFilterModel
    name: AdHocQueryFilterModel
    nameWithType: AdHocQueryFilterModel
    fullName: Vasont.Inspire.Models.Search.AdHocQueryFilterModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
  name: QueryFiltersWithDisplayValues
  nameWithType: ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryFiltersWithDisplayValues
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName
  name: QueryName
  nameWithType: ComponentHistoryQueryModel.QueryName
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.QueryName
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes
  name: FilterByComponentTypes
  nameWithType: ComponentHistoryQueryModel.FilterByComponentTypes
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByComponentTypes
- uid: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes*
  commentId: Overload:Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes
  name: FilterByContentTypes
  nameWithType: ComponentHistoryQueryModel.FilterByContentTypes
  fullName: Vasont.Inspire.Models.Versioning.ComponentHistoryQueryModel.FilterByContentTypes
