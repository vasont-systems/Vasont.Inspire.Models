### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  commentId: T:Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  id: ProjectWorkflowModel
  parent: Vasont.Inspire.Models.Projects
  children:
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName
  - Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel
  langs:
  - csharp
  - vb
  name: ProjectWorkflowModel
  nameWithType: ProjectWorkflowModel
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  type: Class
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectWorkflowModel
    path: Projects/ProjectWorkflowModel.cs
    startLine: 18
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nThis class is a model representation of a project workflow within the application.\n"
  example: []
  syntax:
    content: public class ProjectWorkflowModel
    content.vb: Public Class ProjectWorkflowModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId
  id: ProjectWorkflowId
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: ProjectWorkflowId
  nameWithType: ProjectWorkflowModel.ProjectWorkflowId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectWorkflowId
    path: Projects/ProjectWorkflowModel.cs
    startLine: 23
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the project workflow.\n"
  example: []
  syntax:
    content: public long ProjectWorkflowId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProjectWorkflowId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId
  id: ProjectId
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: ProjectWorkflowModel.ProjectId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectId
    path: Projects/ProjectWorkflowModel.cs
    startLine: 28
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the associated project.\n"
  example: []
  syntax:
    content: public long ProjectId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProjectId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel
  id: WorkflowModel
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: WorkflowModel
  nameWithType: ProjectWorkflowModel.WorkflowModel
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: WorkflowModel
    path: Projects/ProjectWorkflowModel.cs
    startLine: 33
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the associated workflow model.\n"
  example: []
  syntax:
    content: public WorkflowModel WorkflowModel { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Workflow.WorkflowModel
    content.vb: Public Property WorkflowModel As WorkflowModel
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectWorkflowModel.Name
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Projects/ProjectWorkflowModel.cs
    startLine: 38
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the name of the project workflow.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description
  id: Description
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ProjectWorkflowModel.Description
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Description
    path: Projects/ProjectWorkflowModel.cs
    startLine: 43
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the description of the project workflow.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName
  id: TemplateName
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: TemplateName
  nameWithType: ProjectWorkflowModel.TemplateName
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: TemplateName
    path: Projects/ProjectWorkflowModel.cs
    startLine: 48
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the name of the template that the project workflow was created from.\n"
  example: []
  syntax:
    content: public string TemplateName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TemplateName As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status
  id: Status
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ProjectWorkflowModel.Status
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Status
    path: Projects/ProjectWorkflowModel.cs
    startLine: 53
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the current status of the workflow.\n"
  example: []
  syntax:
    content: public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Status As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State
  id: State
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ProjectWorkflowModel.State
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: State
    path: Projects/ProjectWorkflowModel.cs
    startLine: 58
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the current state of the workflow.\n"
  example: []
  syntax:
    content: public WorkflowState State { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Workflow.WorkflowState
    content.vb: Public Property State As WorkflowState
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText
  id: StateText
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: StateText
  nameWithType: ProjectWorkflowModel.StateText
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: StateText
    path: Projects/ProjectWorkflowModel.cs
    startLine: 63
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the state via text string.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public string StateText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public Property StateText As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate
  id: CreatedDate
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: ProjectWorkflowModel.CreatedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedDate
    path: Projects/ProjectWorkflowModel.cs
    startLine: 73
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the date and time when the workflow was created.\n"
  example: []
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner
  id: Owner
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: ProjectWorkflowModel.Owner
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Owner
    path: Projects/ProjectWorkflowModel.cs
    startLine: 78
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the user model of the user who created the workflow.\n"
  example: []
  syntax:
    content: public MicroUserModel Owner { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MicroUserModel
    content.vb: Public Property Owner As MicroUserModel
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate
  id: DueDate
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: DueDate
  nameWithType: ProjectWorkflowModel.DueDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DueDate
    path: Projects/ProjectWorkflowModel.cs
    startLine: 83
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the date and time when the workflow is due.\n"
  example: []
  syntax:
    content: public DateTime? DueDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property DueDate As Date?
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate
  id: CompletedDate
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: CompletedDate
  nameWithType: ProjectWorkflowModel.CompletedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CompletedDate
    path: Projects/ProjectWorkflowModel.cs
    startLine: 88
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the date and time when the workflow was completed.\n"
  example: []
  syntax:
    content: public DateTime? CompletedDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property CompletedDate As Date?
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId
  id: InitialActivityId
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: InitialActivityId
  nameWithType: ProjectWorkflowModel.InitialActivityId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: InitialActivityId
    path: Projects/ProjectWorkflowModel.cs
    startLine: 93
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the workflow activity to initiate for a new project workflow.\n"
  example: []
  syntax:
    content: public string InitialActivityId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InitialActivityId As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId
  id: InitialActivityUserId
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: InitialActivityUserId
  nameWithType: ProjectWorkflowModel.InitialActivityUserId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: InitialActivityUserId
    path: Projects/ProjectWorkflowModel.cs
    startLine: 98
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the user for workflow activity to initiate for a new project workflow.\n"
  example: []
  syntax:
    content: public long InitialActivityUserId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property InitialActivityUserId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents
  id: InitialComponents
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: InitialComponents
  nameWithType: ProjectWorkflowModel.InitialComponents
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: InitialComponents
    path: Projects/ProjectWorkflowModel.cs
    startLine: 103
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the components that will be applied to the initial project assignment.\n"
  example: []
  syntax:
    content: public List<MinimalComponentModel> InitialComponents { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentModel}
    content.vb: Public Property InitialComponents As List(Of MinimalComponentModel)
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals
  id: Submittals
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowModel
  langs:
  - csharp
  - vb
  name: Submittals
  nameWithType: ProjectWorkflowModel.Submittals
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Submittals
    path: Projects/ProjectWorkflowModel.cs
    startLine: 108
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets a list of project assignment workflow submittals.\n"
  example: []
  syntax:
    content: public List<ProjectWorkflowSubmittalModel> Submittals { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel}
    content.vb: Public Property Submittals As List(Of ProjectWorkflowSubmittalModel)
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Projects
  commentId: N:Vasont.Inspire.Models.Projects
  name: Vasont.Inspire.Models.Projects
  nameWithType: Vasont.Inspire.Models.Projects
  fullName: Vasont.Inspire.Models.Projects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId
  name: ProjectWorkflowId
  nameWithType: ProjectWorkflowModel.ProjectWorkflowId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectWorkflowId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId
  name: ProjectId
  nameWithType: ProjectWorkflowModel.ProjectId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.ProjectId
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel
  name: WorkflowModel
  nameWithType: ProjectWorkflowModel.WorkflowModel
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.WorkflowModel
- uid: Vasont.Inspire.Models.Workflow.WorkflowModel
  commentId: T:Vasont.Inspire.Models.Workflow.WorkflowModel
  parent: Vasont.Inspire.Models.Workflow
  name: WorkflowModel
  nameWithType: WorkflowModel
  fullName: Vasont.Inspire.Models.Workflow.WorkflowModel
- uid: Vasont.Inspire.Models.Workflow
  commentId: N:Vasont.Inspire.Models.Workflow
  name: Vasont.Inspire.Models.Workflow
  nameWithType: Vasont.Inspire.Models.Workflow
  fullName: Vasont.Inspire.Models.Workflow
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name
  name: Name
  nameWithType: ProjectWorkflowModel.Name
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description
  name: Description
  nameWithType: ProjectWorkflowModel.Description
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Description
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName
  name: TemplateName
  nameWithType: ProjectWorkflowModel.TemplateName
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.TemplateName
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status
  name: Status
  nameWithType: ProjectWorkflowModel.Status
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Status
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State
  name: State
  nameWithType: ProjectWorkflowModel.State
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.State
- uid: Vasont.Inspire.Models.Workflow.WorkflowState
  commentId: T:Vasont.Inspire.Models.Workflow.WorkflowState
  parent: Vasont.Inspire.Models.Workflow
  name: WorkflowState
  nameWithType: WorkflowState
  fullName: Vasont.Inspire.Models.Workflow.WorkflowState
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText
  name: StateText
  nameWithType: ProjectWorkflowModel.StateText
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.StateText
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate
  name: CreatedDate
  nameWithType: ProjectWorkflowModel.CreatedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner
  name: Owner
  nameWithType: ProjectWorkflowModel.Owner
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Owner
- uid: Vasont.Inspire.Models.Security.MicroUserModel
  commentId: T:Vasont.Inspire.Models.Security.MicroUserModel
  parent: Vasont.Inspire.Models.Security
  name: MicroUserModel
  nameWithType: MicroUserModel
  fullName: Vasont.Inspire.Models.Security.MicroUserModel
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate
  name: DueDate
  nameWithType: ProjectWorkflowModel.DueDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.DueDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate
  name: CompletedDate
  nameWithType: ProjectWorkflowModel.CompletedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.CompletedDate
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId
  name: InitialActivityId
  nameWithType: ProjectWorkflowModel.InitialActivityId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityId
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId
  name: InitialActivityUserId
  nameWithType: ProjectWorkflowModel.InitialActivityUserId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialActivityUserId
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents
  name: InitialComponents
  nameWithType: ProjectWorkflowModel.InitialComponents
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.InitialComponents
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalComponentModel>
  nameWithType: List<MinimalComponentModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MinimalComponentModel>
  nameWithType.vb: List(Of MinimalComponentModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MinimalComponentModel)
  name.vb: List(Of MinimalComponentModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MinimalComponentModel
    name: MinimalComponentModel
    nameWithType: MinimalComponentModel
    fullName: Vasont.Inspire.Models.Components.MinimalComponentModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MinimalComponentModel
    name: MinimalComponentModel
    nameWithType: MinimalComponentModel
    fullName: Vasont.Inspire.Models.Components.MinimalComponentModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals
  name: Submittals
  nameWithType: ProjectWorkflowModel.Submittals
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowModel.Submittals
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProjectWorkflowSubmittalModel>
  nameWithType: List<ProjectWorkflowSubmittalModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel>
  nameWithType.vb: List(Of ProjectWorkflowSubmittalModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel)
  name.vb: List(Of ProjectWorkflowSubmittalModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel
    name: ProjectWorkflowSubmittalModel
    nameWithType: ProjectWorkflowSubmittalModel
    fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel
    name: ProjectWorkflowSubmittalModel
    nameWithType: ProjectWorkflowSubmittalModel
    fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowSubmittalModel
  - name: )
    nameWithType: )
    fullName: )
