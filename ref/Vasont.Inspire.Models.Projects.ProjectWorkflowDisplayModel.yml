### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  commentId: T:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  id: ProjectWorkflowDisplayModel
  parent: Vasont.Inspire.Models.Projects
  children:
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status
  - Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type
  langs:
  - csharp
  - vb
  name: ProjectWorkflowDisplayModel
  nameWithType: ProjectWorkflowDisplayModel
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  type: Class
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectWorkflowDisplayModel
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 14
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nThis class is a model representation of a project workflow display within the application.\n"
  example: []
  syntax:
    content: public class ProjectWorkflowDisplayModel
    content.vb: Public Class ProjectWorkflowDisplayModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId
  id: ProjectId
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: ProjectWorkflowDisplayModel.ProjectId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectId
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 19
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the associated project.\n"
  example: []
  syntax:
    content: public long ProjectId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProjectId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId
  id: ProjectWorkflowId
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: ProjectWorkflowId
  nameWithType: ProjectWorkflowDisplayModel.ProjectWorkflowId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectWorkflowId
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 24
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the project workflow.\n"
  example: []
  syntax:
    content: public long ProjectWorkflowId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProjectWorkflowId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId
  id: ReviewId
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: ReviewId
  nameWithType: ProjectWorkflowDisplayModel.ReviewId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ReviewId
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 29
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the identity of the associated review.\n"
  example: []
  syntax:
    content: public long ReviewId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ReviewId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectWorkflowDisplayModel.Name
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 34
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the name of the workflow.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description
  id: Description
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ProjectWorkflowDisplayModel.Description
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Description
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 39
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the description of the workflow.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status
  id: Status
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ProjectWorkflowDisplayModel.Status
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Status
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 44
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the current status of the workflow.\n"
  example: []
  syntax:
    content: public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Status As String
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State
  id: State
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ProjectWorkflowDisplayModel.State
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: State
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 49
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the current state of the workflow.\n"
  example: []
  syntax:
    content: public WorkflowState State { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Workflow.WorkflowState
    content.vb: Public Property State As WorkflowState
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type
  id: Type
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ProjectWorkflowDisplayModel.Type
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Type
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 54
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the type of workflow.\n"
  example: []
  syntax:
    content: public WorkflowType Type { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Workflow.WorkflowType
    content.vb: Public Property Type As WorkflowType
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate
  id: CreatedDate
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: ProjectWorkflowDisplayModel.CreatedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedDate
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 59
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the date and time when the workflow was created.\n"
  example: []
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner
  id: Owner
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: ProjectWorkflowDisplayModel.Owner
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Owner
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 64
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the user model of the user who created the workflow.\n"
  example: []
  syntax:
    content: public MicroUserModel Owner { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MicroUserModel
    content.vb: Public Property Owner As MicroUserModel
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate
  id: DueDate
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: DueDate
  nameWithType: ProjectWorkflowDisplayModel.DueDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DueDate
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 69
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the date and time when the workflow is due.\n"
  example: []
  syntax:
    content: public DateTime? DueDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property DueDate As Date?
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate
  commentId: P:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate
  id: CompletedDate
  parent: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel
  langs:
  - csharp
  - vb
  name: CompletedDate
  nameWithType: ProjectWorkflowDisplayModel.CompletedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate
  type: Property
  source:
    remote:
      path: src/Projects/ProjectWorkflowDisplayModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CompletedDate
    path: Projects/ProjectWorkflowDisplayModel.cs
    startLine: 74
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the date and time when the workflow was completed.\n"
  example: []
  syntax:
    content: public DateTime? CompletedDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property CompletedDate As Date?
  overload: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Projects
  commentId: N:Vasont.Inspire.Models.Projects
  name: Vasont.Inspire.Models.Projects
  nameWithType: Vasont.Inspire.Models.Projects
  fullName: Vasont.Inspire.Models.Projects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId
  name: ProjectId
  nameWithType: ProjectWorkflowDisplayModel.ProjectId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId
  name: ProjectWorkflowId
  nameWithType: ProjectWorkflowDisplayModel.ProjectWorkflowId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ProjectWorkflowId
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId
  name: ReviewId
  nameWithType: ProjectWorkflowDisplayModel.ReviewId
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.ReviewId
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name
  name: Name
  nameWithType: ProjectWorkflowDisplayModel.Name
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description
  name: Description
  nameWithType: ProjectWorkflowDisplayModel.Description
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Description
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status
  name: Status
  nameWithType: ProjectWorkflowDisplayModel.Status
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Status
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State
  name: State
  nameWithType: ProjectWorkflowDisplayModel.State
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.State
- uid: Vasont.Inspire.Models.Workflow.WorkflowState
  commentId: T:Vasont.Inspire.Models.Workflow.WorkflowState
  parent: Vasont.Inspire.Models.Workflow
  name: WorkflowState
  nameWithType: WorkflowState
  fullName: Vasont.Inspire.Models.Workflow.WorkflowState
- uid: Vasont.Inspire.Models.Workflow
  commentId: N:Vasont.Inspire.Models.Workflow
  name: Vasont.Inspire.Models.Workflow
  nameWithType: Vasont.Inspire.Models.Workflow
  fullName: Vasont.Inspire.Models.Workflow
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type
  name: Type
  nameWithType: ProjectWorkflowDisplayModel.Type
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Type
- uid: Vasont.Inspire.Models.Workflow.WorkflowType
  commentId: T:Vasont.Inspire.Models.Workflow.WorkflowType
  parent: Vasont.Inspire.Models.Workflow
  name: WorkflowType
  nameWithType: WorkflowType
  fullName: Vasont.Inspire.Models.Workflow.WorkflowType
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate
  name: CreatedDate
  nameWithType: ProjectWorkflowDisplayModel.CreatedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner
  name: Owner
  nameWithType: ProjectWorkflowDisplayModel.Owner
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.Owner
- uid: Vasont.Inspire.Models.Security.MicroUserModel
  commentId: T:Vasont.Inspire.Models.Security.MicroUserModel
  parent: Vasont.Inspire.Models.Security
  name: MicroUserModel
  nameWithType: MicroUserModel
  fullName: Vasont.Inspire.Models.Security.MicroUserModel
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate
  name: DueDate
  nameWithType: ProjectWorkflowDisplayModel.DueDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.DueDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate
  name: CompletedDate
  nameWithType: ProjectWorkflowDisplayModel.CompletedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectWorkflowDisplayModel.CompletedDate
