### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Security.ModuleModel
  commentId: T:Vasont.Inspire.Models.Security.ModuleModel
  id: ModuleModel
  parent: Vasont.Inspire.Models.Security
  children:
  - Vasont.Inspire.Models.Security.ModuleModel.Active
  - Vasont.Inspire.Models.Security.ModuleModel.Description
  - Vasont.Inspire.Models.Security.ModuleModel.ModuleId
  - Vasont.Inspire.Models.Security.ModuleModel.ModuleKey
  - Vasont.Inspire.Models.Security.ModuleModel.Name
  - Vasont.Inspire.Models.Security.ModuleModel.PackageId
  - Vasont.Inspire.Models.Security.ModuleModel.PackageName
  - Vasont.Inspire.Models.Security.ModuleModel.Permissions
  - Vasont.Inspire.Models.Security.ModuleModel.Properties
  langs:
  - csharp
  - vb
  name: ModuleModel
  nameWithType: ModuleModel
  fullName: Vasont.Inspire.Models.Security.ModuleModel
  type: Class
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ModuleModel
    path: Security/ModuleModel.cs
    startLine: 14
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nThis class represents a Module representation for use within the application.\n"
  example: []
  syntax:
    content: 'public class ModuleModel : CreatedUpdaterModelBase'
    content.vb: >-
      Public Class ModuleModel
          Inherits CreatedUpdaterModelBase
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  inheritedMembers:
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Security.ModuleModel.ModuleId
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.ModuleId
  id: ModuleId
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: ModuleId
  nameWithType: ModuleModel.ModuleId
  fullName: Vasont.Inspire.Models.Security.ModuleModel.ModuleId
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ModuleId
    path: Security/ModuleModel.cs
    startLine: 19
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the module identity value.\n"
  example: []
  syntax:
    content: public long ModuleId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ModuleId As Long
  overload: Vasont.Inspire.Models.Security.ModuleModel.ModuleId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.PackageId
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.PackageId
  id: PackageId
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: PackageId
  nameWithType: ModuleModel.PackageId
  fullName: Vasont.Inspire.Models.Security.ModuleModel.PackageId
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: PackageId
    path: Security/ModuleModel.cs
    startLine: 24
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the module package identity\n"
  example: []
  syntax:
    content: public long PackageId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property PackageId As Long
  overload: Vasont.Inspire.Models.Security.ModuleModel.PackageId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.PackageName
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.PackageName
  id: PackageName
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: PackageName
  nameWithType: ModuleModel.PackageName
  fullName: Vasont.Inspire.Models.Security.ModuleModel.PackageName
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: PackageName
    path: Security/ModuleModel.cs
    startLine: 29
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the related package name.\n"
  example: []
  syntax:
    content: public string PackageName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PackageName As String
  overload: Vasont.Inspire.Models.Security.ModuleModel.PackageName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.ModuleKey
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.ModuleKey
  id: ModuleKey
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: ModuleKey
  nameWithType: ModuleModel.ModuleKey
  fullName: Vasont.Inspire.Models.Security.ModuleModel.ModuleKey
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ModuleKey
    path: Security/ModuleModel.cs
    startLine: 34
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the unique module key string.\n"
  example: []
  syntax:
    content: public string ModuleKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModuleKey As String
  overload: Vasont.Inspire.Models.Security.ModuleModel.ModuleKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.Name
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModuleModel.Name
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Name
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Security/ModuleModel.cs
    startLine: 39
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the module title name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Security.ModuleModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.Description
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.Description
  id: Description
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ModuleModel.Description
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Description
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Description
    path: Security/ModuleModel.cs
    startLine: 44
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets an optional module description.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Vasont.Inspire.Models.Security.ModuleModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.Active
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.Active
  id: Active
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: ModuleModel.Active
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Active
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Active
    path: Security/ModuleModel.cs
    startLine: 49
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the module is active.\n"
  example: []
  syntax:
    content: public bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: Vasont.Inspire.Models.Security.ModuleModel.Active*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.Permissions
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.Permissions
  id: Permissions
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: ModuleModel.Permissions
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Permissions
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Permissions
    path: Security/ModuleModel.cs
    startLine: 54
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of module permission associations models.\n"
  example: []
  syntax:
    content: public List<ModulePermissionModel> Permissions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePermissionModel}
    content.vb: Public Property Permissions As List(Of ModulePermissionModel)
  overload: Vasont.Inspire.Models.Security.ModuleModel.Permissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModuleModel.Properties
  commentId: P:Vasont.Inspire.Models.Security.ModuleModel.Properties
  id: Properties
  parent: Vasont.Inspire.Models.Security.ModuleModel
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ModuleModel.Properties
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Properties
  type: Property
  source:
    remote:
      path: src/Security/ModuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Properties
    path: Security/ModuleModel.cs
    startLine: 59
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of module properties.\n"
  example: []
  syntax:
    content: public List<ModulePropertyModel> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePropertyModel}
    content.vb: Public Property Properties As List(Of ModulePropertyModel)
  overload: Vasont.Inspire.Models.Security.ModuleModel.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  commentId: T:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  parent: Vasont.Inspire.Models.Common
  name: CreatedUpdaterModelBase
  nameWithType: CreatedUpdaterModelBase
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: CreatedDate
  nameWithType: CreatedUpdaterModelBase.CreatedDate
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: CreatedBy
  nameWithType: CreatedUpdaterModelBase.CreatedBy
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: UpdatedDate
  nameWithType: CreatedUpdaterModelBase.UpdatedDate
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: UpdatedBy
  nameWithType: CreatedUpdaterModelBase.UpdatedBy
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: Vasont.Inspire.Models.Security.ModuleModel.ModuleId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.ModuleId
  name: ModuleId
  nameWithType: ModuleModel.ModuleId
  fullName: Vasont.Inspire.Models.Security.ModuleModel.ModuleId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Security.ModuleModel.PackageId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.PackageId
  name: PackageId
  nameWithType: ModuleModel.PackageId
  fullName: Vasont.Inspire.Models.Security.ModuleModel.PackageId
- uid: Vasont.Inspire.Models.Security.ModuleModel.PackageName*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.PackageName
  name: PackageName
  nameWithType: ModuleModel.PackageName
  fullName: Vasont.Inspire.Models.Security.ModuleModel.PackageName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Security.ModuleModel.ModuleKey*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.ModuleKey
  name: ModuleKey
  nameWithType: ModuleModel.ModuleKey
  fullName: Vasont.Inspire.Models.Security.ModuleModel.ModuleKey
- uid: Vasont.Inspire.Models.Security.ModuleModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.Name
  name: Name
  nameWithType: ModuleModel.Name
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Name
- uid: Vasont.Inspire.Models.Security.ModuleModel.Description*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.Description
  name: Description
  nameWithType: ModuleModel.Description
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Description
- uid: Vasont.Inspire.Models.Security.ModuleModel.Active*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.Active
  name: Active
  nameWithType: ModuleModel.Active
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Security.ModuleModel.Permissions*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.Permissions
  name: Permissions
  nameWithType: ModuleModel.Permissions
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Permissions
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePermissionModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePermissionModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ModulePermissionModel>
  nameWithType: List<ModulePermissionModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.ModulePermissionModel>
  nameWithType.vb: List(Of ModulePermissionModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.ModulePermissionModel)
  name.vb: List(Of ModulePermissionModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.ModulePermissionModel
    name: ModulePermissionModel
    nameWithType: ModulePermissionModel
    fullName: Vasont.Inspire.Models.Security.ModulePermissionModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.ModulePermissionModel
    name: ModulePermissionModel
    nameWithType: ModulePermissionModel
    fullName: Vasont.Inspire.Models.Security.ModulePermissionModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Security.ModuleModel.Properties*
  commentId: Overload:Vasont.Inspire.Models.Security.ModuleModel.Properties
  name: Properties
  nameWithType: ModuleModel.Properties
  fullName: Vasont.Inspire.Models.Security.ModuleModel.Properties
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePropertyModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePropertyModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ModulePropertyModel>
  nameWithType: List<ModulePropertyModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.ModulePropertyModel>
  nameWithType.vb: List(Of ModulePropertyModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.ModulePropertyModel)
  name.vb: List(Of ModulePropertyModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.ModulePropertyModel
    name: ModulePropertyModel
    nameWithType: ModulePropertyModel
    fullName: Vasont.Inspire.Models.Security.ModulePropertyModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.ModulePropertyModel
    name: ModulePropertyModel
    nameWithType: ModulePropertyModel
    fullName: Vasont.Inspire.Models.Security.ModulePropertyModel
  - name: )
    nameWithType: )
    fullName: )
