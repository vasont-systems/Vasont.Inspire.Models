### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  commentId: T:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  id: MinimalExportComponentModel
  parent: Vasont.Inspire.Models.Transfers
  children:
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing
  - Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate
  langs:
  - csharp
  - vb
  name: MinimalExportComponentModel
  nameWithType: MinimalExportComponentModel
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  type: Class
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MinimalExportComponentModel
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 45
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nThis contains the minimal export component model needed.\n"
  example: []
  syntax:
    content: public class MinimalExportComponentModel
    content.vb: Public Class MinimalExportComponentModel
  inheritance:
  - System.Object
  derivedClasses:
  - Vasont.Inspire.Models.Transfers.ExportComponentModel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId
  id: ChangesetId
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: ChangesetId
  nameWithType: MinimalExportComponentModel.ChangesetId
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ChangesetId
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 50
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the changeset identity.\n"
  example: []
  syntax:
    content: public Guid ChangesetId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property ChangesetId As Guid
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId
  id: ComponentId
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: ComponentId
  nameWithType: MinimalExportComponentModel.ComponentId
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentId
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 55
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the unique identity of the component.\n"
  example: []
  syntax:
    content: public long ComponentId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ComponentId As Long
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName
  id: FileName
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: MinimalExportComponentModel.FileName
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FileName
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 60
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the file name of the component.\n"
  example: []
  syntax:
    content: public string FileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileName As String
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode
  id: LanguageCode
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: LanguageCode
  nameWithType: MinimalExportComponentModel.LanguageCode
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: LanguageCode
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 65
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the language code.\n"
  example: []
  syntax:
    content: public string LanguageCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LanguageCode As String
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType
  id: ComponentType
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: ComponentType
  nameWithType: MinimalExportComponentModel.ComponentType
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentType
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 70
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the component type.\n"
  example: []
  syntax:
    content: public ComponentTypeModel ComponentType { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Components.ComponentTypeModel
    content.vb: Public Property ComponentType As ComponentTypeModel
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements
  id: FilteredElements
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: FilteredElements
  nameWithType: MinimalExportComponentModel.FilteredElements
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FilteredElements
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 75
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a list of filtered elements.\n"
  example: []
  syntax:
    content: public List<XElement> FilteredElements { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Xml.Linq.XElement}
    content.vb: Public Property FilteredElements As List(Of XElement)
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing
  id: RequiresProcessing
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: RequiresProcessing
  nameWithType: MinimalExportComponentModel.RequiresProcessing
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: RequiresProcessing
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 80
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a value indicating whether the module had recent changes that require reprocessing.\n"
  example: []
  syntax:
    content: public bool RequiresProcessing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequiresProcessing As Boolean
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult
  id: ExportResult
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: ExportResult
  nameWithType: MinimalExportComponentModel.ExportResult
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExportResult
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 85
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the export content result state.\n"
  example: []
  syntax:
    content: public ExportContentResult ExportResult { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Transfers.ExportContentResult
    content.vb: Public Property ExportResult As ExportContentResult
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath
  id: ExtractedFilePath
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: ExtractedFilePath
  nameWithType: MinimalExportComponentModel.ExtractedFilePath
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExtractedFilePath
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 90
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the file and path of the component.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public string ExtractedFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public Property ExtractedFilePath As String
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate
  id: CreatedDate
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: MinimalExportComponentModel.CreatedDate
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedDate
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 96
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the created date.\n"
  example: []
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate
  id: UpdatedDate
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: UpdatedDate
  nameWithType: MinimalExportComponentModel.UpdatedDate
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UpdatedDate
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 101
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the updated date.\n"
  example: []
  syntax:
    content: public DateTime UpdatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property UpdatedDate As Date
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds
  id: FilteredTargetIds
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: FilteredTargetIds
  nameWithType: MinimalExportComponentModel.FilteredTargetIds
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FilteredTargetIds
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 106
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a list of filtered references.\n"
  example: []
  syntax:
    content: public List<long> FilteredTargetIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int64}
    content.vb: Public Property FilteredTargetIds As List(Of Long)
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MinimalExportComponentModel.Name
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 111
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the name of the component.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked
  id: IsLocked
  parent: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: MinimalExportComponentModel.IsLocked
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked
  type: Property
  source:
    remote:
      path: src/Transfers/MinimalExportComponentModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IsLocked
    path: Transfers/MinimalExportComponentModel.cs
    startLine: 116
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a value indicating whether the component is locked.\n"
  example: []
  syntax:
    content: public bool IsLocked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsLocked As Boolean
  overload: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Transfers
  commentId: N:Vasont.Inspire.Models.Transfers
  name: Vasont.Inspire.Models.Transfers
  nameWithType: Vasont.Inspire.Models.Transfers
  fullName: Vasont.Inspire.Models.Transfers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId
  name: ChangesetId
  nameWithType: MinimalExportComponentModel.ChangesetId
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ChangesetId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId
  name: ComponentId
  nameWithType: MinimalExportComponentModel.ComponentId
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName
  name: FileName
  nameWithType: MinimalExportComponentModel.FileName
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FileName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode
  name: LanguageCode
  nameWithType: MinimalExportComponentModel.LanguageCode
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.LanguageCode
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType
  name: ComponentType
  nameWithType: MinimalExportComponentModel.ComponentType
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ComponentType
- uid: Vasont.Inspire.Models.Components.ComponentTypeModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentTypeModel
  parent: Vasont.Inspire.Models.Components
  name: ComponentTypeModel
  nameWithType: ComponentTypeModel
  fullName: Vasont.Inspire.Models.Components.ComponentTypeModel
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements
  name: FilteredElements
  nameWithType: MinimalExportComponentModel.FilteredElements
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredElements
- uid: System.Collections.Generic.List{System.Xml.Linq.XElement}
  commentId: T:System.Collections.Generic.List{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<XElement>
  nameWithType: List<XElement>
  fullName: System.Collections.Generic.List<System.Xml.Linq.XElement>
  nameWithType.vb: List(Of XElement)
  fullName.vb: System.Collections.Generic.List(Of System.Xml.Linq.XElement)
  name.vb: List(Of XElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing
  name: RequiresProcessing
  nameWithType: MinimalExportComponentModel.RequiresProcessing
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.RequiresProcessing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult
  name: ExportResult
  nameWithType: MinimalExportComponentModel.ExportResult
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExportResult
- uid: Vasont.Inspire.Models.Transfers.ExportContentResult
  commentId: T:Vasont.Inspire.Models.Transfers.ExportContentResult
  parent: Vasont.Inspire.Models.Transfers
  name: ExportContentResult
  nameWithType: ExportContentResult
  fullName: Vasont.Inspire.Models.Transfers.ExportContentResult
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath
  name: ExtractedFilePath
  nameWithType: MinimalExportComponentModel.ExtractedFilePath
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.ExtractedFilePath
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate
  name: CreatedDate
  nameWithType: MinimalExportComponentModel.CreatedDate
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate
  name: UpdatedDate
  nameWithType: MinimalExportComponentModel.UpdatedDate
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.UpdatedDate
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds
  name: FilteredTargetIds
  nameWithType: MinimalExportComponentModel.FilteredTargetIds
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.FilteredTargetIds
- uid: System.Collections.Generic.List{System.Int64}
  commentId: T:System.Collections.Generic.List{System.Int64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int64>
  nameWithType: List<Int64>
  fullName: System.Collections.Generic.List<System.Int64>
  nameWithType.vb: List(Of Int64)
  fullName.vb: System.Collections.Generic.List(Of System.Int64)
  name.vb: List(Of Int64)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name
  name: Name
  nameWithType: MinimalExportComponentModel.Name
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.Name
- uid: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked*
  commentId: Overload:Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked
  name: IsLocked
  nameWithType: MinimalExportComponentModel.IsLocked
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportComponentModel.IsLocked
