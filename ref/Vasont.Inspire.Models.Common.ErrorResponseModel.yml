### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Common.ErrorResponseModel
  commentId: T:Vasont.Inspire.Models.Common.ErrorResponseModel
  id: ErrorResponseModel
  parent: Vasont.Inspire.Models.Common
  children:
  - Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds
  - Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException
  - Vasont.Inspire.Models.Common.ErrorResponseModel.Messages
  langs:
  - csharp
  - vb
  name: ErrorResponseModel
  nameWithType: ErrorResponseModel
  fullName: Vasont.Inspire.Models.Common.ErrorResponseModel
  type: Class
  source:
    remote:
      path: src/Common/ErrorResponseModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ErrorResponseModel
    path: Common/ErrorResponseModel.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Common
  summary: "\nThis class is used as the Error Response Model.\n"
  example: []
  syntax:
    content: public class ErrorResponseModel
    content.vb: Public Class ErrorResponseModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Common.ErrorResponseModel.Messages
  commentId: P:Vasont.Inspire.Models.Common.ErrorResponseModel.Messages
  id: Messages
  parent: Vasont.Inspire.Models.Common.ErrorResponseModel
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: ErrorResponseModel.Messages
  fullName: Vasont.Inspire.Models.Common.ErrorResponseModel.Messages
  type: Property
  source:
    remote:
      path: src/Common/ErrorResponseModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Messages
    path: Common/ErrorResponseModel.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Common
  summary: "\nGets the error messages.\n"
  example: []
  syntax:
    content: public List<ErrorModel> Messages { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Common.ErrorModel}
    content.vb: Public ReadOnly Property Messages As List(Of ErrorModel)
  overload: Vasont.Inspire.Models.Common.ErrorResponseModel.Messages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds
  commentId: P:Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds
  id: FailedIds
  parent: Vasont.Inspire.Models.Common.ErrorResponseModel
  langs:
  - csharp
  - vb
  name: FailedIds
  nameWithType: ErrorResponseModel.FailedIds
  fullName: Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds
  type: Property
  source:
    remote:
      path: src/Common/ErrorResponseModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FailedIds
    path: Common/ErrorResponseModel.cs
    startLine: 22
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Common
  summary: "\nGets or sets the failed ids.\n"
  example: []
  syntax:
    content: public List<long> FailedIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int64}
    content.vb: Public Property FailedIds As List(Of Long)
  overload: Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException
  commentId: P:Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException
  id: HasUnhandledException
  parent: Vasont.Inspire.Models.Common.ErrorResponseModel
  langs:
  - csharp
  - vb
  name: HasUnhandledException
  nameWithType: ErrorResponseModel.HasUnhandledException
  fullName: Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException
  type: Property
  source:
    remote:
      path: src/Common/ErrorResponseModel.cs
      branch: feature/57491ComponentCompletenessEnhancements
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: HasUnhandledException
    path: Common/ErrorResponseModel.cs
    startLine: 28
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Common
  summary: "\nGets or sets a value indicating whether this instance has unhandled exception.\n"
  example: []
  syntax:
    content: public bool HasUnhandledException { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance has unhandled exception; otherwise, <code>false</code>.
    content.vb: Public Property HasUnhandledException As Boolean
  overload: Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common.ErrorResponseModel.Messages*
  commentId: Overload:Vasont.Inspire.Models.Common.ErrorResponseModel.Messages
  name: Messages
  nameWithType: ErrorResponseModel.Messages
  fullName: Vasont.Inspire.Models.Common.ErrorResponseModel.Messages
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Common.ErrorModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Common.ErrorModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ErrorModel>
  nameWithType: List<ErrorModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Common.ErrorModel>
  nameWithType.vb: List(Of ErrorModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Common.ErrorModel)
  name.vb: List(Of ErrorModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Common.ErrorModel
    name: ErrorModel
    nameWithType: ErrorModel
    fullName: Vasont.Inspire.Models.Common.ErrorModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Common.ErrorModel
    name: ErrorModel
    nameWithType: ErrorModel
    fullName: Vasont.Inspire.Models.Common.ErrorModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds*
  commentId: Overload:Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds
  name: FailedIds
  nameWithType: ErrorResponseModel.FailedIds
  fullName: Vasont.Inspire.Models.Common.ErrorResponseModel.FailedIds
- uid: System.Collections.Generic.List{System.Int64}
  commentId: T:System.Collections.Generic.List{System.Int64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int64>
  nameWithType: List<Int64>
  fullName: System.Collections.Generic.List<System.Int64>
  nameWithType.vb: List(Of Int64)
  fullName.vb: System.Collections.Generic.List(Of System.Int64)
  name.vb: List(Of Int64)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException*
  commentId: Overload:Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException
  name: HasUnhandledException
  nameWithType: ErrorResponseModel.HasUnhandledException
  fullName: Vasont.Inspire.Models.Common.ErrorResponseModel.HasUnhandledException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
