### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel
  commentId: T:Vasont.Inspire.Models.Components.MinimalPermissionModel
  id: MinimalPermissionModel
  parent: Vasont.Inspire.Models.Components
  children:
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.Id
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.Name
  - Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission
  langs:
  - csharp
  - vb
  name: MinimalPermissionModel
  nameWithType: MinimalPermissionModel
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel
  type: Class
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MinimalPermissionModel
    path: Components/MinimalPermissionModel.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nThis model represents a minimal permission for a given user or role.\n"
  example: []
  syntax:
    content: public class MinimalPermissionModel
    content.vb: Public Class MinimalPermissionModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.Id
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.Id
  id: Id
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MinimalPermissionModel.Id
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.Id
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Id
    path: Components/MinimalPermissionModel.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the associated user that is assigned the permission to a component.\n"
  example: []
  syntax:
    content: public long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Id As Long
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.Name
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MinimalPermissionModel.Name
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.Name
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Components/MinimalPermissionModel.cs
    startLine: 22
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the name of the granted user.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission
  id: Permission
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: Permission
  nameWithType: MinimalPermissionModel.Permission
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Permission
    path: Components/MinimalPermissionModel.cs
    startLine: 27
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the permission code.\n"
  example: []
  syntax:
    content: public PermissionFlags Permission { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.PermissionFlags
    content.vb: Public Property Permission As PermissionFlags
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead
  id: CanRead
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: MinimalPermissionModel.CanRead
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanRead
    path: Components/MinimalPermissionModel.cs
    startLine: 80
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether the permission holder can read records within the folder.\n"
  example: []
  syntax:
    content: public bool CanRead { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanRead As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate
  id: CanCreate
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: CanCreate
  nameWithType: MinimalPermissionModel.CanCreate
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanCreate
    path: Components/MinimalPermissionModel.cs
    startLine: 85
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether the permission holder can create records within the folder.\n"
  example: []
  syntax:
    content: public bool CanCreate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanCreate As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate
  id: CanUpdate
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: CanUpdate
  nameWithType: MinimalPermissionModel.CanUpdate
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanUpdate
    path: Components/MinimalPermissionModel.cs
    startLine: 90
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether the permission holder can update records within the folder.\n"
  example: []
  syntax:
    content: public bool CanUpdate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanUpdate As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete
  id: CanDelete
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: CanDelete
  nameWithType: MinimalPermissionModel.CanDelete
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanDelete
    path: Components/MinimalPermissionModel.cs
    startLine: 95
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether the permission holder can delete records within the folder.\n"
  example: []
  syntax:
    content: public bool CanDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanDelete As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename
  id: CanRename
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: CanRename
  nameWithType: MinimalPermissionModel.CanRename
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanRename
    path: Components/MinimalPermissionModel.cs
    startLine: 100
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether the permission holder can rename records within a folder.\n"
  example: []
  syntax:
    content: public bool CanRename { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanRename As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions
  commentId: P:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions
  id: CanSetPermissions
  parent: Vasont.Inspire.Models.Components.MinimalPermissionModel
  langs:
  - csharp
  - vb
  name: CanSetPermissions
  nameWithType: MinimalPermissionModel.CanSetPermissions
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions
  type: Property
  source:
    remote:
      path: src/Components/MinimalPermissionModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanSetPermissions
    path: Components/MinimalPermissionModel.cs
    startLine: 105
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether the permission holder can set permissions on records within the folder.\n"
  example: []
  syntax:
    content: public bool CanSetPermissions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanSetPermissions As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.Id*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.Id
  name: Id
  nameWithType: MinimalPermissionModel.Id
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.Name
  name: Name
  nameWithType: MinimalPermissionModel.Name
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission
  name: Permission
  nameWithType: MinimalPermissionModel.Permission
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.Permission
- uid: Vasont.Inspire.Models.Security.PermissionFlags
  commentId: T:Vasont.Inspire.Models.Security.PermissionFlags
  parent: Vasont.Inspire.Models.Security
  name: PermissionFlags
  nameWithType: PermissionFlags
  fullName: Vasont.Inspire.Models.Security.PermissionFlags
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead
  name: CanRead
  nameWithType: MinimalPermissionModel.CanRead
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRead
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate
  name: CanCreate
  nameWithType: MinimalPermissionModel.CanCreate
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanCreate
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate
  name: CanUpdate
  nameWithType: MinimalPermissionModel.CanUpdate
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanUpdate
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete
  name: CanDelete
  nameWithType: MinimalPermissionModel.CanDelete
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanDelete
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename
  name: CanRename
  nameWithType: MinimalPermissionModel.CanRename
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanRename
- uid: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions
  name: CanSetPermissions
  nameWithType: MinimalPermissionModel.CanSetPermissions
  fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel.CanSetPermissions
