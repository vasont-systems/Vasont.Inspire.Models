### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel
  commentId: T:Vasont.Inspire.Models.Components.EditorXmlErrorModel
  id: EditorXmlErrorModel
  parent: Vasont.Inspire.Models.Components
  children:
  - Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column
  - Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row
  - Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text
  - Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type
  langs:
  - csharp
  - vb
  name: EditorXmlErrorModel
  nameWithType: EditorXmlErrorModel
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel
  type: Class
  source:
    remote:
      path: src/Components/EditorXmlErrorModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: EditorXmlErrorModel
    path: Components/EditorXmlErrorModel.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nThis class contains values used for an xml validation error.\n"
  example: []
  syntax:
    content: public class EditorXmlErrorModel
    content.vb: Public Class EditorXmlErrorModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text
  commentId: P:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text
  id: Text
  parent: Vasont.Inspire.Models.Components.EditorXmlErrorModel
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: EditorXmlErrorModel.Text
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text
  type: Property
  source:
    remote:
      path: src/Components/EditorXmlErrorModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Text
    path: Components/EditorXmlErrorModel.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the validation error message.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "text")]

      public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="text")>

      Public Property Text As String
  overload: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: text
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type
  commentId: P:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type
  id: Type
  parent: Vasont.Inspire.Models.Components.EditorXmlErrorModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: EditorXmlErrorModel.Type
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type
  type: Property
  source:
    remote:
      path: src/Components/EditorXmlErrorModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Type
    path: Components/EditorXmlErrorModel.cs
    startLine: 23
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the validation type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Property Type As String
  overload: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row
  commentId: P:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row
  id: Row
  parent: Vasont.Inspire.Models.Components.EditorXmlErrorModel
  langs:
  - csharp
  - vb
  name: Row
  nameWithType: EditorXmlErrorModel.Row
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row
  type: Property
  source:
    remote:
      path: src/Components/EditorXmlErrorModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Row
    path: Components/EditorXmlErrorModel.cs
    startLine: 29
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating the error row number.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "row")]

      public long Row { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty(PropertyName:="row")>

      Public Property Row As Long
  overload: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: row
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column
  commentId: P:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column
  id: Column
  parent: Vasont.Inspire.Models.Components.EditorXmlErrorModel
  langs:
  - csharp
  - vb
  name: Column
  nameWithType: EditorXmlErrorModel.Column
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column
  type: Property
  source:
    remote:
      path: src/Components/EditorXmlErrorModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Column
    path: Components/EditorXmlErrorModel.cs
    startLine: 35
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating the error column number.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "column")]

      public long Column { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty(PropertyName:="column")>

      Public Property Column As Long
  overload: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: column
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text*
  commentId: Overload:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text
  name: Text
  nameWithType: EditorXmlErrorModel.Text
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type*
  commentId: Overload:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type
  name: Type
  nameWithType: EditorXmlErrorModel.Type
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Type
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row*
  commentId: Overload:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row
  name: Row
  nameWithType: EditorXmlErrorModel.Row
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Row
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column*
  commentId: Overload:Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column
  name: Column
  nameWithType: EditorXmlErrorModel.Column
  fullName: Vasont.Inspire.Models.Components.EditorXmlErrorModel.Column
