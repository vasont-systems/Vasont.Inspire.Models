### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Security.MicroUserModel
  commentId: T:Vasont.Inspire.Models.Security.MicroUserModel
  id: MicroUserModel
  parent: Vasont.Inspire.Models.Security
  children:
  - Vasont.Inspire.Models.Security.MicroUserModel.Email
  - Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  - Vasont.Inspire.Models.Security.MicroUserModel.FullName
  - Vasont.Inspire.Models.Security.MicroUserModel.LastName
  - Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  - Vasont.Inspire.Models.Security.MicroUserModel.UserId
  - Vasont.Inspire.Models.Security.MicroUserModel.UserName
  langs:
  - csharp
  - vb
  name: MicroUserModel
  nameWithType: MicroUserModel
  fullName: Vasont.Inspire.Models.Security.MicroUserModel
  type: Class
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MicroUserModel
    path: Security/MicroUserModel.cs
    startLine: 10
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nThis class contains the bare minimum properties to represent a user in the interface.\n"
  example: []
  syntax:
    content: public class MicroUserModel
    content.vb: Public Class MicroUserModel
  inheritance:
  - System.Object
  derivedClasses:
  - Vasont.Inspire.Models.Security.MinimalUserModel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserId
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UserId
  id: UserId
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: MicroUserModel.UserId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserId
  type: Property
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserId
    path: Security/MicroUserModel.cs
    startLine: 15
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the unique identity of the user.\n"
  example: []
  syntax:
    content: public long UserId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property UserId As Long
  overload: Vasont.Inspire.Models.Security.MicroUserModel.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  id: UniqueId
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  langs:
  - csharp
  - vb
  name: UniqueId
  nameWithType: MicroUserModel.UniqueId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  type: Property
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UniqueId
    path: Security/MicroUserModel.cs
    startLine: 23
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the unique identifier.\n"
  example: []
  syntax:
    content: public string UniqueId { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe unique identifier.\n"
    content.vb: Public Property UniqueId As String
  overload: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MicroUserModel.Email
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.Email
  id: Email
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: MicroUserModel.Email
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.Email
  type: Property
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Email
    path: Security/MicroUserModel.cs
    startLine: 28
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user&apos;s e-mail address.\n"
  example: []
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Vasont.Inspire.Models.Security.MicroUserModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  id: FirstName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: MicroUserModel.FirstName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  type: Property
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FirstName
    path: Security/MicroUserModel.cs
    startLine: 36
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the first name.\n"
  example: []
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe first name.\n"
    content.vb: Public Property FirstName As String
  overload: Vasont.Inspire.Models.Security.MicroUserModel.FirstName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MicroUserModel.LastName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.LastName
  id: LastName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: MicroUserModel.LastName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.LastName
  type: Property
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: LastName
    path: Security/MicroUserModel.cs
    startLine: 44
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the last name.\n"
  example: []
  syntax:
    content: public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe last name.\n"
    content.vb: Public Property LastName As String
  overload: Vasont.Inspire.Models.Security.MicroUserModel.LastName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FullName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.FullName
  id: FullName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: MicroUserModel.FullName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FullName
  type: Property
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: FullName
    path: Security/MicroUserModel.cs
    startLine: 49
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user full name.\n"
  example: []
  syntax:
    content: public string FullName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FullName As String
  overload: Vasont.Inspire.Models.Security.MicroUserModel.FullName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UserName
  id: UserName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: MicroUserModel.UserName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserName
  type: Property
  source:
    remote:
      path: src/Security/MicroUserModel.cs
      branch: feature/58761TranslationConfigurationsPart3Models
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserName
    path: Security/MicroUserModel.cs
    startLine: 54
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user name of the user.\n"
  example: []
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Vasont.Inspire.Models.Security.MicroUserModel.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserId*
  commentId: Overload:Vasont.Inspire.Models.Security.MicroUserModel.UserId
  name: UserId
  nameWithType: MicroUserModel.UserId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId*
  commentId: Overload:Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  name: UniqueId
  nameWithType: MicroUserModel.UniqueId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Security.MicroUserModel.Email*
  commentId: Overload:Vasont.Inspire.Models.Security.MicroUserModel.Email
  name: Email
  nameWithType: MicroUserModel.Email
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.Email
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FirstName*
  commentId: Overload:Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  name: FirstName
  nameWithType: MicroUserModel.FirstName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FirstName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.LastName*
  commentId: Overload:Vasont.Inspire.Models.Security.MicroUserModel.LastName
  name: LastName
  nameWithType: MicroUserModel.LastName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.LastName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FullName*
  commentId: Overload:Vasont.Inspire.Models.Security.MicroUserModel.FullName
  name: FullName
  nameWithType: MicroUserModel.FullName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FullName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserName*
  commentId: Overload:Vasont.Inspire.Models.Security.MicroUserModel.UserName
  name: UserName
  nameWithType: MicroUserModel.UserName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserName
