### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel
  commentId: T:Vasont.Inspire.Models.Versioning.RestoreOptionsModel
  id: RestoreOptionsModel
  parent: Vasont.Inspire.Models.Versioning
  children:
  - Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted
  - Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents
  - Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew
  - Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId
  langs:
  - csharp
  - vb
  name: RestoreOptionsModel
  nameWithType: RestoreOptionsModel
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel
  type: Class
  source:
    remote:
      path: src/Versioning/RestoreOptionsModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: RestoreOptionsModel
    path: Versioning/RestoreOptionsModel.cs
    startLine: 10
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nThis class contains optional arguments for the restoration mechanisms within the application.\n"
  example: []
  syntax:
    content: public class RestoreOptionsModel
    content.vb: Public Class RestoreOptionsModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted
  commentId: P:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted
  id: IsDeleted
  parent: Vasont.Inspire.Models.Versioning.RestoreOptionsModel
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: RestoreOptionsModel.IsDeleted
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted
  type: Property
  source:
    remote:
      path: src/Versioning/RestoreOptionsModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IsDeleted
    path: Versioning/RestoreOptionsModel.cs
    startLine: 15
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets a value indicating whether the component or folder will be restored is a deleted item.\n"
  example: []
  syntax:
    content: public bool IsDeleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDeleted As Boolean
  overload: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew
  commentId: P:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew
  id: RestoreAsNew
  parent: Vasont.Inspire.Models.Versioning.RestoreOptionsModel
  langs:
  - csharp
  - vb
  name: RestoreAsNew
  nameWithType: RestoreOptionsModel.RestoreAsNew
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew
  type: Property
  source:
    remote:
      path: src/Versioning/RestoreOptionsModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: RestoreAsNew
    path: Versioning/RestoreOptionsModel.cs
    startLine: 20
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets a value indicating whether the component or folder will be restored to a new target location.\n"
  example: []
  syntax:
    content: public bool RestoreAsNew { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RestoreAsNew As Boolean
  overload: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId
  commentId: P:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId
  id: TargetFolderId
  parent: Vasont.Inspire.Models.Versioning.RestoreOptionsModel
  langs:
  - csharp
  - vb
  name: TargetFolderId
  nameWithType: RestoreOptionsModel.TargetFolderId
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId
  type: Property
  source:
    remote:
      path: src/Versioning/RestoreOptionsModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: TargetFolderId
    path: Versioning/RestoreOptionsModel.cs
    startLine: 25
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets the new target folder location identity.\n"
  example: []
  syntax:
    content: public long TargetFolderId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TargetFolderId As Long
  overload: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents
  commentId: P:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents
  id: RestoreAllComponents
  parent: Vasont.Inspire.Models.Versioning.RestoreOptionsModel
  langs:
  - csharp
  - vb
  name: RestoreAllComponents
  nameWithType: RestoreOptionsModel.RestoreAllComponents
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents
  type: Property
  source:
    remote:
      path: src/Versioning/RestoreOptionsModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: RestoreAllComponents
    path: Versioning/RestoreOptionsModel.cs
    startLine: 30
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Versioning
  summary: "\nGets or sets a value indicating whether the entire snapshot should be restored or only a component.\n"
  example: []
  syntax:
    content: public bool RestoreAllComponents { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RestoreAllComponents As Boolean
  overload: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Versioning
  commentId: N:Vasont.Inspire.Models.Versioning
  name: Vasont.Inspire.Models.Versioning
  nameWithType: Vasont.Inspire.Models.Versioning
  fullName: Vasont.Inspire.Models.Versioning
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted*
  commentId: Overload:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted
  name: IsDeleted
  nameWithType: RestoreOptionsModel.IsDeleted
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.IsDeleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew*
  commentId: Overload:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew
  name: RestoreAsNew
  nameWithType: RestoreOptionsModel.RestoreAsNew
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAsNew
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId*
  commentId: Overload:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId
  name: TargetFolderId
  nameWithType: RestoreOptionsModel.TargetFolderId
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.TargetFolderId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents*
  commentId: Overload:Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents
  name: RestoreAllComponents
  nameWithType: RestoreOptionsModel.RestoreAllComponents
  fullName: Vasont.Inspire.Models.Versioning.RestoreOptionsModel.RestoreAllComponents
