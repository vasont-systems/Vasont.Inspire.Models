### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.MapNodeModel
  commentId: T:Vasont.Inspire.Models.Components.MapNodeModel
  id: MapNodeModel
  parent: Vasont.Inspire.Models.Components
  children:
  - Vasont.Inspire.Models.Components.MapNodeModel.Attributes
  - Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes
  - Vasont.Inspire.Models.Components.MapNodeModel.InnerText
  - Vasont.Inspire.Models.Components.MapNodeModel.IsTracked
  - Vasont.Inspire.Models.Components.MapNodeModel.Metadata
  - Vasont.Inspire.Models.Components.MapNodeModel.Name
  - Vasont.Inspire.Models.Components.MapNodeModel.NodeId
  - Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId
  - Vasont.Inspire.Models.Components.MapNodeModel.Target
  - Vasont.Inspire.Models.Components.MapNodeModel.Type
  langs:
  - csharp
  - vb
  name: MapNodeModel
  nameWithType: MapNodeModel
  fullName: Vasont.Inspire.Models.Components.MapNodeModel
  type: Class
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MapNodeModel
    path: Components/MapNodeModel.cs
    startLine: 36
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nThis class represents a map element within the application.\n"
  example: []
  syntax:
    content: public class MapNodeModel
    content.vb: Public Class MapNodeModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.MapNodeModel.NodeId
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.NodeId
  id: NodeId
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: NodeId
  nameWithType: MapNodeModel.NodeId
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.NodeId
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: NodeId
    path: Components/MapNodeModel.cs
    startLine: 41
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the unique identifier of the model node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 1)]

      public string NodeId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=1)>

      Public Property NodeId As String
  overload: Vasont.Inspire.Models.Components.MapNodeModel.NodeId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId
  id: ParentNodeId
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: ParentNodeId
  nameWithType: MapNodeModel.ParentNodeId
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ParentNodeId
    path: Components/MapNodeModel.cs
    startLine: 47
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the parent model node identity value.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 2)]

      public string ParentNodeId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=2)>

      Public Property ParentNodeId As String
  overload: Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Name
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MapNodeModel.Name
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Name
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Components/MapNodeModel.cs
    startLine: 53
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the node name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 3)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=3)>

      Public Property Name As String
  overload: Vasont.Inspire.Models.Components.MapNodeModel.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 3
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.InnerText
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.InnerText
  id: InnerText
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: InnerText
  nameWithType: MapNodeModel.InnerText
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.InnerText
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: InnerText
    path: Components/MapNodeModel.cs
    startLine: 59
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the text of the node.\n"
  example: []
  syntax:
    content: public string InnerText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InnerText As String
  overload: Vasont.Inspire.Models.Components.MapNodeModel.InnerText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Type
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.Type
  id: Type
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MapNodeModel.Type
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Type
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Type
    path: Components/MapNodeModel.cs
    startLine: 64
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the type of the node.\n"
  example: []
  syntax:
    content: public MapNodeType Type { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Components.MapNodeType
    content.vb: Public Property Type As MapNodeType
  overload: Vasont.Inspire.Models.Components.MapNodeModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.IsTracked
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.IsTracked
  id: IsTracked
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: IsTracked
  nameWithType: MapNodeModel.IsTracked
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.IsTracked
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IsTracked
    path: Components/MapNodeModel.cs
    startLine: 69
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether this is a tracked element within the Inspire map configuration.\n"
  example: []
  syntax:
    content: public bool IsTracked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsTracked As Boolean
  overload: Vasont.Inspire.Models.Components.MapNodeModel.IsTracked*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Metadata
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.Metadata
  id: Metadata
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: MapNodeModel.Metadata
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Metadata
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Metadata
    path: Components/MapNodeModel.cs
    startLine: 74
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the element metadata related to the component configuration data.\n"
  example: []
  syntax:
    content: public MapNodeUiMetadataModel Metadata { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Components.MapNodeUiMetadataModel
    content.vb: Public Property Metadata As MapNodeUiMetadataModel
  overload: Vasont.Inspire.Models.Components.MapNodeModel.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Target
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.Target
  id: Target
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: MapNodeModel.Target
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Target
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Target
    path: Components/MapNodeModel.cs
    startLine: 79
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a Target component model\n"
  example: []
  syntax:
    content: public MapTargetModel Target { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Components.MapTargetModel
    content.vb: Public Property Target As MapTargetModel
  overload: Vasont.Inspire.Models.Components.MapNodeModel.Target*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Attributes
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.Attributes
  id: Attributes
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: MapNodeModel.Attributes
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Attributes
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Attributes
    path: Components/MapNodeModel.cs
    startLine: 84
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.MapAttributeModel\" data-throw-if-not-resolved=\"false\"></xref> objects representing populated attributes for this element.\n"
  example: []
  syntax:
    content: public List<MapAttributeModel> Attributes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MapAttributeModel}
    content.vb: Public Property Attributes As List(Of MapAttributeModel)
  overload: Vasont.Inspire.Models.Components.MapNodeModel.Attributes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes
  commentId: P:Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes
  id: ChildNodes
  parent: Vasont.Inspire.Models.Components.MapNodeModel
  langs:
  - csharp
  - vb
  name: ChildNodes
  nameWithType: MapNodeModel.ChildNodes
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes
  type: Property
  source:
    remote:
      path: src/Components/MapNodeModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ChildNodes
    path: Components/MapNodeModel.cs
    startLine: 89
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.MapNodeModel\" data-throw-if-not-resolved=\"false\"></xref> objects representing children elements.\n"
  example: []
  syntax:
    content: public List<MapNodeModel> ChildNodes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MapNodeModel}
    content.vb: Public Property ChildNodes As List(Of MapNodeModel)
  overload: Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Components.MapNodeModel.NodeId*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.NodeId
  name: NodeId
  nameWithType: MapNodeModel.NodeId
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.NodeId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId
  name: ParentNodeId
  nameWithType: MapNodeModel.ParentNodeId
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.ParentNodeId
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.Name
  name: Name
  nameWithType: MapNodeModel.Name
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Name
- uid: Vasont.Inspire.Models.Components.MapNodeModel.InnerText*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.InnerText
  name: InnerText
  nameWithType: MapNodeModel.InnerText
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.InnerText
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Type*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.Type
  name: Type
  nameWithType: MapNodeModel.Type
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Type
- uid: Vasont.Inspire.Models.Components.MapNodeType
  commentId: T:Vasont.Inspire.Models.Components.MapNodeType
  parent: Vasont.Inspire.Models.Components
  name: MapNodeType
  nameWithType: MapNodeType
  fullName: Vasont.Inspire.Models.Components.MapNodeType
- uid: Vasont.Inspire.Models.Components.MapNodeModel.IsTracked*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.IsTracked
  name: IsTracked
  nameWithType: MapNodeModel.IsTracked
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.IsTracked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Metadata*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.Metadata
  name: Metadata
  nameWithType: MapNodeModel.Metadata
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Metadata
- uid: Vasont.Inspire.Models.Components.MapNodeUiMetadataModel
  commentId: T:Vasont.Inspire.Models.Components.MapNodeUiMetadataModel
  parent: Vasont.Inspire.Models.Components
  name: MapNodeUiMetadataModel
  nameWithType: MapNodeUiMetadataModel
  fullName: Vasont.Inspire.Models.Components.MapNodeUiMetadataModel
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Target*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.Target
  name: Target
  nameWithType: MapNodeModel.Target
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Target
- uid: Vasont.Inspire.Models.Components.MapTargetModel
  commentId: T:Vasont.Inspire.Models.Components.MapTargetModel
  parent: Vasont.Inspire.Models.Components
  name: MapTargetModel
  nameWithType: MapTargetModel
  fullName: Vasont.Inspire.Models.Components.MapTargetModel
- uid: Vasont.Inspire.Models.Components.MapAttributeModel
  commentId: T:Vasont.Inspire.Models.Components.MapAttributeModel
  name: MapAttributeModel
  nameWithType: MapAttributeModel
  fullName: Vasont.Inspire.Models.Components.MapAttributeModel
- uid: Vasont.Inspire.Models.Components.MapNodeModel.Attributes*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.Attributes
  name: Attributes
  nameWithType: MapNodeModel.Attributes
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.Attributes
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MapAttributeModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MapAttributeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MapAttributeModel>
  nameWithType: List<MapAttributeModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MapAttributeModel>
  nameWithType.vb: List(Of MapAttributeModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MapAttributeModel)
  name.vb: List(Of MapAttributeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MapAttributeModel
    name: MapAttributeModel
    nameWithType: MapAttributeModel
    fullName: Vasont.Inspire.Models.Components.MapAttributeModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MapAttributeModel
    name: MapAttributeModel
    nameWithType: MapAttributeModel
    fullName: Vasont.Inspire.Models.Components.MapAttributeModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Components.MapNodeModel
  commentId: T:Vasont.Inspire.Models.Components.MapNodeModel
  parent: Vasont.Inspire.Models.Components
  name: MapNodeModel
  nameWithType: MapNodeModel
  fullName: Vasont.Inspire.Models.Components.MapNodeModel
- uid: Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes*
  commentId: Overload:Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes
  name: ChildNodes
  nameWithType: MapNodeModel.ChildNodes
  fullName: Vasont.Inspire.Models.Components.MapNodeModel.ChildNodes
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MapNodeModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MapNodeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MapNodeModel>
  nameWithType: List<MapNodeModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MapNodeModel>
  nameWithType.vb: List(Of MapNodeModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MapNodeModel)
  name.vb: List(Of MapNodeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MapNodeModel
    name: MapNodeModel
    nameWithType: MapNodeModel
    fullName: Vasont.Inspire.Models.Components.MapNodeModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MapNodeModel
    name: MapNodeModel
    nameWithType: MapNodeModel
    fullName: Vasont.Inspire.Models.Components.MapNodeModel
  - name: )
    nameWithType: )
    fullName: )
