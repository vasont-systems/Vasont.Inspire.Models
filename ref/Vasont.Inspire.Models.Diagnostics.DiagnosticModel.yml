### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  commentId: T:Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  id: DiagnosticModel
  parent: Vasont.Inspire.Models.Diagnostics
  children:
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading
  - Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound
  langs:
  - csharp
  - vb
  name: DiagnosticModel
  nameWithType: DiagnosticModel
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  type: Class
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DiagnosticModel
    path: Diagnostics/DiagnosticModel.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nThis class represents a diagnostic information within the application.\n"
  example: []
  syntax:
    content: public class DiagnosticModel
    content.vb: Public Class DiagnosticModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory
  id: GCTotalMemory
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: GCTotalMemory
  nameWithType: DiagnosticModel.GCTotalMemory
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: GCTotalMemory
    path: Diagnostics/DiagnosticModel.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets total memory\n"
  example: []
  syntax:
    content: public long GCTotalMemory { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property GCTotalMemory As Long
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory
  id: ProcessMemory
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: ProcessMemory
  nameWithType: DiagnosticModel.ProcessMemory
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProcessMemory
    path: Diagnostics/DiagnosticModel.cs
    startLine: 22
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets current process memory\n"
  example: []
  syntax:
    content: public long ProcessMemory { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProcessMemory As Long
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys
  id: CacheKeys
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: CacheKeys
  nameWithType: DiagnosticModel.CacheKeys
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CacheKeys
    path: Diagnostics/DiagnosticModel.cs
    startLine: 27
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets memory cache keys\n"
  example: []
  syntax:
    content: public Dictionary<string, object>.KeyCollection CacheKeys { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection
    content.vb: Public Property CacheKeys As Dictionary(Of String, Object).KeyCollection
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult
  id: DatabaseConnectionTestResult
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: DatabaseConnectionTestResult
  nameWithType: DiagnosticModel.DatabaseConnectionTestResult
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DatabaseConnectionTestResult
    path: Diagnostics/DiagnosticModel.cs
    startLine: 32
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets database connection status message\n"
  example: []
  syntax:
    content: public string DatabaseConnectionTestResult { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabaseConnectionTestResult As String
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount
  id: MessageQueueCount
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: MessageQueueCount
  nameWithType: DiagnosticModel.MessageQueueCount
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MessageQueueCount
    path: Diagnostics/DiagnosticModel.cs
    startLine: 37
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets the message queue count.\n"
  example: []
  syntax:
    content: public int MessageQueueCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MessageQueueCount As Integer
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings
  id: ConnectionStrings
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: ConnectionStrings
  nameWithType: DiagnosticModel.ConnectionStrings
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ConnectionStrings
    path: Diagnostics/DiagnosticModel.cs
    startLine: 42
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets connection strings\n"
  example: []
  syntax:
    content: public IDictionary<string, string> ConnectionStrings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Property ConnectionStrings As IDictionary(Of String, String)
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound
  id: UsersDataFound
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: UsersDataFound
  nameWithType: DiagnosticModel.UsersDataFound
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UsersDataFound
    path: Diagnostics/DiagnosticModel.cs
    startLine: 47
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets a value indicating whether the user data was found in database.\n"
  example: []
  syntax:
    content: public bool UsersDataFound { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UsersDataFound As Boolean
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading
  id: Threading
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: Threading
  nameWithType: DiagnosticModel.Threading
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Threading
    path: Diagnostics/DiagnosticModel.cs
    startLine: 52
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets threading information\n"
  example: []
  syntax:
    content: public DiagnosticThreading Threading { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Diagnostics.DiagnosticThreading
    content.vb: Public Property Threading As DiagnosticThreading
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings
  commentId: P:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings
  id: Settings
  parent: Vasont.Inspire.Models.Diagnostics.DiagnosticModel
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: DiagnosticModel.Settings
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings
  type: Property
  source:
    remote:
      path: src/Diagnostics/DiagnosticModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Settings
    path: Diagnostics/DiagnosticModel.cs
    startLine: 57
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Diagnostics
  summary: "\nGets or sets diagnostic settings\n"
  example: []
  syntax:
    content: public DiagnosticSettings Settings { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Diagnostics.DiagnosticSettings
    content.vb: Public Property Settings As DiagnosticSettings
  overload: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Diagnostics
  commentId: N:Vasont.Inspire.Models.Diagnostics
  name: Vasont.Inspire.Models.Diagnostics
  nameWithType: Vasont.Inspire.Models.Diagnostics
  fullName: Vasont.Inspire.Models.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory
  name: GCTotalMemory
  nameWithType: DiagnosticModel.GCTotalMemory
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.GCTotalMemory
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory
  name: ProcessMemory
  nameWithType: DiagnosticModel.ProcessMemory
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ProcessMemory
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys
  name: CacheKeys
  nameWithType: DiagnosticModel.CacheKeys
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.CacheKeys
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2.KeyCollection
  name: Dictionary.KeyCollection<>
  nameWithType: Dictionary.KeyCollection<>
  fullName: System.Collections.Generic.Dictionary.KeyCollection<>
  nameWithType.vb: Dictionary.KeyCollection(Of )
  fullName.vb: System.Collections.Generic.Dictionary.KeyCollection(Of )
  name.vb: Dictionary.KeyCollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.KeyCollection
  commentId: T:System.Collections.Generic.Dictionary`2.KeyCollection
  isExternal: true
  name: Dictionary.KeyCollection<>
  nameWithType: Dictionary.KeyCollection<>
  fullName: System.Collections.Generic.Dictionary.KeyCollection<>
  nameWithType.vb: Dictionary.KeyCollection(Of )
  fullName.vb: System.Collections.Generic.Dictionary.KeyCollection(Of )
  name.vb: Dictionary.KeyCollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult
  name: DatabaseConnectionTestResult
  nameWithType: DiagnosticModel.DatabaseConnectionTestResult
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.DatabaseConnectionTestResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount
  name: MessageQueueCount
  nameWithType: DiagnosticModel.MessageQueueCount
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.MessageQueueCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings
  name: ConnectionStrings
  nameWithType: DiagnosticModel.ConnectionStrings
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.ConnectionStrings
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound
  name: UsersDataFound
  nameWithType: DiagnosticModel.UsersDataFound
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.UsersDataFound
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading
  name: Threading
  nameWithType: DiagnosticModel.Threading
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Threading
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticThreading
  commentId: T:Vasont.Inspire.Models.Diagnostics.DiagnosticThreading
  parent: Vasont.Inspire.Models.Diagnostics
  name: DiagnosticThreading
  nameWithType: DiagnosticThreading
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticThreading
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings*
  commentId: Overload:Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings
  name: Settings
  nameWithType: DiagnosticModel.Settings
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticModel.Settings
- uid: Vasont.Inspire.Models.Diagnostics.DiagnosticSettings
  commentId: T:Vasont.Inspire.Models.Diagnostics.DiagnosticSettings
  parent: Vasont.Inspire.Models.Diagnostics
  name: DiagnosticSettings
  nameWithType: DiagnosticSettings
  fullName: Vasont.Inspire.Models.Diagnostics.DiagnosticSettings
