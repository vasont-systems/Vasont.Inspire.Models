### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  commentId: T:Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  id: ExportConfigurationModel
  parent: Vasont.Inspire.Models.Transfers
  children:
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins
  - Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type
  langs:
  - csharp
  - vb
  name: ExportConfigurationModel
  nameWithType: ExportConfigurationModel
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  type: Class
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExportConfigurationModel
    path: Transfers/ExportConfigurationModel.cs
    startLine: 45
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nThis class represents an export model for use within the application.\n"
  example: []
  syntax:
    content: 'public class ExportConfigurationModel : MinimalExportModel'
    content.vb: >-
      Public Class ExportConfigurationModel
          Inherits MinimalExportModel
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Transfers.MinimalExportModel
  inheritedMembers:
  - Vasont.Inspire.Models.Transfers.MinimalExportModel.ExportId
  - Vasont.Inspire.Models.Transfers.MinimalExportModel.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description
  id: Description
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ExportConfigurationModel.Description
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Description
    path: Transfers/ExportConfigurationModel.cs
    startLine: 50
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a description of the export.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active
  id: Active
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: ExportConfigurationModel.Active
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Active
    path: Transfers/ExportConfigurationModel.cs
    startLine: 55
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a value indicating whether the export is currently active.\n"
  example: []
  syntax:
    content: public bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default
  id: Default
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ExportConfigurationModel.Default
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Default
    path: Transfers/ExportConfigurationModel.cs
    startLine: 60
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a value indicating whether this is a default export..\n"
  example: []
  syntax:
    content: public bool Default { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Default As Boolean
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type
  id: Type
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ExportConfigurationModel.Type
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Type
    path: Transfers/ExportConfigurationModel.cs
    startLine: 65
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the export type.\n"
  example: []
  syntax:
    content: public ExportType Type { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Transfers.ExportType
    content.vb: Public Property Type As ExportType
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations
  id: ExportRelations
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: ExportRelations
  nameWithType: ExportConfigurationModel.ExportRelations
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExportRelations
    path: Transfers/ExportConfigurationModel.cs
    startLine: 70
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Transfers.MinimalExportRelationModel\" data-throw-if-not-resolved=\"false\"></xref>  objects that will be processed by the export.\n"
  example: []
  syntax:
    content: public List<MinimalExportRelationModel> ExportRelations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Transfers.MinimalExportRelationModel}
    content.vb: Public Property ExportRelations As List(Of MinimalExportRelationModel)
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes
  id: ComponentTypes
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: ComponentTypes
  nameWithType: ExportConfigurationModel.ComponentTypes
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentTypes
    path: Transfers/ExportConfigurationModel.cs
    startLine: 75
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.MinimalComponentTypeModel\" data-throw-if-not-resolved=\"false\"></xref> objects that define which component types are allowed to be used with the export.\n"
  example: []
  syntax:
    content: public List<MinimalComponentTypeModel> ComponentTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentTypeModel}
    content.vb: Public Property ComponentTypes As List(Of MinimalComponentTypeModel)
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins
  id: Plugins
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: Plugins
  nameWithType: ExportConfigurationModel.Plugins
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Plugins
    path: Transfers/ExportConfigurationModel.cs
    startLine: 80
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Plugins.ExportPluginModel\" data-throw-if-not-resolved=\"false\"></xref> objects that are to be used with the export.\n"
  example: []
  syntax:
    content: public List<ExportPluginModel> Plugins { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Plugins.ExportPluginModel}
    content.vb: Public Property Plugins As List(Of ExportPluginModel)
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants
  commentId: P:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants
  id: Participants
  parent: Vasont.Inspire.Models.Transfers.ExportConfigurationModel
  langs:
  - csharp
  - vb
  name: Participants
  nameWithType: ExportConfigurationModel.Participants
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants
  type: Property
  source:
    remote:
      path: src/Transfers/ExportConfigurationModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Participants
    path: Transfers/ExportConfigurationModel.cs
    startLine: 85
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Security.UserRoleAssociationModel\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public List<UserRoleAssociationModel> Participants { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.UserRoleAssociationModel}
    content.vb: Public Property Participants As List(Of UserRoleAssociationModel)
  overload: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Transfers
  commentId: N:Vasont.Inspire.Models.Transfers
  name: Vasont.Inspire.Models.Transfers
  nameWithType: Vasont.Inspire.Models.Transfers
  fullName: Vasont.Inspire.Models.Transfers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Transfers.MinimalExportModel
  commentId: T:Vasont.Inspire.Models.Transfers.MinimalExportModel
  parent: Vasont.Inspire.Models.Transfers
  name: MinimalExportModel
  nameWithType: MinimalExportModel
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportModel
- uid: Vasont.Inspire.Models.Transfers.MinimalExportModel.ExportId
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportModel.ExportId
  parent: Vasont.Inspire.Models.Transfers.MinimalExportModel
  name: ExportId
  nameWithType: MinimalExportModel.ExportId
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportModel.ExportId
- uid: Vasont.Inspire.Models.Transfers.MinimalExportModel.Name
  commentId: P:Vasont.Inspire.Models.Transfers.MinimalExportModel.Name
  parent: Vasont.Inspire.Models.Transfers.MinimalExportModel
  name: Name
  nameWithType: MinimalExportModel.Name
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportModel.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description
  name: Description
  nameWithType: ExportConfigurationModel.Description
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active
  name: Active
  nameWithType: ExportConfigurationModel.Active
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default
  name: Default
  nameWithType: ExportConfigurationModel.Default
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Default
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type
  name: Type
  nameWithType: ExportConfigurationModel.Type
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Type
- uid: Vasont.Inspire.Models.Transfers.ExportType
  commentId: T:Vasont.Inspire.Models.Transfers.ExportType
  parent: Vasont.Inspire.Models.Transfers
  name: ExportType
  nameWithType: ExportType
  fullName: Vasont.Inspire.Models.Transfers.ExportType
- uid: Vasont.Inspire.Models.Transfers.MinimalExportRelationModel
  commentId: T:Vasont.Inspire.Models.Transfers.MinimalExportRelationModel
  name: MinimalExportRelationModel
  nameWithType: MinimalExportRelationModel
  fullName: Vasont.Inspire.Models.Transfers.MinimalExportRelationModel
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations
  name: ExportRelations
  nameWithType: ExportConfigurationModel.ExportRelations
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ExportRelations
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Transfers.MinimalExportRelationModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Transfers.MinimalExportRelationModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalExportRelationModel>
  nameWithType: List<MinimalExportRelationModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Transfers.MinimalExportRelationModel>
  nameWithType.vb: List(Of MinimalExportRelationModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Transfers.MinimalExportRelationModel)
  name.vb: List(Of MinimalExportRelationModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Transfers.MinimalExportRelationModel
    name: MinimalExportRelationModel
    nameWithType: MinimalExportRelationModel
    fullName: Vasont.Inspire.Models.Transfers.MinimalExportRelationModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Transfers.MinimalExportRelationModel
    name: MinimalExportRelationModel
    nameWithType: MinimalExportRelationModel
    fullName: Vasont.Inspire.Models.Transfers.MinimalExportRelationModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  commentId: T:Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  parent: Vasont.Inspire.Models.Components
  name: MinimalComponentTypeModel
  nameWithType: MinimalComponentTypeModel
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes
  name: ComponentTypes
  nameWithType: ExportConfigurationModel.ComponentTypes
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.ComponentTypes
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentTypeModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentTypeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalComponentTypeModel>
  nameWithType: List<MinimalComponentTypeModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MinimalComponentTypeModel>
  nameWithType.vb: List(Of MinimalComponentTypeModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MinimalComponentTypeModel)
  name.vb: List(Of MinimalComponentTypeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
    name: MinimalComponentTypeModel
    nameWithType: MinimalComponentTypeModel
    fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
    name: MinimalComponentTypeModel
    nameWithType: MinimalComponentTypeModel
    fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: Vasont.Inspire.Models.Plugins.ExportPluginModel
  commentId: T:Vasont.Inspire.Models.Plugins.ExportPluginModel
  name: ExportPluginModel
  nameWithType: ExportPluginModel
  fullName: Vasont.Inspire.Models.Plugins.ExportPluginModel
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins
  name: Plugins
  nameWithType: ExportConfigurationModel.Plugins
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Plugins
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Plugins.ExportPluginModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Plugins.ExportPluginModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ExportPluginModel>
  nameWithType: List<ExportPluginModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Plugins.ExportPluginModel>
  nameWithType.vb: List(Of ExportPluginModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Plugins.ExportPluginModel)
  name.vb: List(Of ExportPluginModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Plugins.ExportPluginModel
    name: ExportPluginModel
    nameWithType: ExportPluginModel
    fullName: Vasont.Inspire.Models.Plugins.ExportPluginModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Plugins.ExportPluginModel
    name: ExportPluginModel
    nameWithType: ExportPluginModel
    fullName: Vasont.Inspire.Models.Plugins.ExportPluginModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  commentId: T:Vasont.Inspire.Models.Security.UserRoleAssociationModel
  parent: Vasont.Inspire.Models.Security
  name: UserRoleAssociationModel
  nameWithType: UserRoleAssociationModel
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel
- uid: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants
  name: Participants
  nameWithType: ExportConfigurationModel.Participants
  fullName: Vasont.Inspire.Models.Transfers.ExportConfigurationModel.Participants
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.UserRoleAssociationModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.UserRoleAssociationModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserRoleAssociationModel>
  nameWithType: List<UserRoleAssociationModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.UserRoleAssociationModel>
  nameWithType.vb: List(Of UserRoleAssociationModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.UserRoleAssociationModel)
  name.vb: List(Of UserRoleAssociationModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel
    name: UserRoleAssociationModel
    nameWithType: UserRoleAssociationModel
    fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel
    name: UserRoleAssociationModel
    nameWithType: UserRoleAssociationModel
    fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
