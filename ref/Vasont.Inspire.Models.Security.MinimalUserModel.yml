### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Security.MinimalUserModel
  commentId: T:Vasont.Inspire.Models.Security.MinimalUserModel
  id: MinimalUserModel
  parent: Vasont.Inspire.Models.Security
  children:
  - Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  - Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  - Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  - Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  langs:
  - csharp
  - vb
  name: MinimalUserModel
  nameWithType: MinimalUserModel
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel
  type: Class
  source:
    remote:
      path: src/Security/MinimalUserModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MinimalUserModel
    path: Security/MinimalUserModel.cs
    startLine: 13
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nThis class represents a user that is assigned to a role. It is a stripped down version of the\nuser and returns only essential information related to the user for role associations.\n"
  example: []
  syntax:
    content: 'public class MinimalUserModel : MicroUserModel'
    content.vb: >-
      Public Class MinimalUserModel
          Inherits MicroUserModel
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Security.MicroUserModel
  derivedClasses:
  - Vasont.Inspire.Models.Security.UserModel
  inheritedMembers:
  - Vasont.Inspire.Models.Security.MicroUserModel.UserId
  - Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  - Vasont.Inspire.Models.Security.MicroUserModel.Email
  - Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  - Vasont.Inspire.Models.Security.MicroUserModel.LastName
  - Vasont.Inspire.Models.Security.MicroUserModel.FullName
  - Vasont.Inspire.Models.Security.MicroUserModel.UserName
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  id: DesiredLanguage
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  langs:
  - csharp
  - vb
  name: DesiredLanguage
  nameWithType: MinimalUserModel.DesiredLanguage
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  type: Property
  source:
    remote:
      path: src/Security/MinimalUserModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DesiredLanguage
    path: Security/MinimalUserModel.cs
    startLine: 18
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user&apos;s desired language.\n"
  example: []
  syntax:
    content: public string DesiredLanguage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DesiredLanguage As String
  overload: Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  id: TimeZoneName
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  langs:
  - csharp
  - vb
  name: TimeZoneName
  nameWithType: MinimalUserModel.TimeZoneName
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  type: Property
  source:
    remote:
      path: src/Security/MinimalUserModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: TimeZoneName
    path: Security/MinimalUserModel.cs
    startLine: 23
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user&apos;s time zone.\n"
  example: []
  syntax:
    content: public string TimeZoneName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TimeZoneName As String
  overload: Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  id: Locked
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  langs:
  - csharp
  - vb
  name: Locked
  nameWithType: MinimalUserModel.Locked
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  type: Property
  source:
    remote:
      path: src/Security/MinimalUserModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Locked
    path: Security/MinimalUserModel.cs
    startLine: 28
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the user is locked.\n"
  example: []
  syntax:
    content: public bool Locked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Locked As Boolean
  overload: Vasont.Inspire.Models.Security.MinimalUserModel.Locked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  commentId: P:Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  id: LockExpirationDate
  parent: Vasont.Inspire.Models.Security.MinimalUserModel
  langs:
  - csharp
  - vb
  name: LockExpirationDate
  nameWithType: MinimalUserModel.LockExpirationDate
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  type: Property
  source:
    remote:
      path: src/Security/MinimalUserModel.cs
      branch: feature/57485TransformModels
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: LockExpirationDate
    path: Security/MinimalUserModel.cs
    startLine: 33
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the lock expiration date.\n"
  example: []
  syntax:
    content: public DateTime? LockExpirationDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LockExpirationDate As Date?
  overload: Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Security.MicroUserModel
  commentId: T:Vasont.Inspire.Models.Security.MicroUserModel
  parent: Vasont.Inspire.Models.Security
  name: MicroUserModel
  nameWithType: MicroUserModel
  fullName: Vasont.Inspire.Models.Security.MicroUserModel
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserId
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UserId
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: UserId
  nameWithType: MicroUserModel.UserId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserId
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: UniqueId
  nameWithType: MicroUserModel.UniqueId
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UniqueId
- uid: Vasont.Inspire.Models.Security.MicroUserModel.Email
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.Email
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: Email
  nameWithType: MicroUserModel.Email
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.Email
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.FirstName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: FirstName
  nameWithType: MicroUserModel.FirstName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FirstName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.LastName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.LastName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: LastName
  nameWithType: MicroUserModel.LastName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.LastName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.FullName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.FullName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: FullName
  nameWithType: MicroUserModel.FullName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.FullName
- uid: Vasont.Inspire.Models.Security.MicroUserModel.UserName
  commentId: P:Vasont.Inspire.Models.Security.MicroUserModel.UserName
  parent: Vasont.Inspire.Models.Security.MicroUserModel
  name: UserName
  nameWithType: MicroUserModel.UserName
  fullName: Vasont.Inspire.Models.Security.MicroUserModel.UserName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage*
  commentId: Overload:Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
  name: DesiredLanguage
  nameWithType: MinimalUserModel.DesiredLanguage
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.DesiredLanguage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName*
  commentId: Overload:Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
  name: TimeZoneName
  nameWithType: MinimalUserModel.TimeZoneName
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.TimeZoneName
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.Locked*
  commentId: Overload:Vasont.Inspire.Models.Security.MinimalUserModel.Locked
  name: Locked
  nameWithType: MinimalUserModel.Locked
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.Locked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate*
  commentId: Overload:Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
  name: LockExpirationDate
  nameWithType: MinimalUserModel.LockExpirationDate
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel.LockExpirationDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
