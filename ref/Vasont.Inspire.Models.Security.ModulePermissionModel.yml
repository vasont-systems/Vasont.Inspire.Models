### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel
  commentId: T:Vasont.Inspire.Models.Security.ModulePermissionModel
  id: ModulePermissionModel
  parent: Vasont.Inspire.Models.Security
  children:
  - Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate
  - Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete
  - Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead
  - Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename
  - Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions
  - Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate
  - Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId
  - Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId
  - Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId
  - Vasont.Inspire.Models.Security.ModulePermissionModel.Name
  - Vasont.Inspire.Models.Security.ModulePermissionModel.Permission
  - Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId
  - Vasont.Inspire.Models.Security.ModulePermissionModel.Type
  - Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId
  - Vasont.Inspire.Models.Security.ModulePermissionModel.UserId
  langs:
  - csharp
  - vb
  name: ModulePermissionModel
  nameWithType: ModulePermissionModel
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel
  type: Class
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ModulePermissionModel
    path: Security/ModulePermissionModel.cs
    startLine: 32
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nThis class is represents a module permission associated with a module and a related user or role.\n"
  example: []
  syntax:
    content: 'public class ModulePermissionModel : CreatedUpdaterModelBase'
    content.vb: >-
      Public Class ModulePermissionModel
          Inherits CreatedUpdaterModelBase
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  inheritedMembers:
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId
  id: UniqueId
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: UniqueId
  nameWithType: ModulePermissionModel.UniqueId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UniqueId
    path: Security/ModulePermissionModel.cs
    startLine: 49
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the unique identity value.\n"
  example: []
  syntax:
    content: public string UniqueId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UniqueId As String
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId
  id: ModuleUserPermissionId
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: ModuleUserPermissionId
  nameWithType: ModulePermissionModel.ModuleUserPermissionId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ModuleUserPermissionId
    path: Security/ModulePermissionModel.cs
    startLine: 54
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the unique user module permission identity\n"
  example: []
  syntax:
    content: public long ModuleUserPermissionId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ModuleUserPermissionId As Long
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId
  id: ModuleRolePermissionId
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: ModuleRolePermissionId
  nameWithType: ModulePermissionModel.ModuleRolePermissionId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ModuleRolePermissionId
    path: Security/ModulePermissionModel.cs
    startLine: 59
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the unique role module permission identity\n"
  example: []
  syntax:
    content: public long ModuleRolePermissionId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ModuleRolePermissionId As Long
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId
  id: ModuleId
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: ModuleId
  nameWithType: ModulePermissionModel.ModuleId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ModuleId
    path: Security/ModulePermissionModel.cs
    startLine: 64
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the parent module identity value.\n"
  example: []
  syntax:
    content: public long ModuleId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ModuleId As Long
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.Name
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModulePermissionModel.Name
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.Name
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Security/ModulePermissionModel.cs
    startLine: 69
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user/role name\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId
  id: RoleId
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: ModulePermissionModel.RoleId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: RoleId
    path: Security/ModulePermissionModel.cs
    startLine: 74
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the role identity value.\n"
  example: []
  syntax:
    content: public long RoleId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property RoleId As Long
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.UserId
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.UserId
  id: UserId
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: ModulePermissionModel.UserId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.UserId
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserId
    path: Security/ModulePermissionModel.cs
    startLine: 89
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user identity value.\n"
  example: []
  syntax:
    content: public long UserId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property UserId As Long
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.Type
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.Type
  id: Type
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ModulePermissionModel.Type
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.Type
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Type
    path: Security/ModulePermissionModel.cs
    startLine: 104
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the module permission holder type.\n"
  example: []
  syntax:
    content: public ModulePermissionHolderType Type { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.ModulePermissionHolderType
    content.vb: Public Property Type As ModulePermissionHolderType
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.Permission
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.Permission
  id: Permission
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: Permission
  nameWithType: ModulePermissionModel.Permission
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.Permission
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Permission
    path: Security/ModulePermissionModel.cs
    startLine: 109
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the module permission flags.\n"
  example: []
  syntax:
    content: public PermissionFlags Permission { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.PermissionFlags
    content.vb: Public Property Permission As PermissionFlags
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.Permission*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead
  id: CanRead
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: ModulePermissionModel.CanRead
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanRead
    path: Security/ModulePermissionModel.cs
    startLine: 162
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the permission holder can read records within the module.\n"
  example: []
  syntax:
    content: public bool CanRead { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanRead As Boolean
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate
  id: CanCreate
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: CanCreate
  nameWithType: ModulePermissionModel.CanCreate
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanCreate
    path: Security/ModulePermissionModel.cs
    startLine: 167
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the permission holder can create records within the module.\n"
  example: []
  syntax:
    content: public bool CanCreate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanCreate As Boolean
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate
  id: CanUpdate
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: CanUpdate
  nameWithType: ModulePermissionModel.CanUpdate
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanUpdate
    path: Security/ModulePermissionModel.cs
    startLine: 172
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the permission holder can update records within the module.\n"
  example: []
  syntax:
    content: public bool CanUpdate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanUpdate As Boolean
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete
  id: CanDelete
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: CanDelete
  nameWithType: ModulePermissionModel.CanDelete
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanDelete
    path: Security/ModulePermissionModel.cs
    startLine: 177
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the permission holder can delete records within the module.\n"
  example: []
  syntax:
    content: public bool CanDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanDelete As Boolean
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename
  id: CanRename
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: CanRename
  nameWithType: ModulePermissionModel.CanRename
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanRename
    path: Security/ModulePermissionModel.cs
    startLine: 182
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the permission holder can rename records within a module.\n"
  example: []
  syntax:
    content: public bool CanRename { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanRename As Boolean
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions
  commentId: P:Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions
  id: CanSetPermissions
  parent: Vasont.Inspire.Models.Security.ModulePermissionModel
  langs:
  - csharp
  - vb
  name: CanSetPermissions
  nameWithType: ModulePermissionModel.CanSetPermissions
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions
  type: Property
  source:
    remote:
      path: src/Security/ModulePermissionModel.cs
      branch: feature/46061---script-update-to-rename-tables
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanSetPermissions
    path: Security/ModulePermissionModel.cs
    startLine: 187
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the permission holder can set permissions on records within the module.\n"
  example: []
  syntax:
    content: public bool CanSetPermissions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanSetPermissions As Boolean
  overload: Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  commentId: T:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  parent: Vasont.Inspire.Models.Common
  name: CreatedUpdaterModelBase
  nameWithType: CreatedUpdaterModelBase
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: CreatedDate
  nameWithType: CreatedUpdaterModelBase.CreatedDate
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: CreatedBy
  nameWithType: CreatedUpdaterModelBase.CreatedBy
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedBy
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: UpdatedDate
  nameWithType: CreatedUpdaterModelBase.UpdatedDate
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: UpdatedBy
  nameWithType: CreatedUpdaterModelBase.UpdatedBy
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedBy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId
  name: UniqueId
  nameWithType: ModulePermissionModel.UniqueId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.UniqueId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId
  name: ModuleUserPermissionId
  nameWithType: ModulePermissionModel.ModuleUserPermissionId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleUserPermissionId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId
  name: ModuleRolePermissionId
  nameWithType: ModulePermissionModel.ModuleRolePermissionId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleRolePermissionId
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId
  name: ModuleId
  nameWithType: ModulePermissionModel.ModuleId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.ModuleId
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.Name
  name: Name
  nameWithType: ModulePermissionModel.Name
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.Name
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId
  name: RoleId
  nameWithType: ModulePermissionModel.RoleId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.RoleId
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.UserId*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.UserId
  name: UserId
  nameWithType: ModulePermissionModel.UserId
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.UserId
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.Type*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.Type
  name: Type
  nameWithType: ModulePermissionModel.Type
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.Type
- uid: Vasont.Inspire.Models.Security.ModulePermissionHolderType
  commentId: T:Vasont.Inspire.Models.Security.ModulePermissionHolderType
  parent: Vasont.Inspire.Models.Security
  name: ModulePermissionHolderType
  nameWithType: ModulePermissionHolderType
  fullName: Vasont.Inspire.Models.Security.ModulePermissionHolderType
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.Permission*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.Permission
  name: Permission
  nameWithType: ModulePermissionModel.Permission
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.Permission
- uid: Vasont.Inspire.Models.Security.PermissionFlags
  commentId: T:Vasont.Inspire.Models.Security.PermissionFlags
  parent: Vasont.Inspire.Models.Security
  name: PermissionFlags
  nameWithType: PermissionFlags
  fullName: Vasont.Inspire.Models.Security.PermissionFlags
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead
  name: CanRead
  nameWithType: ModulePermissionModel.CanRead
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRead
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate
  name: CanCreate
  nameWithType: ModulePermissionModel.CanCreate
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanCreate
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate
  name: CanUpdate
  nameWithType: ModulePermissionModel.CanUpdate
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanUpdate
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete
  name: CanDelete
  nameWithType: ModulePermissionModel.CanDelete
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanDelete
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename
  name: CanRename
  nameWithType: ModulePermissionModel.CanRename
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanRename
- uid: Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions*
  commentId: Overload:Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions
  name: CanSetPermissions
  nameWithType: ModulePermissionModel.CanSetPermissions
  fullName: Vasont.Inspire.Models.Security.ModulePermissionModel.CanSetPermissions
