### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  commentId: T:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  id: ComponentElementContainsRuleModel
  parent: Vasont.Inspire.Models.Components.Schema
  children:
  - Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId
  - Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId
  - Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum
  - Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum
  - Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required
  - Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder
  - Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired
  langs:
  - csharp
  - vb
  name: ComponentElementContainsRuleModel
  nameWithType: ComponentElementContainsRuleModel
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  type: Class
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentElementContainsRuleModel
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 10
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nThis class represents a component element rule model for a component configuration.\n"
  example: []
  syntax:
    content: public class ComponentElementContainsRuleModel
    content.vb: Public Class ComponentElementContainsRuleModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId
  id: ElementRuleId
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  langs:
  - csharp
  - vb
  name: ElementRuleId
  nameWithType: ComponentElementContainsRuleModel.ElementRuleId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ElementRuleId
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 15
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the unique identity of the element the rule applies to.\n"
  example: []
  syntax:
    content: public long ElementRuleId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ElementRuleId As Long
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId
  id: ElementId
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  langs:
  - csharp
  - vb
  name: ElementId
  nameWithType: ComponentElementContainsRuleModel.ElementId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ElementId
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 20
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the element identity that the rule applies to.\n"
  example: []
  syntax:
    content: public string ElementId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ElementId As String
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum
  id: Minimum
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  langs:
  - csharp
  - vb
  name: Minimum
  nameWithType: ComponentElementContainsRuleModel.Minimum
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Minimum
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 25
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the minimum number of instances the element must be used. Minimum > 0 = Required.\n"
  example: []
  syntax:
    content: public int Minimum { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Minimum As Integer
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum
  id: Maximum
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  langs:
  - csharp
  - vb
  name: Maximum
  nameWithType: ComponentElementContainsRuleModel.Maximum
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Maximum
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 30
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the maximum number of instances of the element allowed.\n"
  example: []
  syntax:
    content: public int Maximum { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Maximum As Integer
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required
  id: Required
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  langs:
  - csharp
  - vb
  name: Required
  nameWithType: ComponentElementContainsRuleModel.Required
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Required
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 35
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets a value indicating whether the element is required.\n"
  example: []
  syntax:
    content: public bool Required { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Required As Boolean
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder
  id: SequenceOrder
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  langs:
  - csharp
  - vb
  name: SequenceOrder
  nameWithType: ComponentElementContainsRuleModel.SequenceOrder
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SequenceOrder
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 40
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the rendering sequence order. O means no order necessary.\n"
  example: []
  syntax:
    content: public int SequenceOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SequenceOrder As Integer
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired
  commentId: M:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired
  id: ShouldRequired
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  langs:
  - csharp
  - vb
  name: ShouldRequired()
  nameWithType: ComponentElementContainsRuleModel.ShouldRequired()
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired()
  type: Method
  source:
    remote:
      path: src/Components/Schema/ComponentElementContainsRuleModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ShouldRequired
    path: Components/Schema/ComponentElementContainsRuleModel.cs
    startLine: 46
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nThis method is called by the serializer to determine if the property Permissions should be rendered.\n"
  example: []
  syntax:
    content: public bool ShouldRequired()
    return:
      type: System.Boolean
      description: Returns a value indicating whether to render the related property.
    content.vb: Public Function ShouldRequired As Boolean
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Components.Schema
  commentId: N:Vasont.Inspire.Models.Components.Schema
  name: Vasont.Inspire.Models.Components.Schema
  nameWithType: Vasont.Inspire.Models.Components.Schema
  fullName: Vasont.Inspire.Models.Components.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId
  name: ElementRuleId
  nameWithType: ComponentElementContainsRuleModel.ElementRuleId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementRuleId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId
  name: ElementId
  nameWithType: ComponentElementContainsRuleModel.ElementId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ElementId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum
  name: Minimum
  nameWithType: ComponentElementContainsRuleModel.Minimum
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Minimum
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum
  name: Maximum
  nameWithType: ComponentElementContainsRuleModel.Maximum
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Maximum
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required
  name: Required
  nameWithType: ComponentElementContainsRuleModel.Required
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.Required
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder
  name: SequenceOrder
  nameWithType: ComponentElementContainsRuleModel.SequenceOrder
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.SequenceOrder
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired
  name: ShouldRequired
  nameWithType: ComponentElementContainsRuleModel.ShouldRequired
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel.ShouldRequired
