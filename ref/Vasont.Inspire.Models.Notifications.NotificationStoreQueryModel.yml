### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel
  commentId: T:Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel
  id: NotificationStoreQueryModel
  parent: Vasont.Inspire.Models.Notifications
  children:
  - Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert
  - Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText
  - Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State
  langs:
  - csharp
  - vb
  name: NotificationStoreQueryModel
  nameWithType: NotificationStoreQueryModel
  fullName: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel
  type: Class
  source:
    remote:
      path: src/Notifications/NotificationStoreQueryModel.cs
      branch: feature/57883IgnoreAttributesForTranslation
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: NotificationStoreQueryModel
    path: Notifications/NotificationStoreQueryModel.cs
    startLine: 13
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Notifications
  summary: "\nThis class represents a notification store query model used in paging interfaces for notification messages.\n"
  example: []
  syntax:
    content: 'public class NotificationStoreQueryModel : PaginatedQueryRequestModel'
    content.vb: >-
      Public Class NotificationStoreQueryModel
          Inherits PaginatedQueryRequestModel
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  inheritedMembers:
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
  - Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText
  commentId: P:Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText
  id: SearchText
  parent: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel
  langs:
  - csharp
  - vb
  name: SearchText
  nameWithType: NotificationStoreQueryModel.SearchText
  fullName: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText
  type: Property
  source:
    remote:
      path: src/Notifications/NotificationStoreQueryModel.cs
      branch: feature/57883IgnoreAttributesForTranslation
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SearchText
    path: Notifications/NotificationStoreQueryModel.cs
    startLine: 18
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Notifications
  summary: "\nGets or sets a string used for filtering notification results.\n"
  example: []
  syntax:
    content: public string SearchText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SearchText As String
  overload: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State
  commentId: P:Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State
  id: State
  parent: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel
  langs:
  - csharp
  - vb
  name: State
  nameWithType: NotificationStoreQueryModel.State
  fullName: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State
  type: Property
  source:
    remote:
      path: src/Notifications/NotificationStoreQueryModel.cs
      branch: feature/57883IgnoreAttributesForTranslation
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: State
    path: Notifications/NotificationStoreQueryModel.cs
    startLine: 23
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Notifications
  summary: "\nGets or sets a list of states to filter by. An empty list will not filter by state.\n"
  example: []
  syntax:
    content: public List<NotificationState> State { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Notifications.NotificationState}
    content.vb: Public Property State As List(Of NotificationState)
  overload: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert
  commentId: P:Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert
  id: Alert
  parent: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel
  langs:
  - csharp
  - vb
  name: Alert
  nameWithType: NotificationStoreQueryModel.Alert
  fullName: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert
  type: Property
  source:
    remote:
      path: src/Notifications/NotificationStoreQueryModel.cs
      branch: feature/57883IgnoreAttributesForTranslation
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Alert
    path: Notifications/NotificationStoreQueryModel.cs
    startLine: 28
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Notifications
  summary: "\nGets or sets a list of alerts to filter by. An empty list will not filter by alert.\n"
  example: []
  syntax:
    content: public List<NotificationMessageAlertStatus> Alert { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus}
    content.vb: Public Property Alert As List(Of NotificationMessageAlertStatus)
  overload: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Notifications
  commentId: N:Vasont.Inspire.Models.Notifications
  name: Vasont.Inspire.Models.Notifications
  nameWithType: Vasont.Inspire.Models.Notifications
  fullName: Vasont.Inspire.Models.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  commentId: T:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  parent: Vasont.Inspire.Models.Common
  name: PaginatedQueryRequestModel
  nameWithType: PaginatedQueryRequestModel
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Page
  nameWithType: PaginatedQueryRequestModel.Page
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Page
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Limit
  nameWithType: PaginatedQueryRequestModel.Limit
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Limit
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Sort
  nameWithType: PaginatedQueryRequestModel.Sort
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Sort
- uid: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
  commentId: P:Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
  parent: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel
  name: Dir
  nameWithType: PaginatedQueryRequestModel.Dir
  fullName: Vasont.Inspire.Models.Common.PaginatedQueryRequestModel.Dir
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText*
  commentId: Overload:Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText
  name: SearchText
  nameWithType: NotificationStoreQueryModel.SearchText
  fullName: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.SearchText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State*
  commentId: Overload:Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State
  name: State
  nameWithType: NotificationStoreQueryModel.State
  fullName: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.State
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Notifications.NotificationState}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Notifications.NotificationState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NotificationState>
  nameWithType: List<NotificationState>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Notifications.NotificationState>
  nameWithType.vb: List(Of NotificationState)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Notifications.NotificationState)
  name.vb: List(Of NotificationState)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Notifications.NotificationState
    name: NotificationState
    nameWithType: NotificationState
    fullName: Vasont.Inspire.Models.Notifications.NotificationState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Notifications.NotificationState
    name: NotificationState
    nameWithType: NotificationState
    fullName: Vasont.Inspire.Models.Notifications.NotificationState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert*
  commentId: Overload:Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert
  name: Alert
  nameWithType: NotificationStoreQueryModel.Alert
  fullName: Vasont.Inspire.Models.Notifications.NotificationStoreQueryModel.Alert
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NotificationMessageAlertStatus>
  nameWithType: List<NotificationMessageAlertStatus>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus>
  nameWithType.vb: List(Of NotificationMessageAlertStatus)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus)
  name.vb: List(Of NotificationMessageAlertStatus)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus
    name: NotificationMessageAlertStatus
    nameWithType: NotificationMessageAlertStatus
    fullName: Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus
    name: NotificationMessageAlertStatus
    nameWithType: NotificationMessageAlertStatus
    fullName: Vasont.Inspire.Models.Notifications.NotificationMessageAlertStatus
  - name: )
    nameWithType: )
    fullName: )
