### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.DeleteResultModel
  commentId: T:Vasont.Inspire.Models.Components.DeleteResultModel
  id: DeleteResultModel
  parent: Vasont.Inspire.Models.Components
  children:
  - Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents
  langs:
  - csharp
  - vb
  name: DeleteResultModel
  nameWithType: DeleteResultModel
  fullName: Vasont.Inspire.Models.Components.DeleteResultModel
  type: Class
  source:
    remote:
      path: src/Components/DeleteResultModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DeleteResultModel
    path: Components/DeleteResultModel.cs
    startLine: 14
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nThis class contains properties and information related to a component delete API call that has failed\ndue to content within the system referencing the component to be deleted.\n"
  example: []
  syntax:
    content: 'public class DeleteResultModel : DeleteResultModelBase'
    content.vb: >-
      Public Class DeleteResultModel
          Inherits DeleteResultModelBase
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Common.DeleteResultModelBase
  inheritedMembers:
  - Vasont.Inspire.Models.Common.DeleteResultModelBase.Id
  - Vasont.Inspire.Models.Common.DeleteResultModelBase.Successful
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents
  commentId: P:Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents
  id: SourceReferenceComponents
  parent: Vasont.Inspire.Models.Components.DeleteResultModel
  langs:
  - csharp
  - vb
  name: SourceReferenceComponents
  nameWithType: DeleteResultModel.SourceReferenceComponents
  fullName: Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents
  type: Property
  source:
    remote:
      path: src/Components/DeleteResultModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SourceReferenceComponents
    path: Components/DeleteResultModel.cs
    startLine: 19
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets a list of <xref href=\"Vasont.Inspire.Models.Components.ComponentModel\" data-throw-if-not-resolved=\"false\"></xref> objects that reference the component requested for deletion.\n"
  example: []
  syntax:
    content: public List<ComponentModel> SourceReferenceComponents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.ComponentModel}
    content.vb: Public ReadOnly Property SourceReferenceComponents As List(Of ComponentModel)
  overload: Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Common.DeleteResultModelBase
  commentId: T:Vasont.Inspire.Models.Common.DeleteResultModelBase
  parent: Vasont.Inspire.Models.Common
  name: DeleteResultModelBase
  nameWithType: DeleteResultModelBase
  fullName: Vasont.Inspire.Models.Common.DeleteResultModelBase
- uid: Vasont.Inspire.Models.Common.DeleteResultModelBase.Id
  commentId: P:Vasont.Inspire.Models.Common.DeleteResultModelBase.Id
  parent: Vasont.Inspire.Models.Common.DeleteResultModelBase
  name: Id
  nameWithType: DeleteResultModelBase.Id
  fullName: Vasont.Inspire.Models.Common.DeleteResultModelBase.Id
- uid: Vasont.Inspire.Models.Common.DeleteResultModelBase.Successful
  commentId: P:Vasont.Inspire.Models.Common.DeleteResultModelBase.Successful
  parent: Vasont.Inspire.Models.Common.DeleteResultModelBase
  name: Successful
  nameWithType: DeleteResultModelBase.Successful
  fullName: Vasont.Inspire.Models.Common.DeleteResultModelBase.Successful
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: Vasont.Inspire.Models.Components.ComponentModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentModel
  name: ComponentModel
  nameWithType: ComponentModel
  fullName: Vasont.Inspire.Models.Components.ComponentModel
- uid: Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents*
  commentId: Overload:Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents
  name: SourceReferenceComponents
  nameWithType: DeleteResultModel.SourceReferenceComponents
  fullName: Vasont.Inspire.Models.Components.DeleteResultModel.SourceReferenceComponents
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.ComponentModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.ComponentModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ComponentModel>
  nameWithType: List<ComponentModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.ComponentModel>
  nameWithType.vb: List(Of ComponentModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.ComponentModel)
  name.vb: List(Of ComponentModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.ComponentModel
    name: ComponentModel
    nameWithType: ComponentModel
    fullName: Vasont.Inspire.Models.Components.ComponentModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.ComponentModel
    name: ComponentModel
    nameWithType: ComponentModel
    fullName: Vasont.Inspire.Models.Components.ComponentModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
