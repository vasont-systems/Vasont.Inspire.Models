### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  commentId: T:Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  id: MinimalComponentTypeModel
  parent: Vasont.Inspire.Models.Components
  children:
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name
  - Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard
  langs:
  - csharp
  - vb
  name: MinimalComponentTypeModel
  nameWithType: MinimalComponentTypeModel
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  type: Class
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MinimalComponentTypeModel
    path: Components/MinimalComponentTypeModel.cs
    startLine: 14
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nThis class represents a minimal component type model within the system.\n"
  example: []
  syntax:
    content: public class MinimalComponentTypeModel
    content.vb: Public Class MinimalComponentTypeModel
  inheritance:
  - System.Object
  derivedClasses:
  - Vasont.Inspire.Models.Components.ComponentTypeModel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId
  id: ComponentTypeId
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: ComponentTypeId
  nameWithType: MinimalComponentTypeModel.ComponentTypeId
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentTypeId
    path: Components/MinimalComponentTypeModel.cs
    startLine: 19
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the identity of the component type.\n"
  example: []
  syntax:
    content: public long ComponentTypeId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ComponentTypeId As Long
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MinimalComponentTypeModel.Name
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Components/MinimalComponentTypeModel.cs
    startLine: 24
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the name of the component type.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description
  id: Description
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MinimalComponentTypeModel.Description
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Description
    path: Components/MinimalComponentTypeModel.cs
    startLine: 29
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the description of the component type.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary
  id: Binary
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: Binary
  nameWithType: MinimalComponentTypeModel.Binary
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Binary
    path: Components/MinimalComponentTypeModel.cs
    startLine: 35
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a value indicating whether the component type is binary. If binary is false, the component type\nrelates to XML content.\n"
  example: []
  syntax:
    content: public bool Binary { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Binary As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType
  id: DocumentType
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: DocumentType
  nameWithType: MinimalComponentTypeModel.DocumentType
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: DocumentType
    path: Components/MinimalComponentTypeModel.cs
    startLine: 40
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the document type.\n"
  example: []
  syntax:
    content: public string DocumentType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DocumentType As String
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard
  id: SchemaStandard
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: SchemaStandard
  nameWithType: MinimalComponentTypeModel.SchemaStandard
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SchemaStandard
    path: Components/MinimalComponentTypeModel.cs
    startLine: 45
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the schema standard.\n"
  example: []
  syntax:
    content: public string SchemaStandard { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SchemaStandard As String
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable
  id: IsEditable
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: IsEditable
  nameWithType: MinimalComponentTypeModel.IsEditable
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IsEditable
    path: Components/MinimalComponentTypeModel.cs
    startLine: 50
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets a value indicating whether the component type is able to be edited by the internal XML editor.\n"
  example: []
  syntax:
    content: public bool IsEditable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEditable As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap
  id: IsMap
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: IsMap
  nameWithType: MinimalComponentTypeModel.IsMap
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IsMap
    path: Components/MinimalComponentTypeModel.cs
    startLine: 55
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets a value indicating whether the component is a map that is\n"
  example: []
  syntax:
    content: public bool IsMap { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMap As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish
  id: CanPublish
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: CanPublish
  nameWithType: MinimalComponentTypeModel.CanPublish
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CanPublish
    path: Components/MinimalComponentTypeModel.cs
    startLine: 60
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets a value indicating whether the component can be sent to publishing.\n"
  example: []
  syntax:
    content: public bool CanPublish { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanPublish As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow
  id: IsWorkflow
  parent: Vasont.Inspire.Models.Components.MinimalComponentTypeModel
  langs:
  - csharp
  - vb
  name: IsWorkflow
  nameWithType: MinimalComponentTypeModel.IsWorkflow
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow
  type: Property
  source:
    remote:
      path: src/Components/MinimalComponentTypeModel.cs
      branch: feature/NotificationDetailedMessageSupport
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IsWorkflow
    path: Components/MinimalComponentTypeModel.cs
    startLine: 65
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets a value indicating whether the component is a workflow\n"
  example: []
  syntax:
    content: public bool IsWorkflow { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWorkflow As Boolean
  overload: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId
  name: ComponentTypeId
  nameWithType: MinimalComponentTypeModel.ComponentTypeId
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.ComponentTypeId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name
  name: Name
  nameWithType: MinimalComponentTypeModel.Name
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description
  name: Description
  nameWithType: MinimalComponentTypeModel.Description
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Description
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary
  name: Binary
  nameWithType: MinimalComponentTypeModel.Binary
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.Binary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType
  name: DocumentType
  nameWithType: MinimalComponentTypeModel.DocumentType
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.DocumentType
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard
  name: SchemaStandard
  nameWithType: MinimalComponentTypeModel.SchemaStandard
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.SchemaStandard
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable
  name: IsEditable
  nameWithType: MinimalComponentTypeModel.IsEditable
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsEditable
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap
  name: IsMap
  nameWithType: MinimalComponentTypeModel.IsMap
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsMap
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish
  name: CanPublish
  nameWithType: MinimalComponentTypeModel.CanPublish
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.CanPublish
- uid: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow*
  commentId: Overload:Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow
  name: IsWorkflow
  nameWithType: MinimalComponentTypeModel.IsWorkflow
  fullName: Vasont.Inspire.Models.Components.MinimalComponentTypeModel.IsWorkflow
