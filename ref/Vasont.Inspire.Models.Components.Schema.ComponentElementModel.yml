### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  commentId: T:Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  id: ComponentElementModel
  parent: Vasont.Inspire.Models.Components.Schema
  children:
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type
  - Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName
  langs:
  - csharp
  - vb
  name: ComponentElementModel
  nameWithType: ComponentElementModel
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  type: Class
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentElementModel
    path: Components/Schema/ComponentElementModel.cs
    startLine: 88
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nThis class defines the properties of a map element configuration model.\n"
  example: []
  syntax:
    content: public class ComponentElementModel
    content.vb: Public Class ComponentElementModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId
  id: InternalId
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: InternalId
  nameWithType: ComponentElementModel.InternalId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: InternalId
    path: Components/Schema/ComponentElementModel.cs
    startLine: 93
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the unique identity of the element definition.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public long InternalId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonIgnore>

      Public Property InternalId As Long
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId
  id: ElementId
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: ElementId
  nameWithType: ComponentElementModel.ElementId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ElementId
    path: Components/Schema/ComponentElementModel.cs
    startLine: 99
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the element identity value for the configuration output.\n"
  example: []
  syntax:
    content: public string ElementId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ElementId As String
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ComponentElementModel.Name
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Components/Schema/ComponentElementModel.cs
    startLine: 104
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the display name of the element definition.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName
  id: XmlName
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: XmlName
  nameWithType: ComponentElementModel.XmlName
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: XmlName
    path: Components/Schema/ComponentElementModel.cs
    startLine: 109
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the XML rendering name of the element definition.\n"
  example: []
  syntax:
    content: public string XmlName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XmlName As String
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type
  id: Type
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ComponentElementModel.Type
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Type
    path: Components/Schema/ComponentElementModel.cs
    startLine: 114
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the element definition type.\n"
  example: []
  syntax:
    content: public ComponentConfigurationElementType Type { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementType
    content.vb: Public Property Type As ComponentConfigurationElementType
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role
  id: Role
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: ComponentElementModel.Role
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Role
    path: Components/Schema/ComponentElementModel.cs
    startLine: 119
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the element definition role.\n"
  example: []
  syntax:
    content: public ComponentConfigurationElementModeRole Role { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementModeRole
    content.vb: Public Property Role As ComponentConfigurationElementModeRole
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes
  id: Attributes
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ComponentElementModel.Attributes
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Attributes
    path: Components/Schema/ComponentElementModel.cs
    startLine: 124
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets a list of available element attributes\n"
  example: []
  syntax:
    content: public List<ComponentAttributeModel> Attributes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel}
    content.vb: Public Property Attributes As List(Of ComponentAttributeModel)
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains
  id: Contains
  parent: Vasont.Inspire.Models.Components.Schema.ComponentElementModel
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: ComponentElementModel.Contains
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentElementModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Contains
    path: Components/Schema/ComponentElementModel.cs
    startLine: 129
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the root contains rule model\n"
  example: []
  syntax:
    content: public List<ComponentElementContainsRuleModel> Contains { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel}
    content.vb: Public Property Contains As List(Of ComponentElementContainsRuleModel)
  overload: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Components.Schema
  commentId: N:Vasont.Inspire.Models.Components.Schema
  name: Vasont.Inspire.Models.Components.Schema
  nameWithType: Vasont.Inspire.Models.Components.Schema
  fullName: Vasont.Inspire.Models.Components.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId
  name: InternalId
  nameWithType: ComponentElementModel.InternalId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.InternalId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId
  name: ElementId
  nameWithType: ComponentElementModel.ElementId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.ElementId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name
  name: Name
  nameWithType: ComponentElementModel.Name
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Name
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName
  name: XmlName
  nameWithType: ComponentElementModel.XmlName
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.XmlName
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type
  name: Type
  nameWithType: ComponentElementModel.Type
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Type
- uid: Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementType
  commentId: T:Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementType
  parent: Vasont.Inspire.Models.Components.Schema
  name: ComponentConfigurationElementType
  nameWithType: ComponentConfigurationElementType
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementType
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role
  name: Role
  nameWithType: ComponentElementModel.Role
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Role
- uid: Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementModeRole
  commentId: T:Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementModeRole
  parent: Vasont.Inspire.Models.Components.Schema
  name: ComponentConfigurationElementModeRole
  nameWithType: ComponentConfigurationElementModeRole
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentConfigurationElementModeRole
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes
  name: Attributes
  nameWithType: ComponentElementModel.Attributes
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Attributes
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ComponentAttributeModel>
  nameWithType: List<ComponentAttributeModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel>
  nameWithType.vb: List(Of ComponentAttributeModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel)
  name.vb: List(Of ComponentAttributeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel
    name: ComponentAttributeModel
    nameWithType: ComponentAttributeModel
    fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel
    name: ComponentAttributeModel
    nameWithType: ComponentAttributeModel
    fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains
  name: Contains
  nameWithType: ComponentElementModel.Contains
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementModel.Contains
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ComponentElementContainsRuleModel>
  nameWithType: List<ComponentElementContainsRuleModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel>
  nameWithType.vb: List(Of ComponentElementContainsRuleModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel)
  name.vb: List(Of ComponentElementContainsRuleModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
    name: ComponentElementContainsRuleModel
    nameWithType: ComponentElementContainsRuleModel
    fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
    name: ComponentElementContainsRuleModel
    nameWithType: ComponentElementContainsRuleModel
    fullName: Vasont.Inspire.Models.Components.Schema.ComponentElementContainsRuleModel
  - name: )
    nameWithType: )
    fullName: )
