### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  commentId: T:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  id: MinimalProfileFilterModel
  parent: Vasont.Inspire.Models.ProfileFilters
  children:
  - Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues
  - Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description
  - Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName
  - Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner
  - Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId
  - Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared
  - Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title
  langs:
  - csharp
  - vb
  name: MinimalProfileFilterModel
  nameWithType: MinimalProfileFilterModel
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  type: Class
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: MinimalProfileFilterModel
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 13
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nThis class defines the properties of a minimal profile filter model.\n"
  example: []
  syntax:
    content: public class MinimalProfileFilterModel
    content.vb: Public Class MinimalProfileFilterModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId
  commentId: P:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId
  id: ProfileFilterId
  parent: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  langs:
  - csharp
  - vb
  name: ProfileFilterId
  nameWithType: MinimalProfileFilterModel.ProfileFilterId
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId
  type: Property
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProfileFilterId
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 18
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nGets or sets the identity of the profile filter.\n"
  example: []
  syntax:
    content: public long ProfileFilterId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProfileFilterId As Long
  overload: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner
  commentId: P:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner
  id: Owner
  parent: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: MinimalProfileFilterModel.Owner
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner
  type: Property
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Owner
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 23
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nGets or sets the owner of the profile filter.\n"
  example: []
  syntax:
    content: public MicroUserModel Owner { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MicroUserModel
    content.vb: Public Property Owner As MicroUserModel
  overload: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title
  commentId: P:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title
  id: Title
  parent: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MinimalProfileFilterModel.Title
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title
  type: Property
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Title
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 28
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nGets or sets the title of the profile filter.\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description
  commentId: P:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description
  id: Description
  parent: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MinimalProfileFilterModel.Description
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description
  type: Property
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Description
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 33
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nGets or sets the description of the profile filter.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues
  commentId: P:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues
  id: AttributeValues
  parent: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  langs:
  - csharp
  - vb
  name: AttributeValues
  nameWithType: MinimalProfileFilterModel.AttributeValues
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues
  type: Property
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: AttributeValues
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 38
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nGets or sets a list attribute values that are included in the profile filter.\n"
  example: []
  syntax:
    content: public List<ProfileFilterAttributeModel> AttributeValues { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel}
    content.vb: Public Property AttributeValues As List(Of ProfileFilterAttributeModel)
  overload: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared
  commentId: P:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared
  id: SystemShared
  parent: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  langs:
  - csharp
  - vb
  name: SystemShared
  nameWithType: MinimalProfileFilterModel.SystemShared
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared
  type: Property
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SystemShared
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 43
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nGets or sets a value indicating whether the filter is available to all system users.\n"
  example: []
  syntax:
    content: public bool SystemShared { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SystemShared As Boolean
  overload: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName
  commentId: P:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName
  id: GroupName
  parent: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: MinimalProfileFilterModel.GroupName
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName
  type: Property
  source:
    remote:
      path: src/ProfileFilters/MinimalProfileFilterModel.cs
      branch: feature/AddSKOSComponentStandard
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: GroupName
    path: ProfileFilters/MinimalProfileFilterModel.cs
    startLine: 48
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.ProfileFilters
  summary: "\nGets or sets the group name for display.\n"
  example: []
  syntax:
    content: public string GroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupName As String
  overload: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.ProfileFilters
  commentId: N:Vasont.Inspire.Models.ProfileFilters
  name: Vasont.Inspire.Models.ProfileFilters
  nameWithType: Vasont.Inspire.Models.ProfileFilters
  fullName: Vasont.Inspire.Models.ProfileFilters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId*
  commentId: Overload:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId
  name: ProfileFilterId
  nameWithType: MinimalProfileFilterModel.ProfileFilterId
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.ProfileFilterId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner*
  commentId: Overload:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner
  name: Owner
  nameWithType: MinimalProfileFilterModel.Owner
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Owner
- uid: Vasont.Inspire.Models.Security.MicroUserModel
  commentId: T:Vasont.Inspire.Models.Security.MicroUserModel
  parent: Vasont.Inspire.Models.Security
  name: MicroUserModel
  nameWithType: MicroUserModel
  fullName: Vasont.Inspire.Models.Security.MicroUserModel
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title*
  commentId: Overload:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title
  name: Title
  nameWithType: MinimalProfileFilterModel.Title
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description*
  commentId: Overload:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description
  name: Description
  nameWithType: MinimalProfileFilterModel.Description
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.Description
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues*
  commentId: Overload:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues
  name: AttributeValues
  nameWithType: MinimalProfileFilterModel.AttributeValues
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.AttributeValues
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProfileFilterAttributeModel>
  nameWithType: List<ProfileFilterAttributeModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel>
  nameWithType.vb: List(Of ProfileFilterAttributeModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel)
  name.vb: List(Of ProfileFilterAttributeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel
    name: ProfileFilterAttributeModel
    nameWithType: ProfileFilterAttributeModel
    fullName: Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel
    name: ProfileFilterAttributeModel
    nameWithType: ProfileFilterAttributeModel
    fullName: Vasont.Inspire.Models.ProfileFilters.ProfileFilterAttributeModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared*
  commentId: Overload:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared
  name: SystemShared
  nameWithType: MinimalProfileFilterModel.SystemShared
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.SystemShared
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName*
  commentId: Overload:Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName
  name: GroupName
  nameWithType: MinimalProfileFilterModel.GroupName
  fullName: Vasont.Inspire.Models.ProfileFilters.MinimalProfileFilterModel.GroupName
