### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Transfers.ExportSelectionModel
  commentId: T:Vasont.Inspire.Models.Transfers.ExportSelectionModel
  id: ExportSelectionModel
  parent: Vasont.Inspire.Models.Transfers
  children:
  - Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels
  - Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled
  langs:
  - csharp
  - vb
  name: ExportSelectionModel
  nameWithType: ExportSelectionModel
  fullName: Vasont.Inspire.Models.Transfers.ExportSelectionModel
  type: Class
  source:
    remote:
      path: src/Transfers/ExportSelectionModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExportSelectionModel
    path: Transfers/ExportSelectionModel.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nThis class represents an export selection model for use within the application.\n"
  example: []
  syntax:
    content: public class ExportSelectionModel
    content.vb: Public Class ExportSelectionModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels
  commentId: P:Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels
  id: ExportModels
  parent: Vasont.Inspire.Models.Transfers.ExportSelectionModel
  langs:
  - csharp
  - vb
  name: ExportModels
  nameWithType: ExportSelectionModel.ExportModels
  fullName: Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels
  type: Property
  source:
    remote:
      path: src/Transfers/ExportSelectionModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExportModels
    path: Transfers/ExportSelectionModel.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets the list of minimal export models.\n"
  example: []
  syntax:
    content: public List<MinimalExportModel> ExportModels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Transfers.MinimalExportModel}
    content.vb: Public Property ExportModels As List(Of MinimalExportModel)
  overload: Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled
  commentId: P:Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled
  id: HasProfiled
  parent: Vasont.Inspire.Models.Transfers.ExportSelectionModel
  langs:
  - csharp
  - vb
  name: HasProfiled
  nameWithType: ExportSelectionModel.HasProfiled
  fullName: Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled
  type: Property
  source:
    remote:
      path: src/Transfers/ExportSelectionModel.cs
      branch: feature/TranslationIntegrations
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: HasProfiled
    path: Transfers/ExportSelectionModel.cs
    startLine: 22
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Transfers
  summary: "\nGets or sets a value indicating whether or not the system has defined Profile Attributes;\n"
  example: []
  syntax:
    content: public bool HasProfiled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasProfiled As Boolean
  overload: Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Transfers
  commentId: N:Vasont.Inspire.Models.Transfers
  name: Vasont.Inspire.Models.Transfers
  nameWithType: Vasont.Inspire.Models.Transfers
  fullName: Vasont.Inspire.Models.Transfers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels
  name: ExportModels
  nameWithType: ExportSelectionModel.ExportModels
  fullName: Vasont.Inspire.Models.Transfers.ExportSelectionModel.ExportModels
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Transfers.MinimalExportModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Transfers.MinimalExportModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalExportModel>
  nameWithType: List<MinimalExportModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Transfers.MinimalExportModel>
  nameWithType.vb: List(Of MinimalExportModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Transfers.MinimalExportModel)
  name.vb: List(Of MinimalExportModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Transfers.MinimalExportModel
    name: MinimalExportModel
    nameWithType: MinimalExportModel
    fullName: Vasont.Inspire.Models.Transfers.MinimalExportModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Transfers.MinimalExportModel
    name: MinimalExportModel
    nameWithType: MinimalExportModel
    fullName: Vasont.Inspire.Models.Transfers.MinimalExportModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled*
  commentId: Overload:Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled
  name: HasProfiled
  nameWithType: ExportSelectionModel.HasProfiled
  fullName: Vasont.Inspire.Models.Transfers.ExportSelectionModel.HasProfiled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
