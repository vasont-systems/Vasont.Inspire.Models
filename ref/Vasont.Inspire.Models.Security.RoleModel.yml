### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Security.RoleModel
  commentId: T:Vasont.Inspire.Models.Security.RoleModel
  id: RoleModel
  parent: Vasont.Inspire.Models.Security
  children:
  - Vasont.Inspire.Models.Security.RoleModel.#ctor
  - Vasont.Inspire.Models.Security.RoleModel.#ctor(System.String)
  - Vasont.Inspire.Models.Security.RoleModel.Components
  - Vasont.Inspire.Models.Security.RoleModel.CreatedBy
  - Vasont.Inspire.Models.Security.RoleModel.CreatedDate
  - Vasont.Inspire.Models.Security.RoleModel.Default
  - Vasont.Inspire.Models.Security.RoleModel.Folders
  - Vasont.Inspire.Models.Security.RoleModel.IncludePermissions
  - Vasont.Inspire.Models.Security.RoleModel.Modules
  - Vasont.Inspire.Models.Security.RoleModel.UpdatedBy
  - Vasont.Inspire.Models.Security.RoleModel.UpdatedDate
  - Vasont.Inspire.Models.Security.RoleModel.Users
  langs:
  - csharp
  - vb
  name: RoleModel
  nameWithType: RoleModel
  fullName: Vasont.Inspire.Models.Security.RoleModel
  type: Class
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: RoleModel
    path: Security/RoleModel.cs
    startLine: 14
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nThis model class represents a security role within the application.\n"
  example: []
  syntax:
    content: 'public class RoleModel : MinimalRoleModel'
    content.vb: >-
      Public Class RoleModel
          Inherits MinimalRoleModel
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Security.MinimalRoleModel
  inheritedMembers:
  - Vasont.Inspire.Models.Security.MinimalRoleModel.RoleId
  - Vasont.Inspire.Models.Security.MinimalRoleModel.Name
  - Vasont.Inspire.Models.Security.MinimalRoleModel.Description
  - Vasont.Inspire.Models.Security.MinimalRoleModel.SystemRole
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Security.RoleModel.#ctor
  commentId: M:Vasont.Inspire.Models.Security.RoleModel.#ctor
  id: '#ctor'
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: RoleModel()
  nameWithType: RoleModel.RoleModel()
  fullName: Vasont.Inspire.Models.Security.RoleModel.RoleModel()
  type: Constructor
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: .ctor
    path: Security/RoleModel.cs
    startLine: 21
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nInitializes a new instance of the <xref href=\"Vasont.Inspire.Models.Security.RoleModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RoleModel()
    content.vb: Public Sub New
  overload: Vasont.Inspire.Models.Security.RoleModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.#ctor(System.String)
  commentId: M:Vasont.Inspire.Models.Security.RoleModel.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: RoleModel(String)
  nameWithType: RoleModel.RoleModel(String)
  fullName: Vasont.Inspire.Models.Security.RoleModel.RoleModel(System.String)
  type: Constructor
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: .ctor
    path: Security/RoleModel.cs
    startLine: 30
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nInitializes a new instance of the <xref href=\"Vasont.Inspire.Models.Security.RoleModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RoleModel(string roleName)
    parameters:
    - id: roleName
      type: System.String
      description: Contains the name of the role.
    content.vb: Public Sub New(roleName As String)
  overload: Vasont.Inspire.Models.Security.RoleModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.CreatedDate
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.CreatedDate
  id: CreatedDate
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: RoleModel.CreatedDate
  fullName: Vasont.Inspire.Models.Security.RoleModel.CreatedDate
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedDate
    path: Security/RoleModel.cs
    startLine: 48
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the record created date time.\n"
  example: []
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: Vasont.Inspire.Models.Security.RoleModel.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.CreatedBy
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.CreatedBy
  id: CreatedBy
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: RoleModel.CreatedBy
  fullName: Vasont.Inspire.Models.Security.RoleModel.CreatedBy
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedBy
    path: Security/RoleModel.cs
    startLine: 53
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user model for the creating user.\n"
  example: []
  syntax:
    content: public MinimalUserModel CreatedBy { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MinimalUserModel
    content.vb: Public Property CreatedBy As MinimalUserModel
  overload: Vasont.Inspire.Models.Security.RoleModel.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.UpdatedDate
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.UpdatedDate
  id: UpdatedDate
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: UpdatedDate
  nameWithType: RoleModel.UpdatedDate
  fullName: Vasont.Inspire.Models.Security.RoleModel.UpdatedDate
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UpdatedDate
    path: Security/RoleModel.cs
    startLine: 58
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the record last updated date time.\n"
  example: []
  syntax:
    content: public DateTime UpdatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property UpdatedDate As Date
  overload: Vasont.Inspire.Models.Security.RoleModel.UpdatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.UpdatedBy
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.UpdatedBy
  id: UpdatedBy
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: UpdatedBy
  nameWithType: RoleModel.UpdatedBy
  fullName: Vasont.Inspire.Models.Security.RoleModel.UpdatedBy
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UpdatedBy
    path: Security/RoleModel.cs
    startLine: 63
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the user model for the updating user.\n"
  example: []
  syntax:
    content: public MinimalUserModel UpdatedBy { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MinimalUserModel
    content.vb: Public Property UpdatedBy As MinimalUserModel
  overload: Vasont.Inspire.Models.Security.RoleModel.UpdatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.Default
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.Default
  id: Default
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: RoleModel.Default
  fullName: Vasont.Inspire.Models.Security.RoleModel.Default
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Default
    path: Security/RoleModel.cs
    startLine: 69
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the role is automatically added to users when\nthey are synchronized via the application subscription Redis channel.\n"
  example: []
  syntax:
    content: public bool Default { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Default As Boolean
  overload: Vasont.Inspire.Models.Security.RoleModel.Default*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.IncludePermissions
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.IncludePermissions
  id: IncludePermissions
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: IncludePermissions
  nameWithType: RoleModel.IncludePermissions
  fullName: Vasont.Inspire.Models.Security.RoleModel.IncludePermissions
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: IncludePermissions
    path: Security/RoleModel.cs
    startLine: 74
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a value indicating whether the save as function should to include the permissions role.\n"
  example: []
  syntax:
    content: public bool IncludePermissions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludePermissions As Boolean
  overload: Vasont.Inspire.Models.Security.RoleModel.IncludePermissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.Users
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.Users
  id: Users
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: RoleModel.Users
  fullName: Vasont.Inspire.Models.Security.RoleModel.Users
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Users
    path: Security/RoleModel.cs
    startLine: 79
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of user models assigned to this role.\n"
  example: []
  syntax:
    content: public List<MinimalUserModel> Users { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.MinimalUserModel}
    content.vb: Public Property Users As List(Of MinimalUserModel)
  overload: Vasont.Inspire.Models.Security.RoleModel.Users*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.Modules
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.Modules
  id: Modules
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: RoleModel.Modules
  fullName: Vasont.Inspire.Models.Security.RoleModel.Modules
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Modules
    path: Security/RoleModel.cs
    startLine: 84
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of modules assigned to this role.\n"
  example: []
  syntax:
    content: public List<ModulePermissionModel> Modules { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePermissionModel}
    content.vb: Public Property Modules As List(Of ModulePermissionModel)
  overload: Vasont.Inspire.Models.Security.RoleModel.Modules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.Folders
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.Folders
  id: Folders
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: Folders
  nameWithType: RoleModel.Folders
  fullName: Vasont.Inspire.Models.Security.RoleModel.Folders
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Folders
    path: Security/RoleModel.cs
    startLine: 89
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of folders assigned to this role.\n"
  example: []
  syntax:
    content: public List<FolderPermissionModel> Folders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.FolderPermissionModel}
    content.vb: Public Property Folders As List(Of FolderPermissionModel)
  overload: Vasont.Inspire.Models.Security.RoleModel.Folders*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.RoleModel.Components
  commentId: P:Vasont.Inspire.Models.Security.RoleModel.Components
  id: Components
  parent: Vasont.Inspire.Models.Security.RoleModel
  langs:
  - csharp
  - vb
  name: Components
  nameWithType: RoleModel.Components
  fullName: Vasont.Inspire.Models.Security.RoleModel.Components
  type: Property
  source:
    remote:
      path: src/Security/RoleModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Components
    path: Security/RoleModel.cs
    startLine: 94
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of components assigned to this role.\n"
  example: []
  syntax:
    content: public List<MinimalPermissionModel> Components { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalPermissionModel}
    content.vb: Public Property Components As List(Of MinimalPermissionModel)
  overload: Vasont.Inspire.Models.Security.RoleModel.Components*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Security.MinimalRoleModel
  commentId: T:Vasont.Inspire.Models.Security.MinimalRoleModel
  parent: Vasont.Inspire.Models.Security
  name: MinimalRoleModel
  nameWithType: MinimalRoleModel
  fullName: Vasont.Inspire.Models.Security.MinimalRoleModel
- uid: Vasont.Inspire.Models.Security.MinimalRoleModel.RoleId
  commentId: P:Vasont.Inspire.Models.Security.MinimalRoleModel.RoleId
  parent: Vasont.Inspire.Models.Security.MinimalRoleModel
  name: RoleId
  nameWithType: MinimalRoleModel.RoleId
  fullName: Vasont.Inspire.Models.Security.MinimalRoleModel.RoleId
- uid: Vasont.Inspire.Models.Security.MinimalRoleModel.Name
  commentId: P:Vasont.Inspire.Models.Security.MinimalRoleModel.Name
  parent: Vasont.Inspire.Models.Security.MinimalRoleModel
  name: Name
  nameWithType: MinimalRoleModel.Name
  fullName: Vasont.Inspire.Models.Security.MinimalRoleModel.Name
- uid: Vasont.Inspire.Models.Security.MinimalRoleModel.Description
  commentId: P:Vasont.Inspire.Models.Security.MinimalRoleModel.Description
  parent: Vasont.Inspire.Models.Security.MinimalRoleModel
  name: Description
  nameWithType: MinimalRoleModel.Description
  fullName: Vasont.Inspire.Models.Security.MinimalRoleModel.Description
- uid: Vasont.Inspire.Models.Security.MinimalRoleModel.SystemRole
  commentId: P:Vasont.Inspire.Models.Security.MinimalRoleModel.SystemRole
  parent: Vasont.Inspire.Models.Security.MinimalRoleModel
  name: SystemRole
  nameWithType: MinimalRoleModel.SystemRole
  fullName: Vasont.Inspire.Models.Security.MinimalRoleModel.SystemRole
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Security.RoleModel
  commentId: T:Vasont.Inspire.Models.Security.RoleModel
  name: RoleModel
  nameWithType: RoleModel
  fullName: Vasont.Inspire.Models.Security.RoleModel
- uid: Vasont.Inspire.Models.Security.RoleModel.#ctor*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.#ctor
  name: RoleModel
  nameWithType: RoleModel.RoleModel
  fullName: Vasont.Inspire.Models.Security.RoleModel.RoleModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Security.RoleModel.CreatedDate*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.CreatedDate
  name: CreatedDate
  nameWithType: RoleModel.CreatedDate
  fullName: Vasont.Inspire.Models.Security.RoleModel.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Vasont.Inspire.Models.Security.RoleModel.CreatedBy*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.CreatedBy
  name: CreatedBy
  nameWithType: RoleModel.CreatedBy
  fullName: Vasont.Inspire.Models.Security.RoleModel.CreatedBy
- uid: Vasont.Inspire.Models.Security.MinimalUserModel
  commentId: T:Vasont.Inspire.Models.Security.MinimalUserModel
  parent: Vasont.Inspire.Models.Security
  name: MinimalUserModel
  nameWithType: MinimalUserModel
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel
- uid: Vasont.Inspire.Models.Security.RoleModel.UpdatedDate*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.UpdatedDate
  name: UpdatedDate
  nameWithType: RoleModel.UpdatedDate
  fullName: Vasont.Inspire.Models.Security.RoleModel.UpdatedDate
- uid: Vasont.Inspire.Models.Security.RoleModel.UpdatedBy*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.UpdatedBy
  name: UpdatedBy
  nameWithType: RoleModel.UpdatedBy
  fullName: Vasont.Inspire.Models.Security.RoleModel.UpdatedBy
- uid: Vasont.Inspire.Models.Security.RoleModel.Default*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.Default
  name: Default
  nameWithType: RoleModel.Default
  fullName: Vasont.Inspire.Models.Security.RoleModel.Default
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Inspire.Models.Security.RoleModel.IncludePermissions*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.IncludePermissions
  name: IncludePermissions
  nameWithType: RoleModel.IncludePermissions
  fullName: Vasont.Inspire.Models.Security.RoleModel.IncludePermissions
- uid: Vasont.Inspire.Models.Security.RoleModel.Users*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.Users
  name: Users
  nameWithType: RoleModel.Users
  fullName: Vasont.Inspire.Models.Security.RoleModel.Users
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.MinimalUserModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.MinimalUserModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalUserModel>
  nameWithType: List<MinimalUserModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.MinimalUserModel>
  nameWithType.vb: List(Of MinimalUserModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.MinimalUserModel)
  name.vb: List(Of MinimalUserModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.MinimalUserModel
    name: MinimalUserModel
    nameWithType: MinimalUserModel
    fullName: Vasont.Inspire.Models.Security.MinimalUserModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.MinimalUserModel
    name: MinimalUserModel
    nameWithType: MinimalUserModel
    fullName: Vasont.Inspire.Models.Security.MinimalUserModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Security.RoleModel.Modules*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.Modules
  name: Modules
  nameWithType: RoleModel.Modules
  fullName: Vasont.Inspire.Models.Security.RoleModel.Modules
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePermissionModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.ModulePermissionModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ModulePermissionModel>
  nameWithType: List<ModulePermissionModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.ModulePermissionModel>
  nameWithType.vb: List(Of ModulePermissionModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.ModulePermissionModel)
  name.vb: List(Of ModulePermissionModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.ModulePermissionModel
    name: ModulePermissionModel
    nameWithType: ModulePermissionModel
    fullName: Vasont.Inspire.Models.Security.ModulePermissionModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.ModulePermissionModel
    name: ModulePermissionModel
    nameWithType: ModulePermissionModel
    fullName: Vasont.Inspire.Models.Security.ModulePermissionModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Security.RoleModel.Folders*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.Folders
  name: Folders
  nameWithType: RoleModel.Folders
  fullName: Vasont.Inspire.Models.Security.RoleModel.Folders
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.FolderPermissionModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.FolderPermissionModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FolderPermissionModel>
  nameWithType: List<FolderPermissionModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.FolderPermissionModel>
  nameWithType.vb: List(Of FolderPermissionModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.FolderPermissionModel)
  name.vb: List(Of FolderPermissionModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.FolderPermissionModel
    name: FolderPermissionModel
    nameWithType: FolderPermissionModel
    fullName: Vasont.Inspire.Models.Security.FolderPermissionModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.FolderPermissionModel
    name: FolderPermissionModel
    nameWithType: FolderPermissionModel
    fullName: Vasont.Inspire.Models.Security.FolderPermissionModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Security.RoleModel.Components*
  commentId: Overload:Vasont.Inspire.Models.Security.RoleModel.Components
  name: Components
  nameWithType: RoleModel.Components
  fullName: Vasont.Inspire.Models.Security.RoleModel.Components
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalPermissionModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalPermissionModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalPermissionModel>
  nameWithType: List<MinimalPermissionModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MinimalPermissionModel>
  nameWithType.vb: List(Of MinimalPermissionModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MinimalPermissionModel)
  name.vb: List(Of MinimalPermissionModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MinimalPermissionModel
    name: MinimalPermissionModel
    nameWithType: MinimalPermissionModel
    fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MinimalPermissionModel
    name: MinimalPermissionModel
    nameWithType: MinimalPermissionModel
    fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel
  - name: )
    nameWithType: )
    fullName: )
