### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  commentId: T:Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  id: ProjectDiscussionModel
  parent: Vasont.Inspire.Models.Projects
  children:
  - Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author
  - Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate
  - Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message
  - Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId
  - Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId
  langs:
  - csharp
  - vb
  name: ProjectDiscussionModel
  nameWithType: ProjectDiscussionModel
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  type: Class
  source:
    remote:
      path: src/Projects/ProjectDiscussionModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectDiscussionModel
    path: Projects/ProjectDiscussionModel.cs
    startLine: 13
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nThis class represents a project discussion for use in transferring project details to the application.\n"
  example: []
  syntax:
    content: public class ProjectDiscussionModel
    content.vb: Public Class ProjectDiscussionModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId
  id: ProjectDiscussionId
  parent: Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  langs:
  - csharp
  - vb
  name: ProjectDiscussionId
  nameWithType: ProjectDiscussionModel.ProjectDiscussionId
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectDiscussionModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectDiscussionId
    path: Projects/ProjectDiscussionModel.cs
    startLine: 18
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the project discussion identity value.\n"
  example: []
  syntax:
    content: public long ProjectDiscussionId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProjectDiscussionId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId
  commentId: P:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId
  id: ProjectId
  parent: Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: ProjectDiscussionModel.ProjectId
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId
  type: Property
  source:
    remote:
      path: src/Projects/ProjectDiscussionModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ProjectId
    path: Projects/ProjectDiscussionModel.cs
    startLine: 23
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the related project identity value.\n"
  example: []
  syntax:
    content: public long ProjectId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProjectId As Long
  overload: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author
  commentId: P:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author
  id: Author
  parent: Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: ProjectDiscussionModel.Author
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author
  type: Property
  source:
    remote:
      path: src/Projects/ProjectDiscussionModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Author
    path: Projects/ProjectDiscussionModel.cs
    startLine: 28
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the author information about the project discussion message.\n"
  example: []
  syntax:
    content: public MinimalUserModel Author { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MinimalUserModel
    content.vb: Public Property Author As MinimalUserModel
  overload: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate
  commentId: P:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate
  id: CreatedDate
  parent: Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: ProjectDiscussionModel.CreatedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate
  type: Property
  source:
    remote:
      path: src/Projects/ProjectDiscussionModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedDate
    path: Projects/ProjectDiscussionModel.cs
    startLine: 33
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the date and time of the discussion message creation.\n"
  example: []
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message
  commentId: P:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message
  id: Message
  parent: Vasont.Inspire.Models.Projects.ProjectDiscussionModel
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ProjectDiscussionModel.Message
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message
  type: Property
  source:
    remote:
      path: src/Projects/ProjectDiscussionModel.cs
      branch: feature/51004-Implement-Basic-Auth-for-PD-Rest-Api-Webhooks
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Message
    path: Projects/ProjectDiscussionModel.cs
    startLine: 38
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Projects
  summary: "\nGets or sets the discussion message.\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Projects
  commentId: N:Vasont.Inspire.Models.Projects
  name: Vasont.Inspire.Models.Projects
  nameWithType: Vasont.Inspire.Models.Projects
  fullName: Vasont.Inspire.Models.Projects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId
  name: ProjectDiscussionId
  nameWithType: ProjectDiscussionModel.ProjectDiscussionId
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectDiscussionId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId
  name: ProjectId
  nameWithType: ProjectDiscussionModel.ProjectId
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.ProjectId
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author
  name: Author
  nameWithType: ProjectDiscussionModel.Author
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Author
- uid: Vasont.Inspire.Models.Security.MinimalUserModel
  commentId: T:Vasont.Inspire.Models.Security.MinimalUserModel
  parent: Vasont.Inspire.Models.Security
  name: MinimalUserModel
  nameWithType: MinimalUserModel
  fullName: Vasont.Inspire.Models.Security.MinimalUserModel
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate
  name: CreatedDate
  nameWithType: ProjectDiscussionModel.CreatedDate
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message*
  commentId: Overload:Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message
  name: Message
  nameWithType: ProjectDiscussionModel.Message
  fullName: Vasont.Inspire.Models.Projects.ProjectDiscussionModel.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
