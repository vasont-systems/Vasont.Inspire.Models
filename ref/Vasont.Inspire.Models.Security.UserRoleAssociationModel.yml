### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  commentId: T:Vasont.Inspire.Models.Security.UserRoleAssociationModel
  id: UserRoleAssociationModel
  parent: Vasont.Inspire.Models.Security
  children:
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType
  - Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText
  langs:
  - csharp
  - vb
  name: UserRoleAssociationModel
  nameWithType: UserRoleAssociationModel
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  type: Class
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserRoleAssociationModel
    path: Security/UserRoleAssociationModel.cs
    startLine: 32
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nThis class is a model representation of a user or role that is associated with a related record.\n"
  example: []
  syntax:
    content: public class UserRoleAssociationModel
    content.vb: Public Class UserRoleAssociationModel
  inheritance:
  - System.Object
  derivedClasses:
  - Vasont.Inspire.Models.Projects.ProjectParticipantModel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id
  id: Id
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UserRoleAssociationModel.Id
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Id
    path: Security/UserRoleAssociationModel.cs
    startLine: 37
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the unique identity of the participant.\n"
  example: []
  syntax:
    content: public long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Id As Long
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId
  id: ExternalUserId
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: ExternalUserId
  nameWithType: UserRoleAssociationModel.ExternalUserId
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ExternalUserId
    path: Security/UserRoleAssociationModel.cs
    startLine: 42
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the external user identity value.\n"
  example: []
  syntax:
    content: public string ExternalUserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExternalUserId As String
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType
  id: SecurityType
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: SecurityType
  nameWithType: UserRoleAssociationModel.SecurityType
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SecurityType
    path: Security/UserRoleAssociationModel.cs
    startLine: 47
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the participant security type (i.e. User or Role).\n"
  example: []
  syntax:
    content: public SecurityType SecurityType { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.SecurityType
    content.vb: Public Property SecurityType As SecurityType
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType
  id: UserType
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: UserType
  nameWithType: UserRoleAssociationModel.UserType
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserType
    path: Security/UserRoleAssociationModel.cs
    startLine: 52
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the participant user type (i.e. Standard or Support).\n"
  example: []
  syntax:
    content: public UserType UserType { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.UserType
    content.vb: Public Property UserType As UserType
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText
  id: SecurityTypeText
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: SecurityTypeText
  nameWithType: UserRoleAssociationModel.SecurityTypeText
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SecurityTypeText
    path: Security/UserRoleAssociationModel.cs
    startLine: 57
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the type via a string.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public string SecurityTypeText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public Property SecurityTypeText As String
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText
  id: UserTypeText
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: UserTypeText
  nameWithType: UserRoleAssociationModel.UserTypeText
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserTypeText
    path: Security/UserRoleAssociationModel.cs
    startLine: 67
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the type via a string.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public string UserTypeText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public Property UserTypeText As String
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name
  id: Name
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UserRoleAssociationModel.Name
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Name
    path: Security/UserRoleAssociationModel.cs
    startLine: 77
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the name of the participant.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description
  id: Description
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: UserRoleAssociationModel.Description
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Description
    path: Security/UserRoleAssociationModel.cs
    startLine: 82
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the participant description.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email
  id: Email
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: UserRoleAssociationModel.Email
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Email
    path: Security/UserRoleAssociationModel.cs
    startLine: 87
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets the participant description.\n"
  example: []
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships
  commentId: P:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships
  id: Memberships
  parent: Vasont.Inspire.Models.Security.UserRoleAssociationModel
  langs:
  - csharp
  - vb
  name: Memberships
  nameWithType: UserRoleAssociationModel.Memberships
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships
  type: Property
  source:
    remote:
      path: src/Security/UserRoleAssociationModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Memberships
    path: Security/UserRoleAssociationModel.cs
    startLine: 92
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Security
  summary: "\nGets or sets a list of participant memberships.\n"
  example: []
  syntax:
    content: public List<string> Memberships { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Memberships As List(Of String)
  overload: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id
  name: Id
  nameWithType: UserRoleAssociationModel.Id
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId
  name: ExternalUserId
  nameWithType: UserRoleAssociationModel.ExternalUserId
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.ExternalUserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType
  name: SecurityType
  nameWithType: UserRoleAssociationModel.SecurityType
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityType
- uid: Vasont.Inspire.Models.Security.SecurityType
  commentId: T:Vasont.Inspire.Models.Security.SecurityType
  parent: Vasont.Inspire.Models.Security
  name: SecurityType
  nameWithType: SecurityType
  fullName: Vasont.Inspire.Models.Security.SecurityType
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType
  name: UserType
  nameWithType: UserRoleAssociationModel.UserType
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserType
- uid: Vasont.Inspire.Models.Security.UserType
  commentId: T:Vasont.Inspire.Models.Security.UserType
  parent: Vasont.Inspire.Models.Security
  name: UserType
  nameWithType: UserType
  fullName: Vasont.Inspire.Models.Security.UserType
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText
  name: SecurityTypeText
  nameWithType: UserRoleAssociationModel.SecurityTypeText
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.SecurityTypeText
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText
  name: UserTypeText
  nameWithType: UserRoleAssociationModel.UserTypeText
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.UserTypeText
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name
  name: Name
  nameWithType: UserRoleAssociationModel.Name
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Name
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description
  name: Description
  nameWithType: UserRoleAssociationModel.Description
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Description
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email
  name: Email
  nameWithType: UserRoleAssociationModel.Email
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Email
- uid: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships*
  commentId: Overload:Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships
  name: Memberships
  nameWithType: UserRoleAssociationModel.Memberships
  fullName: Vasont.Inspire.Models.Security.UserRoleAssociationModel.Memberships
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
