### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.ComponentModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentModel
  id: ComponentModel
  parent: Vasont.Inspire.Models.Components
  children:
  - Vasont.Inspire.Models.Components.ComponentModel.#ctor
  - Vasont.Inspire.Models.Components.ComponentModel.BinaryContent
  - Vasont.Inspire.Models.Components.ComponentModel.ComponentType
  - Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName
  - Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId
  - Vasont.Inspire.Models.Components.ComponentModel.CreatedBy
  - Vasont.Inspire.Models.Components.ComponentModel.Folders
  - Vasont.Inspire.Models.Components.ComponentModel.Properties
  - Vasont.Inspire.Models.Components.ComponentModel.RolePermissions
  - Vasont.Inspire.Models.Components.ComponentModel.Tags
  - Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy
  - Vasont.Inspire.Models.Components.ComponentModel.UserAccesses
  - Vasont.Inspire.Models.Components.ComponentModel.UserPermissions
  - Vasont.Inspire.Models.Components.ComponentModel.XmlContent
  langs:
  - csharp
  - vb
  name: ComponentModel
  nameWithType: ComponentModel
  fullName: Vasont.Inspire.Models.Components.ComponentModel
  type: Class
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentModel
    path: Components/ComponentModel.cs
    startLine: 13
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nThis class represents a component within the system and is to be used for interaction with application user interfaces.\n"
  example: []
  syntax:
    content: 'public class ComponentModel : MinimalComponentModel'
    content.vb: >-
      Public Class ComponentModel
          Inherits MinimalComponentModel
  inheritance:
  - System.Object
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  - Vasont.Inspire.Models.Components.MinimalComponentModel
  inheritedMembers:
  - Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentId
  - Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentTypeId
  - Vasont.Inspire.Models.Components.MinimalComponentModel.Metrics
  - Vasont.Inspire.Models.Components.MinimalComponentModel.Folder
  - Vasont.Inspire.Models.Components.MinimalComponentModel.IsImage
  - Vasont.Inspire.Models.Components.MinimalComponentModel.ContentType
  - Vasont.Inspire.Models.Components.MinimalComponentModel.Name
  - Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageCode
  - Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageName
  - Vasont.Inspire.Models.Components.MinimalComponentModel.FileName
  - Vasont.Inspire.Models.Components.MinimalComponentModel.State
  - Vasont.Inspire.Models.Components.MinimalComponentModel.StateName
  - Vasont.Inspire.Models.Components.MinimalComponentModel.UniqueId
  - Vasont.Inspire.Models.Components.MinimalComponentModel.HashKey
  - Vasont.Inspire.Models.Components.MinimalComponentModel.Lock
  - Vasont.Inspire.Models.Components.MinimalComponentModel.Permissions
  - Vasont.Inspire.Models.Components.MinimalComponentModel.VirtualPath
  - Vasont.Inspire.Models.Components.MinimalComponentModel.Type
  - Vasont.Inspire.Models.Components.MinimalComponentModel.CanTranslate
  - Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowed
  - Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowedByCurrentUser
  - Vasont.Inspire.Models.Components.MinimalComponentModel.FollowedByUsers
  - Vasont.Inspire.Models.Components.MinimalComponentModel.IsShared
  - Vasont.Inspire.Models.Components.MinimalComponentModel.SharedComponentsCount
  - Vasont.Inspire.Models.Components.MinimalComponentModel.BranchType
  - Vasont.Inspire.Models.Components.MinimalComponentModel.MostRecentAccess
  - Vasont.Inspire.Models.Components.MinimalComponentModel.UserAccessCount
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  - Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.ComponentModel.#ctor
  commentId: M:Vasont.Inspire.Models.Components.ComponentModel.#ctor
  id: '#ctor'
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: ComponentModel()
  nameWithType: ComponentModel.ComponentModel()
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ComponentModel()
  type: Constructor
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: .ctor
    path: Components/ComponentModel.cs
    startLine: 18
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nInitializes a new instance of the <xref href=\"Vasont.Inspire.Models.Components.ComponentModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ComponentModel()
    content.vb: Public Sub New
  overload: Vasont.Inspire.Models.Components.ComponentModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.ComponentType
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.ComponentType
  id: ComponentType
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: ComponentType
  nameWithType: ComponentModel.ComponentType
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ComponentType
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentType
    path: Components/ComponentModel.cs
    startLine: 30
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the component type.\n"
  example: []
  syntax:
    content: public ComponentTypeModel ComponentType { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Components.ComponentTypeModel
    content.vb: Public Property ComponentType As ComponentTypeModel
  overload: Vasont.Inspire.Models.Components.ComponentModel.ComponentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName
  id: ComponentTypeName
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: ComponentTypeName
  nameWithType: ComponentModel.ComponentTypeName
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentTypeName
    path: Components/ComponentModel.cs
    startLine: 35
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the component type display name.\n"
  example: []
  syntax:
    content: public string ComponentTypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ComponentTypeName As String
  overload: Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId
  id: ContentTypeId
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: ContentTypeId
  nameWithType: ComponentModel.ContentTypeId
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ContentTypeId
    path: Components/ComponentModel.cs
    startLine: 40
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the identity of the content type for binary content.\n"
  example: []
  syntax:
    content: public long ContentTypeId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ContentTypeId As Long
  overload: Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.BinaryContent
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.BinaryContent
  id: BinaryContent
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: BinaryContent
  nameWithType: ComponentModel.BinaryContent
  fullName: Vasont.Inspire.Models.Components.ComponentModel.BinaryContent
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: BinaryContent
    path: Components/ComponentModel.cs
    startLine: 45
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the binary content of the component.\n"
  example: []
  syntax:
    content: public byte[] BinaryContent { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property BinaryContent As Byte()
  overload: Vasont.Inspire.Models.Components.ComponentModel.BinaryContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.XmlContent
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.XmlContent
  id: XmlContent
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: XmlContent
  nameWithType: ComponentModel.XmlContent
  fullName: Vasont.Inspire.Models.Components.ComponentModel.XmlContent
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: XmlContent
    path: Components/ComponentModel.cs
    startLine: 50
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the XML content of the component.\n"
  example: []
  syntax:
    content: public string XmlContent { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XmlContent As String
  overload: Vasont.Inspire.Models.Components.ComponentModel.XmlContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.RolePermissions
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.RolePermissions
  id: RolePermissions
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: RolePermissions
  nameWithType: ComponentModel.RolePermissions
  fullName: Vasont.Inspire.Models.Components.ComponentModel.RolePermissions
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: RolePermissions
    path: Components/ComponentModel.cs
    startLine: 55
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.ComponentRolePermissionModel\" data-throw-if-not-resolved=\"false\"></xref> objects containing component role permission assignments.\n"
  example: []
  syntax:
    content: public List<MinimalPermissionModel> RolePermissions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalPermissionModel}
    content.vb: Public Property RolePermissions As List(Of MinimalPermissionModel)
  overload: Vasont.Inspire.Models.Components.ComponentModel.RolePermissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.UserPermissions
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.UserPermissions
  id: UserPermissions
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: UserPermissions
  nameWithType: ComponentModel.UserPermissions
  fullName: Vasont.Inspire.Models.Components.ComponentModel.UserPermissions
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserPermissions
    path: Components/ComponentModel.cs
    startLine: 60
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.ComponentUserPermissionModel\" data-throw-if-not-resolved=\"false\"></xref> objects containing component user permission assignments.\n"
  example: []
  syntax:
    content: public List<MinimalPermissionModel> UserPermissions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalPermissionModel}
    content.vb: Public Property UserPermissions As List(Of MinimalPermissionModel)
  overload: Vasont.Inspire.Models.Components.ComponentModel.UserPermissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.Folders
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.Folders
  id: Folders
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: Folders
  nameWithType: ComponentModel.Folders
  fullName: Vasont.Inspire.Models.Components.ComponentModel.Folders
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Folders
    path: Components/ComponentModel.cs
    startLine: 65
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.FolderModel\" data-throw-if-not-resolved=\"false\"></xref> objects containing linked component folders.\n"
  example: []
  syntax:
    content: public List<MinimalFolderModel> Folders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalFolderModel}
    content.vb: Public Property Folders As List(Of MinimalFolderModel)
  overload: Vasont.Inspire.Models.Components.ComponentModel.Folders*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.Properties
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.Properties
  id: Properties
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ComponentModel.Properties
  fullName: Vasont.Inspire.Models.Components.ComponentModel.Properties
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Properties
    path: Components/ComponentModel.cs
    startLine: 70
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.ComponentPropertyModel\" data-throw-if-not-resolved=\"false\"></xref> objects containing component property assignments.\n"
  example: []
  syntax:
    content: public List<ComponentPropertyModel> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.ComponentPropertyModel}
    content.vb: Public Property Properties As List(Of ComponentPropertyModel)
  overload: Vasont.Inspire.Models.Components.ComponentModel.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.Tags
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.Tags
  id: Tags
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ComponentModel.Tags
  fullName: Vasont.Inspire.Models.Components.ComponentModel.Tags
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Tags
    path: Components/ComponentModel.cs
    startLine: 75
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.TagModel\" data-throw-if-not-resolved=\"false\"></xref> objects containing component tag assignments.\n"
  example: []
  syntax:
    content: public List<TagModel> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.TagModel}
    content.vb: Public Property Tags As List(Of TagModel)
  overload: Vasont.Inspire.Models.Components.ComponentModel.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.CreatedBy
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.CreatedBy
  id: CreatedBy
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: ComponentModel.CreatedBy
  fullName: Vasont.Inspire.Models.Components.ComponentModel.CreatedBy
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: CreatedBy
    path: Components/ComponentModel.cs
    startLine: 80
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the record creator model object.\n"
  example: []
  syntax:
    content: public MicroUserModel CreatedBy { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MicroUserModel
    content.vb: Public Property CreatedBy As MicroUserModel
  overload: Vasont.Inspire.Models.Components.ComponentModel.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy
  id: UpdatedBy
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: UpdatedBy
  nameWithType: ComponentModel.UpdatedBy
  fullName: Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UpdatedBy
    path: Components/ComponentModel.cs
    startLine: 85
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets the record updater model object.\n"
  example: []
  syntax:
    content: public MicroUserModel UpdatedBy { get; set; }
    parameters: []
    return:
      type: Vasont.Inspire.Models.Security.MicroUserModel
    content.vb: Public Property UpdatedBy As MicroUserModel
  overload: Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.ComponentModel.UserAccesses
  commentId: P:Vasont.Inspire.Models.Components.ComponentModel.UserAccesses
  id: UserAccesses
  parent: Vasont.Inspire.Models.Components.ComponentModel
  langs:
  - csharp
  - vb
  name: UserAccesses
  nameWithType: ComponentModel.UserAccesses
  fullName: Vasont.Inspire.Models.Components.ComponentModel.UserAccesses
  type: Property
  source:
    remote:
      path: src/Components/ComponentModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: UserAccesses
    path: Components/ComponentModel.cs
    startLine: 90
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components
  summary: "\nGets or sets a list of <xref href=\"Vasont.Inspire.Models.Components.ComponentUserAccessModel\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public List<MinimalComponentUserAccessModel> UserAccesses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel}
    content.vb: Public Property UserAccesses As List(Of MinimalComponentUserAccessModel)
  overload: Vasont.Inspire.Models.Components.ComponentModel.UserAccesses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  commentId: T:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  parent: Vasont.Inspire.Models.Common
  name: CreatedUpdaterModelBase
  nameWithType: CreatedUpdaterModelBase
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel
  commentId: T:Vasont.Inspire.Models.Components.MinimalComponentModel
  parent: Vasont.Inspire.Models.Components
  name: MinimalComponentModel
  nameWithType: MinimalComponentModel
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentId
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentId
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: ComponentId
  nameWithType: MinimalComponentModel.ComponentId
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentId
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentTypeId
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentTypeId
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: ComponentTypeId
  nameWithType: MinimalComponentModel.ComponentTypeId
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.ComponentTypeId
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.Metrics
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.Metrics
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: Metrics
  nameWithType: MinimalComponentModel.Metrics
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.Metrics
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.Folder
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.Folder
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: Folder
  nameWithType: MinimalComponentModel.Folder
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.Folder
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.IsImage
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.IsImage
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: IsImage
  nameWithType: MinimalComponentModel.IsImage
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.IsImage
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.ContentType
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.ContentType
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: ContentType
  nameWithType: MinimalComponentModel.ContentType
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.ContentType
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.Name
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.Name
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: Name
  nameWithType: MinimalComponentModel.Name
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.Name
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageCode
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageCode
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: LanguageCode
  nameWithType: MinimalComponentModel.LanguageCode
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageCode
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageName
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageName
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: LanguageName
  nameWithType: MinimalComponentModel.LanguageName
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.LanguageName
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.FileName
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.FileName
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: FileName
  nameWithType: MinimalComponentModel.FileName
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.FileName
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.State
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.State
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: State
  nameWithType: MinimalComponentModel.State
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.State
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.StateName
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.StateName
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: StateName
  nameWithType: MinimalComponentModel.StateName
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.StateName
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.UniqueId
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.UniqueId
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: UniqueId
  nameWithType: MinimalComponentModel.UniqueId
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.UniqueId
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.HashKey
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.HashKey
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: HashKey
  nameWithType: MinimalComponentModel.HashKey
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.HashKey
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.Lock
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.Lock
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: Lock
  nameWithType: MinimalComponentModel.Lock
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.Lock
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.Permissions
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.Permissions
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: Permissions
  nameWithType: MinimalComponentModel.Permissions
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.Permissions
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.VirtualPath
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.VirtualPath
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: VirtualPath
  nameWithType: MinimalComponentModel.VirtualPath
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.VirtualPath
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.Type
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.Type
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: Type
  nameWithType: MinimalComponentModel.Type
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.Type
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.CanTranslate
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.CanTranslate
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: CanTranslate
  nameWithType: MinimalComponentModel.CanTranslate
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.CanTranslate
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowed
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowed
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: IsFollowed
  nameWithType: MinimalComponentModel.IsFollowed
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowed
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowedByCurrentUser
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowedByCurrentUser
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: IsFollowedByCurrentUser
  nameWithType: MinimalComponentModel.IsFollowedByCurrentUser
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.IsFollowedByCurrentUser
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.FollowedByUsers
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.FollowedByUsers
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: FollowedByUsers
  nameWithType: MinimalComponentModel.FollowedByUsers
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.FollowedByUsers
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.IsShared
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.IsShared
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: IsShared
  nameWithType: MinimalComponentModel.IsShared
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.IsShared
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.SharedComponentsCount
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.SharedComponentsCount
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: SharedComponentsCount
  nameWithType: MinimalComponentModel.SharedComponentsCount
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.SharedComponentsCount
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.BranchType
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.BranchType
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: BranchType
  nameWithType: MinimalComponentModel.BranchType
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.BranchType
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.MostRecentAccess
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.MostRecentAccess
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: MostRecentAccess
  nameWithType: MinimalComponentModel.MostRecentAccess
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.MostRecentAccess
- uid: Vasont.Inspire.Models.Components.MinimalComponentModel.UserAccessCount
  commentId: P:Vasont.Inspire.Models.Components.MinimalComponentModel.UserAccessCount
  parent: Vasont.Inspire.Models.Components.MinimalComponentModel
  name: UserAccessCount
  nameWithType: MinimalComponentModel.UserAccessCount
  fullName: Vasont.Inspire.Models.Components.MinimalComponentModel.UserAccessCount
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: CreatedDate
  nameWithType: CreatedUpdaterModelBase.CreatedDate
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.CreatedDate
- uid: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  commentId: P:Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
  parent: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase
  name: UpdatedDate
  nameWithType: CreatedUpdaterModelBase.UpdatedDate
  fullName: Vasont.Inspire.Models.Common.CreatedUpdaterModelBase.UpdatedDate
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Common
  commentId: N:Vasont.Inspire.Models.Common
  name: Vasont.Inspire.Models.Common
  nameWithType: Vasont.Inspire.Models.Common
  fullName: Vasont.Inspire.Models.Common
- uid: Vasont.Inspire.Models.Components.ComponentModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentModel
  name: ComponentModel
  nameWithType: ComponentModel
  fullName: Vasont.Inspire.Models.Components.ComponentModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.#ctor*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.#ctor
  name: ComponentModel
  nameWithType: ComponentModel.ComponentModel
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ComponentModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.ComponentType*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.ComponentType
  name: ComponentType
  nameWithType: ComponentModel.ComponentType
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ComponentType
- uid: Vasont.Inspire.Models.Components.ComponentTypeModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentTypeModel
  parent: Vasont.Inspire.Models.Components
  name: ComponentTypeModel
  nameWithType: ComponentTypeModel
  fullName: Vasont.Inspire.Models.Components.ComponentTypeModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName
  name: ComponentTypeName
  nameWithType: ComponentModel.ComponentTypeName
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ComponentTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId
  name: ContentTypeId
  nameWithType: ComponentModel.ContentTypeId
  fullName: Vasont.Inspire.Models.Components.ComponentModel.ContentTypeId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Components.ComponentModel.BinaryContent*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.BinaryContent
  name: BinaryContent
  nameWithType: ComponentModel.BinaryContent
  fullName: Vasont.Inspire.Models.Components.ComponentModel.BinaryContent
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Vasont.Inspire.Models.Components.ComponentModel.XmlContent*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.XmlContent
  name: XmlContent
  nameWithType: ComponentModel.XmlContent
  fullName: Vasont.Inspire.Models.Components.ComponentModel.XmlContent
- uid: Vasont.Inspire.Models.Components.ComponentRolePermissionModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentRolePermissionModel
  name: ComponentRolePermissionModel
  nameWithType: ComponentRolePermissionModel
  fullName: Vasont.Inspire.Models.Components.ComponentRolePermissionModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.RolePermissions*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.RolePermissions
  name: RolePermissions
  nameWithType: ComponentModel.RolePermissions
  fullName: Vasont.Inspire.Models.Components.ComponentModel.RolePermissions
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalPermissionModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalPermissionModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalPermissionModel>
  nameWithType: List<MinimalPermissionModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MinimalPermissionModel>
  nameWithType.vb: List(Of MinimalPermissionModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MinimalPermissionModel)
  name.vb: List(Of MinimalPermissionModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MinimalPermissionModel
    name: MinimalPermissionModel
    nameWithType: MinimalPermissionModel
    fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MinimalPermissionModel
    name: MinimalPermissionModel
    nameWithType: MinimalPermissionModel
    fullName: Vasont.Inspire.Models.Components.MinimalPermissionModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.Models.Components.ComponentUserPermissionModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentUserPermissionModel
  name: ComponentUserPermissionModel
  nameWithType: ComponentUserPermissionModel
  fullName: Vasont.Inspire.Models.Components.ComponentUserPermissionModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.UserPermissions*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.UserPermissions
  name: UserPermissions
  nameWithType: ComponentModel.UserPermissions
  fullName: Vasont.Inspire.Models.Components.ComponentModel.UserPermissions
- uid: Vasont.Inspire.Models.Components.FolderModel
  commentId: T:Vasont.Inspire.Models.Components.FolderModel
  name: FolderModel
  nameWithType: FolderModel
  fullName: Vasont.Inspire.Models.Components.FolderModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.Folders*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.Folders
  name: Folders
  nameWithType: ComponentModel.Folders
  fullName: Vasont.Inspire.Models.Components.ComponentModel.Folders
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalFolderModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalFolderModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalFolderModel>
  nameWithType: List<MinimalFolderModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MinimalFolderModel>
  nameWithType.vb: List(Of MinimalFolderModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MinimalFolderModel)
  name.vb: List(Of MinimalFolderModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MinimalFolderModel
    name: MinimalFolderModel
    nameWithType: MinimalFolderModel
    fullName: Vasont.Inspire.Models.Components.MinimalFolderModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MinimalFolderModel
    name: MinimalFolderModel
    nameWithType: MinimalFolderModel
    fullName: Vasont.Inspire.Models.Components.MinimalFolderModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Components.ComponentPropertyModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentPropertyModel
  name: ComponentPropertyModel
  nameWithType: ComponentPropertyModel
  fullName: Vasont.Inspire.Models.Components.ComponentPropertyModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.Properties*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.Properties
  name: Properties
  nameWithType: ComponentModel.Properties
  fullName: Vasont.Inspire.Models.Components.ComponentModel.Properties
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.ComponentPropertyModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.ComponentPropertyModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ComponentPropertyModel>
  nameWithType: List<ComponentPropertyModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.ComponentPropertyModel>
  nameWithType.vb: List(Of ComponentPropertyModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.ComponentPropertyModel)
  name.vb: List(Of ComponentPropertyModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.ComponentPropertyModel
    name: ComponentPropertyModel
    nameWithType: ComponentPropertyModel
    fullName: Vasont.Inspire.Models.Components.ComponentPropertyModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.ComponentPropertyModel
    name: ComponentPropertyModel
    nameWithType: ComponentPropertyModel
    fullName: Vasont.Inspire.Models.Components.ComponentPropertyModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Components.TagModel
  commentId: T:Vasont.Inspire.Models.Components.TagModel
  name: TagModel
  nameWithType: TagModel
  fullName: Vasont.Inspire.Models.Components.TagModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.Tags*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.Tags
  name: Tags
  nameWithType: ComponentModel.Tags
  fullName: Vasont.Inspire.Models.Components.ComponentModel.Tags
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.TagModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.TagModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TagModel>
  nameWithType: List<TagModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.TagModel>
  nameWithType.vb: List(Of TagModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.TagModel)
  name.vb: List(Of TagModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.TagModel
    name: TagModel
    nameWithType: TagModel
    fullName: Vasont.Inspire.Models.Components.TagModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.TagModel
    name: TagModel
    nameWithType: TagModel
    fullName: Vasont.Inspire.Models.Components.TagModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Components.ComponentModel.CreatedBy*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.CreatedBy
  name: CreatedBy
  nameWithType: ComponentModel.CreatedBy
  fullName: Vasont.Inspire.Models.Components.ComponentModel.CreatedBy
- uid: Vasont.Inspire.Models.Security.MicroUserModel
  commentId: T:Vasont.Inspire.Models.Security.MicroUserModel
  parent: Vasont.Inspire.Models.Security
  name: MicroUserModel
  nameWithType: MicroUserModel
  fullName: Vasont.Inspire.Models.Security.MicroUserModel
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy
  name: UpdatedBy
  nameWithType: ComponentModel.UpdatedBy
  fullName: Vasont.Inspire.Models.Components.ComponentModel.UpdatedBy
- uid: Vasont.Inspire.Models.Components.ComponentUserAccessModel
  commentId: T:Vasont.Inspire.Models.Components.ComponentUserAccessModel
  name: ComponentUserAccessModel
  nameWithType: ComponentUserAccessModel
  fullName: Vasont.Inspire.Models.Components.ComponentUserAccessModel
- uid: Vasont.Inspire.Models.Components.ComponentModel.UserAccesses*
  commentId: Overload:Vasont.Inspire.Models.Components.ComponentModel.UserAccesses
  name: UserAccesses
  nameWithType: ComponentModel.UserAccesses
  fullName: Vasont.Inspire.Models.Components.ComponentModel.UserAccesses
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalComponentUserAccessModel>
  nameWithType: List<MinimalComponentUserAccessModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel>
  nameWithType.vb: List(Of MinimalComponentUserAccessModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel)
  name.vb: List(Of MinimalComponentUserAccessModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel
    name: MinimalComponentUserAccessModel
    nameWithType: MinimalComponentUserAccessModel
    fullName: Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel
    name: MinimalComponentUserAccessModel
    nameWithType: MinimalComponentUserAccessModel
    fullName: Vasont.Inspire.Models.Components.MinimalComponentUserAccessModel
  - name: )
    nameWithType: )
    fullName: )
