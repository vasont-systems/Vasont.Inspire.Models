### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  commentId: T:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  id: ComponentAttributeValueModel
  parent: Vasont.Inspire.Models.Components.Schema
  children:
  - Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId
  - Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId
  - Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display
  - Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups
  - Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder
  - Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value
  langs:
  - csharp
  - vb
  name: ComponentAttributeValueModel
  nameWithType: ComponentAttributeValueModel
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  type: Class
  source:
    remote:
      path: src/Components/Schema/ComponentAttributeValueModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: ComponentAttributeValueModel
    path: Components/Schema/ComponentAttributeValueModel.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nThis class defines the properties of a component configuration attribute value model.\n"
  example: []
  syntax:
    content: public class ComponentAttributeValueModel
    content.vb: Public Class ComponentAttributeValueModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId
  id: AttributeValueId
  parent: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  langs:
  - csharp
  - vb
  name: AttributeValueId
  nameWithType: ComponentAttributeValueModel.AttributeValueId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentAttributeValueModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: AttributeValueId
    path: Components/Schema/ComponentAttributeValueModel.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the identity of the attribute value.\n"
  example: []
  syntax:
    content: public long AttributeValueId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property AttributeValueId As Long
  overload: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId
  id: AttributeId
  parent: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  langs:
  - csharp
  - vb
  name: AttributeId
  nameWithType: ComponentAttributeValueModel.AttributeId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentAttributeValueModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: AttributeId
    path: Components/Schema/ComponentAttributeValueModel.cs
    startLine: 22
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the identity of the attribute that this value is associated with.\n"
  example: []
  syntax:
    content: public long AttributeId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property AttributeId As Long
  overload: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display
  id: Display
  parent: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  langs:
  - csharp
  - vb
  name: Display
  nameWithType: ComponentAttributeValueModel.Display
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentAttributeValueModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Display
    path: Components/Schema/ComponentAttributeValueModel.cs
    startLine: 27
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the simple display name of the value.\n"
  example: []
  syntax:
    content: public string Display { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Display As String
  overload: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value
  id: Value
  parent: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ComponentAttributeValueModel.Value
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentAttributeValueModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Value
    path: Components/Schema/ComponentAttributeValueModel.cs
    startLine: 32
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets the value.\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder
  id: SortOrder
  parent: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  langs:
  - csharp
  - vb
  name: SortOrder
  nameWithType: ComponentAttributeValueModel.SortOrder
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentAttributeValueModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: SortOrder
    path: Components/Schema/ComponentAttributeValueModel.cs
    startLine: 37
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets a sort order value for displaying the attribute value.\n"
  example: []
  syntax:
    content: public int SortOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SortOrder As Integer
  overload: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups
  commentId: P:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups
  id: Groups
  parent: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: ComponentAttributeValueModel.Groups
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups
  type: Property
  source:
    remote:
      path: src/Components/Schema/ComponentAttributeValueModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Groups
    path: Components/Schema/ComponentAttributeValueModel.cs
    startLine: 42
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Components.Schema
  summary: "\nGets or sets a list of profile attribute groups that are associated with the component attribute value.\n"
  example: []
  syntax:
    content: public List<ProfileAttributeGroupModel> Groups { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel}
    content.vb: Public Property Groups As List(Of ProfileAttributeGroupModel)
  overload: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Components.Schema
  commentId: N:Vasont.Inspire.Models.Components.Schema
  name: Vasont.Inspire.Models.Components.Schema
  nameWithType: Vasont.Inspire.Models.Components.Schema
  fullName: Vasont.Inspire.Models.Components.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId
  name: AttributeValueId
  nameWithType: ComponentAttributeValueModel.AttributeValueId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeValueId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId
  name: AttributeId
  nameWithType: ComponentAttributeValueModel.AttributeId
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.AttributeId
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display
  name: Display
  nameWithType: ComponentAttributeValueModel.Display
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Display
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value
  name: Value
  nameWithType: ComponentAttributeValueModel.Value
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Value
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder
  name: SortOrder
  nameWithType: ComponentAttributeValueModel.SortOrder
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.SortOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups*
  commentId: Overload:Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups
  name: Groups
  nameWithType: ComponentAttributeValueModel.Groups
  fullName: Vasont.Inspire.Models.Components.Schema.ComponentAttributeValueModel.Groups
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProfileAttributeGroupModel>
  nameWithType: List<ProfileAttributeGroupModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel>
  nameWithType.vb: List(Of ProfileAttributeGroupModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel)
  name.vb: List(Of ProfileAttributeGroupModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel
    name: ProfileAttributeGroupModel
    nameWithType: ProfileAttributeGroupModel
    fullName: Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel
    name: ProfileAttributeGroupModel
    nameWithType: ProfileAttributeGroupModel
    fullName: Vasont.Inspire.Models.Components.Schema.ProfileAttributeGroupModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
