### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel
  commentId: T:Vasont.Inspire.Models.Translations.TranslationBrowseResultModel
  id: TranslationBrowseResultModel
  parent: Vasont.Inspire.Models.Translations
  children:
  - Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount
  - Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations
  langs:
  - csharp
  - vb
  name: TranslationBrowseResultModel
  nameWithType: TranslationBrowseResultModel
  fullName: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel
  type: Class
  source:
    remote:
      path: src/Translations/TranslationBrowseResultModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: TranslationBrowseResultModel
    path: Translations/TranslationBrowseResultModel.cs
    startLine: 12
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Translations
  summary: "\nThis class represents the results of a translation browse query request.\n"
  example: []
  syntax:
    content: public class TranslationBrowseResultModel
    content.vb: Public Class TranslationBrowseResultModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount
  commentId: P:Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount
  id: TotalCount
  parent: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel
  langs:
  - csharp
  - vb
  name: TotalCount
  nameWithType: TranslationBrowseResultModel.TotalCount
  fullName: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount
  type: Property
  source:
    remote:
      path: src/Translations/TranslationBrowseResultModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: TotalCount
    path: Translations/TranslationBrowseResultModel.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Translations
  summary: "\nGets or sets the total number of translations.\n"
  example: []
  syntax:
    content: public long TotalCount { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TotalCount As Long
  overload: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations
  commentId: P:Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations
  id: Translations
  parent: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel
  langs:
  - csharp
  - vb
  name: Translations
  nameWithType: TranslationBrowseResultModel.Translations
  fullName: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations
  type: Property
  source:
    remote:
      path: src/Translations/TranslationBrowseResultModel.cs
      branch: feature/analyzefoldersinzipfile
      repo: https://github.com/vasont-systems/Vasont.Inspire.Models.git
    id: Translations
    path: Translations/TranslationBrowseResultModel.cs
    startLine: 22
  assemblies:
  - Vasont.Inspire.Models
  namespace: Vasont.Inspire.Models.Translations
  summary: "\nGets or sets the resulting translations from the query request.\n"
  example: []
  syntax:
    content: public List<MinimalTranslationJobModel> Translations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Translations.MinimalTranslationJobModel}
    content.vb: Public Property Translations As List(Of MinimalTranslationJobModel)
  overload: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Inspire.Models.Translations
  commentId: N:Vasont.Inspire.Models.Translations
  name: Vasont.Inspire.Models.Translations
  nameWithType: Vasont.Inspire.Models.Translations
  fullName: Vasont.Inspire.Models.Translations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount*
  commentId: Overload:Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount
  name: TotalCount
  nameWithType: TranslationBrowseResultModel.TotalCount
  fullName: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.TotalCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations*
  commentId: Overload:Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations
  name: Translations
  nameWithType: TranslationBrowseResultModel.Translations
  fullName: Vasont.Inspire.Models.Translations.TranslationBrowseResultModel.Translations
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Translations.MinimalTranslationJobModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Translations.MinimalTranslationJobModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MinimalTranslationJobModel>
  nameWithType: List<MinimalTranslationJobModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Translations.MinimalTranslationJobModel>
  nameWithType.vb: List(Of MinimalTranslationJobModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Translations.MinimalTranslationJobModel)
  name.vb: List(Of MinimalTranslationJobModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Translations.MinimalTranslationJobModel
    name: MinimalTranslationJobModel
    nameWithType: MinimalTranslationJobModel
    fullName: Vasont.Inspire.Models.Translations.MinimalTranslationJobModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Translations.MinimalTranslationJobModel
    name: MinimalTranslationJobModel
    nameWithType: MinimalTranslationJobModel
    fullName: Vasont.Inspire.Models.Translations.MinimalTranslationJobModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
